{"version":3,"file":"static/chunks/1157-8b0753cf2c4776c5.js","mappings":"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","sources":["webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/StakeActions.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardActions/index.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/AprRow.tsx","webpack://_N_E/./src/views/Pools/components/PoolControls/index.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/Cells/StakedCell.tsx","webpack://_N_E/./src/views/Pools/components/PoolsTable/PoolRow.tsx","webpack://_N_E/./src/views/Pools/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { Button, AutoRenewIcon, Skeleton, Pool } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { Token } from '@pancakeswap/sdk'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool.DeserializedPool<Token>\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<React.PropsWithChildren<ApprovalActionProps>> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, pendingTx } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={pendingTx}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import { Token } from '@pancakeswap/sdk'\nimport { Pool } from '@pancakeswap/uikit'\nimport StakeModal from '../../Modals/StakeModal'\n\nexport default Pool.withStakeActions<Token>(StakeModal)\n","import { Pool } from '@pancakeswap/uikit'\nimport CollectModal from '../../Modals/CollectModal'\n\nexport default Pool.withCollectModal(CollectModal)\n","import BigNumber from 'bignumber.js'\n\nimport styled from 'styled-components'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { Flex, Text, Box, Pool } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { useProfileRequirement } from 'views/Pools/hooks/useProfileRequirement'\nimport { Token } from '@pancakeswap/sdk'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\nimport { ProfileRequirementWarning } from '../../ProfileRequirementWarning'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool.DeserializedPool<Token>\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<React.PropsWithChildren<CardActionsProps>> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, poolCategory, userData, earningTokenPrice, profileRequirement } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  const { notMeetRequired, notMeetThreshold } = useProfileRequirement(profileRequirement)\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <>\n          <Box display=\"inline\">\n            <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n              {`${earningToken.symbol} `}\n            </InlineText>\n            <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n              {t('Earned')}\n            </InlineText>\n          </Box>\n          <HarvestActions\n            earnings={earnings}\n            earningTokenSymbol={earningToken.symbol}\n            earningTokenDecimals={earningToken.decimals}\n            sousId={sousId}\n            earningTokenPrice={earningTokenPrice}\n            isBnbPool={isBnbPool}\n            isLoading={isLoading}\n          />\n        </>\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {notMeetRequired || notMeetThreshold ? (\n          <ProfileRequirementWarning profileRequirement={profileRequirement} />\n        ) : needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import { Pool } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport Apr from 'views/Pools/components/Apr'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface AprRowProps {\n  pool: Pool.DeserializedPool<Token>\n  stakedBalance: BigNumber\n  performanceFee?: number\n  showIcon?: boolean\n  vaultKey?: boolean\n}\n\nconst AprRow: React.FC<React.PropsWithChildren<AprRowProps>> = ({\n  pool,\n  stakedBalance,\n  performanceFee = 0,\n  showIcon = true,\n}) => {\n  return (\n    <Pool.AprRowWithToolTip isVaultKey={Boolean(pool.vaultKey)}>\n      <Apr pool={pool} stakedBalance={stakedBalance} performanceFee={performanceFee} showIcon={showIcon} />\n    </Pool.AprRowWithToolTip>\n  )\n}\n\nexport default AprRow\n","import { useAccount } from 'wagmi'\nimport { Pool } from '@pancakeswap/uikit'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Token } from '@pancakeswap/sdk'\n\nconst POOL_START_BLOCK_THRESHOLD = (60 / BSC_BLOCK_TIME) * 4\n\nexport default function PoolControlsContainer(props) {\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const { address: account } = useAccount()\n  const initialBlock = useInitialBlock()\n  const threshHold = initialBlock > 0 ? initialBlock + POOL_START_BLOCK_THRESHOLD : 0\n\n  return (\n    <Pool.PoolControls<Token>\n      {...props}\n      stakedOnly={stakedOnly}\n      setStakedOnly={setStakedOnly}\n      viewMode={viewMode}\n      setViewMode={setViewMode}\n      account={account}\n      threshHold={threshHold}\n    />\n  )\n}\n","import styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints, Balance, Pool } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from '@pancakeswap/utils/formatBalance'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Token } from '@pancakeswap/sdk'\nimport CollectModal from '../../Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool.DeserializedPool<Token>\n  account: string\n}\n\nconst StyledCell = styled(Pool.BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<React.PropsWithChildren<EarningsCellProps>> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningTokenSymbol={earningToken.symbol}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <Pool.CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!pool.userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </Pool.CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import { useMemo } from 'react'\nimport { Flex, Skeleton, Text, Balance, Pool } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface TotalStakedCellProps {\n  pool: Pool.DeserializedPool<Token>\n}\n\nconst StyledCell = styled(Pool.BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<React.PropsWithChildren<TotalStakedCellProps>> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { stakingToken, totalStaked, vaultKey } = pool\n  const { totalCakeInVault } = useVaultPoolByKey(vaultKey)\n\n  const totalStakedBalance = useMemo(() => {\n    if (vaultKey) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [vaultKey, totalCakeInVault, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <Pool.CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </Pool.CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon, Balance, Pool } from '@pancakeswap/uikit'\nimport { getBlockExploreLink } from 'utils'\nimport { useCurrentBlock } from 'state/block/hooks'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface FinishCellProps {\n  pool: Pool.DeserializedPool<Token>\n}\n\nconst StyledCell = styled(Pool.BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<React.PropsWithChildren<FinishCellProps>> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const currentBlock = useCurrentBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBlockExploreLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingBlockData = !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const isLoadingPublicData = hasPoolStarted ? !totalStaked.gt(0) || isLoadingBlockData : isLoadingBlockData\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <Pool.CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </Pool.CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import { Box, Flex, Skeleton, Text, useMatchBreakpoints, Balance, Pool } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from '@pancakeswap/localization'\n\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { VaultKey } from 'state/types'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface StakedCellProps {\n  pool: Pool.DeserializedPool<Token>\n  account: string\n}\n\nconst StakedCell: React.FC<React.PropsWithChildren<StakedCellProps>> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  // vault\n  const vaultData = useVaultPoolByKey(pool.vaultKey)\n  const {\n    userData: {\n      userShares,\n      balance: { cakeAsBigNumber, cakeAsNumberBalance },\n      isLoading,\n    },\n  } = vaultData\n  const hasSharesStaked = userShares.gt(0)\n  const isVaultWithShares = pool.vaultKey && hasSharesStaked\n\n  // pool\n  const { stakingTokenPrice, stakingToken, userData } = pool\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const labelText = `${pool.stakingToken.symbol} ${\n    pool.vaultKey === VaultKey.CakeVault && (vaultData as Pool.DeserializedPoolLockedVault<Token>).userData.locked\n      ? t('Locked')\n      : t('Staked')\n  }`\n\n  const hasStaked = account && (stakedBalance.gt(0) || isVaultWithShares)\n\n  const userDataLoading = pool.vaultKey ? isLoading : !pool.userDataLoaded\n\n  return (\n    <Pool.BaseCell\n      role=\"cell\"\n      flex={\n        pool.vaultKey === VaultKey.CakeFlexibleSideVault\n          ? '1 0 162px'\n          : pool.vaultKey === VaultKey.CakeVault && !hasStaked\n          ? '1 0 120px'\n          : '2 0 100px'\n      }\n    >\n      <Pool.CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {userDataLoading && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasStaked ? 'primary' : 'textDisabled'}\n                  decimals={hasStaked ? 5 : 1}\n                  value={\n                    hasStaked\n                      ? pool.vaultKey\n                        ? Number.isNaN(cakeAsNumberBalance)\n                          ? 0\n                          : cakeAsNumberBalance\n                        : stakedTokenBalance\n                      : 0\n                  }\n                />\n                {hasStaked ? (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={pool.vaultKey ? stakedAutoDollarValue : stakedTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </Pool.CellContent>\n    </Pool.BaseCell>\n  )\n}\n\nexport default StakedCell\n","import { memo } from 'react'\nimport { useMatchBreakpoints, Pool } from '@pancakeswap/uikit'\nimport { usePool, useDeserializedPoolByVaultKey } from 'state/pools/hooks'\nimport { VaultKey } from 'state/types'\n\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\nimport StakedCell from './Cells/StakedCell'\n\nexport const VaultPoolRow: React.FC<\n  React.PropsWithChildren<{ vaultKey: VaultKey; account: string; initialActivity?: boolean }>\n> = memo(({ vaultKey, account, initialActivity }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const isXLargerScreen = isXl || isXxl\n  const pool = useDeserializedPoolByVaultKey(vaultKey)\n\n  return (\n    <Pool.ExpandRow\n      initialActivity={initialActivity}\n      panel={\n        <ActionPanel account={account} pool={pool} expanded breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }} />\n      }\n    >\n      <NameCell pool={pool} />\n      {isXLargerScreen && <AutoEarningsCell pool={pool} account={account} />}\n      {isXLargerScreen ? <StakedCell pool={pool} account={account} /> : null}\n      <AutoAprCell pool={pool} />\n      {isLargerScreen && <TotalStakedCell pool={pool} />}\n    </Pool.ExpandRow>\n  )\n})\n\nconst PoolRow: React.FC<React.PropsWithChildren<{ sousId: number; account: string; initialActivity?: boolean }>> = ({\n  sousId,\n  account,\n  initialActivity,\n}) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const { pool } = usePool(sousId)\n\n  return (\n    <Pool.ExpandRow\n      initialActivity={initialActivity}\n      panel={\n        <ActionPanel account={account} pool={pool} expanded breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }} />\n      }\n    >\n      <NameCell pool={pool} />\n      <EarningsCell pool={pool} account={account} />\n      {isLargerScreen && <TotalStakedCell pool={pool} />}\n      <AprCell pool={pool} />\n      {isDesktop && <EndsInCell pool={pool} />}\n    </Pool.ExpandRow>\n  )\n}\n\nexport default memo(PoolRow)\n","import styled from 'styled-components'\n\nimport { useAccount } from 'wagmi'\nimport { Heading, Flex, Image, Text, Link, FlexLayout, PageHeader, Loading, Pool, ViewMode } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { usePoolsPageFetch, usePoolsWithVault } from 'state/pools/hooks'\nimport Page from 'components/Layout/Page'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { Token } from '@pancakeswap/sdk'\nimport { TokenPairImage } from 'components/TokenImage'\n\nimport CardActions from './components/PoolCard/CardActions'\nimport AprRow from './components/PoolCard/AprRow'\nimport CardFooter from './components/PoolCard/CardFooter'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolControls from './components/PoolControls'\nimport PoolRow, { VaultPoolRow } from './components/PoolsTable/PoolRow'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst FinishedTextContainer = styled(Flex)`\n  padding-bottom: 32px;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst FinishedTextLink = styled(Link)`\n  font-weight: 400;\n  white-space: nowrap;\n  text-decoration: underline;\n`\n\nconst Pools: React.FC<React.PropsWithChildren> = () => {\n  const { t } = useTranslation()\n  const { address: account } = useAccount()\n  const { pools, userDataLoaded } = usePoolsWithVault()\n\n  usePoolsPageFetch()\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls pools={pools}>\n          {({ chosenPools, viewMode, stakedOnly, normalizedUrlSearch, showFinishedPools }) => (\n            <>\n              {showFinishedPools && (\n                <FinishedTextContainer>\n                  <Text fontSize={['16px', null, '20px']} color=\"failure\" pr=\"4px\">\n                    {t('Looking for v1 CAKE syrup pools?')}\n                  </Text>\n                  <FinishedTextLink href=\"/migration\" fontSize={['16px', null, '20px']} color=\"failure\">\n                    {t('Go to migration page')}.\n                  </FinishedTextLink>\n                </FinishedTextContainer>\n              )}\n              {account && !userDataLoaded && stakedOnly && (\n                <Flex justifyContent=\"center\" mb=\"4px\">\n                  <Loading />\n                </Flex>\n              )}\n              {viewMode === ViewMode.CARD ? (\n                <CardLayout>\n                  {chosenPools.map((pool) =>\n                    pool.vaultKey ? (\n                      <CakeVaultCard key={pool.vaultKey} pool={pool} showStakedOnly={stakedOnly} />\n                    ) : (\n                      <Pool.PoolCard<Token>\n                        key={pool.sousId}\n                        pool={pool}\n                        isStaked={Boolean(pool?.userData?.stakedBalance?.gt(0))}\n                        cardContent={\n                          account ? (\n                            <CardActions pool={pool} stakedBalance={pool?.userData?.stakedBalance} />\n                          ) : (\n                            <>\n                              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                                {t('Start earning')}\n                              </Text>\n                              <ConnectWalletButton />\n                            </>\n                          )\n                        }\n                        tokenPairImage={\n                          <TokenPairImage\n                            primaryToken={pool.earningToken}\n                            secondaryToken={pool.stakingToken}\n                            width={64}\n                            height={64}\n                          />\n                        }\n                        cardFooter={<CardFooter pool={pool} account={account} />}\n                        aprRow={<AprRow pool={pool} stakedBalance={pool?.userData?.stakedBalance} />}\n                      />\n                    ),\n                  )}\n                </CardLayout>\n              ) : (\n                <Pool.PoolsTable>\n                  {chosenPools.map((pool) =>\n                    pool.vaultKey ? (\n                      <VaultPoolRow\n                        initialActivity={normalizedUrlSearch.toLowerCase() === pool.earningToken.symbol?.toLowerCase()}\n                        key={pool.vaultKey}\n                        vaultKey={pool.vaultKey}\n                        account={account}\n                      />\n                    ) : (\n                      <PoolRow\n                        initialActivity={normalizedUrlSearch.toLowerCase() === pool.earningToken.symbol?.toLowerCase()}\n                        key={pool.sousId}\n                        sousId={pool.sousId}\n                        account={account}\n                      />\n                    ),\n                  )}\n                </Pool.PoolsTable>\n              )}\n              <Image\n                mx=\"auto\"\n                mt=\"12px\"\n                src=\"/images/decorations/3d-syrup-bunnies.png\"\n                alt=\"Pancake illustration\"\n                width={192}\n                height={184.5}\n              />\n            </>\n          )}\n        </PoolControls>\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[1157],{\n\n/***/ 81157:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ views_Pools; }\n});\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(92228);\n// EXTERNAL MODULE: ../../node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(52322);\n// EXTERNAL MODULE: ../../node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(3411);\n// EXTERNAL MODULE: ../../node_modules/wagmi/dist/wagmi.esm.js + 25 modules\nvar wagmi_esm = __webpack_require__(51523);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Layouts/Flex.tsx\nvar Flex = __webpack_require__(28543);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Flex.tsx\nvar Box_Flex = __webpack_require__(76903);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Link/Link.tsx\nvar Link = __webpack_require__(73697);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/PageHeader/PageHeader.tsx\nvar PageHeader = __webpack_require__(45349);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Heading/Heading.tsx + 1 modules\nvar Heading = __webpack_require__(48497);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(89495);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Loading/Loading.tsx\nvar Loading = __webpack_require__(8549);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/ToggleView/ToggleView.tsx\nvar ToggleView = __webpack_require__(97094);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/PoolCard.tsx\nvar PoolCard = __webpack_require__(51500);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/PoolsTable/index.tsx\nvar PoolsTable = __webpack_require__(66392);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Image/Image.tsx\nvar Image = __webpack_require__(96469);\n// EXTERNAL MODULE: ../../packages/localization/src/index.tsx + 6 modules\nvar src = __webpack_require__(65957);\n// EXTERNAL MODULE: ./src/state/pools/hooks.ts + 1 modules\nvar hooks = __webpack_require__(99225);\n// EXTERNAL MODULE: ./src/components/Layout/Page.tsx + 1 modules\nvar Page = __webpack_require__(98757);\n// EXTERNAL MODULE: ./src/components/ConnectWalletButton.tsx\nvar ConnectWalletButton = __webpack_require__(39480);\n// EXTERNAL MODULE: ./src/components/TokenImage/index.tsx\nvar TokenImage = __webpack_require__(46684);\n// EXTERNAL MODULE: ../../node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__(6391);\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n// EXTERNAL MODULE: ../../packages/utils/bigNumber.ts\nvar bigNumber = __webpack_require__(81834);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Box.tsx\nvar Box = __webpack_require__(13670);\n// EXTERNAL MODULE: ./src/config/constants/types.ts\nvar types = __webpack_require__(6429);\n// EXTERNAL MODULE: ./src/views/Pools/hooks/useProfileRequirement.ts\nvar useProfileRequirement = __webpack_require__(7818);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Skeleton/Skeleton.tsx + 1 modules\nvar Skeleton = __webpack_require__(74009);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Button/Button.tsx + 2 modules\nvar Button = __webpack_require__(48608);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/AutoRenew.tsx\nvar AutoRenew = __webpack_require__(73685);\n// EXTERNAL MODULE: ./src/hooks/useContract.ts + 1 modules\nvar useContract = __webpack_require__(76269);\n// EXTERNAL MODULE: ./src/views/Pools/hooks/useApprove.tsx + 1 modules\nvar useApprove = __webpack_require__(33431);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx\n\n\n\n\n\nvar ApprovalAction = function(param) {\n    var pool = param.pool, _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading;\n    var sousId = pool.sousId, stakingToken = pool.stakingToken, earningToken = pool.earningToken;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var stakingTokenContract = (0,useContract/* useERC20 */.X_)(stakingToken.address || \"\");\n    var ref = (0,useApprove/* useApprovePool */.iB)(stakingTokenContract, sousId, earningToken.symbol), handleApprove = ref.handleApprove, pendingTx = ref.pendingTx;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n        children: isLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n            width: \"100%\",\n            height: \"52px\"\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            isLoading: pendingTx,\n            endIcon: pendingTx ? /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoRenew/* default */.Z, {\n                spin: true,\n                color: \"currentColor\"\n            }) : null,\n            disabled: pendingTx,\n            onClick: handleApprove,\n            width: \"100%\",\n            children: t(\"Enable\")\n        })\n    });\n};\n/* harmony default export */ var CardActions_ApprovalAction = (ApprovalAction);\n\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/withStakeActions.tsx\nvar withStakeActions = __webpack_require__(55995);\n// EXTERNAL MODULE: ./src/views/Pools/components/Modals/StakeModal.tsx + 2 modules\nvar StakeModal = __webpack_require__(77187);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/StakeActions.tsx\n\n\n/* harmony default export */ var StakeActions = (withStakeActions/* withStakeActions */.H(StakeModal/* default */.Z));\n\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/withCollectModal.tsx\nvar withCollectModal = __webpack_require__(32093);\n// EXTERNAL MODULE: ./src/views/Pools/components/Modals/CollectModal.tsx + 1 modules\nvar CollectModal = __webpack_require__(42279);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/HarvestActions.tsx\n\n\n/* harmony default export */ var HarvestActions = (withCollectModal/* withCollectModal */.d(CollectModal/* default */.Z));\n\n// EXTERNAL MODULE: ./src/views/Pools/components/ProfileRequirementWarning.tsx\nvar ProfileRequirementWarning = __webpack_require__(28425);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/CardActions/index.tsx\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: inline;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nvar InlineText = (0,styled_components_browser_esm/* default */.ZP)(Text/* default */.Z).withConfig({\n    componentId: \"sc-cc99b1d5-0\"\n})(_templateObject());\nvar CardActions = function(param) {\n    var pool = param.pool, stakedBalance = param.stakedBalance;\n    var sousId = pool.sousId, stakingToken = pool.stakingToken, earningToken = pool.earningToken, poolCategory = pool.poolCategory, userData = pool.userData, earningTokenPrice = pool.earningTokenPrice, profileRequirement = pool.profileRequirement;\n    // Pools using native BNB behave differently than pools using a token\n    var isBnbPool = poolCategory === types/* PoolCategory.BINANCE */.jh.BINANCE;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var allowance = (userData === null || userData === void 0 ? void 0 : userData.allowance) ? new (bignumber_default())(userData.allowance) : bigNumber/* BIG_ZERO */.HW;\n    var stakingTokenBalance = (userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) ? new (bignumber_default())(userData.stakingTokenBalance) : bigNumber/* BIG_ZERO */.HW;\n    var earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new (bignumber_default())(userData.pendingReward) : bigNumber/* BIG_ZERO */.HW;\n    var needsApproval = !allowance.gt(0) && !isBnbPool;\n    var isStaked = stakedBalance.gt(0);\n    var isLoading = !userData;\n    var ref = (0,useProfileRequirement/* useProfileRequirement */.f)(profileRequirement), notMeetRequired = ref.notMeetRequired, notMeetThreshold = ref.notMeetThreshold;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n        flexDirection: \"column\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n            flexDirection: \"column\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                            display: \"inline\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                                    color: \"secondary\",\n                                    textTransform: \"uppercase\",\n                                    bold: true,\n                                    fontSize: \"12px\",\n                                    children: \"\".concat(earningToken.symbol, \" \")\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                                    color: \"textSubtle\",\n                                    textTransform: \"uppercase\",\n                                    bold: true,\n                                    fontSize: \"12px\",\n                                    children: t(\"Earned\")\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(HarvestActions, {\n                            earnings: earnings,\n                            earningTokenSymbol: earningToken.symbol,\n                            earningTokenDecimals: earningToken.decimals,\n                            sousId: sousId,\n                            earningTokenPrice: earningTokenPrice,\n                            isBnbPool: isBnbPool,\n                            isLoading: isLoading\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                    display: \"inline\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(InlineText, {\n                            color: isStaked ? \"secondary\" : \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: [\n                                isStaked ? stakingToken.symbol : t(\"Stake\"),\n                                \" \"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                            color: isStaked ? \"textSubtle\" : \"secondary\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: isStaked ? t(\"Staked\") : \"\".concat(stakingToken.symbol)\n                        })\n                    ]\n                }),\n                notMeetRequired || notMeetThreshold ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ProfileRequirementWarning/* ProfileRequirementWarning */.Q, {\n                    profileRequirement: profileRequirement\n                }) : needsApproval ? /*#__PURE__*/ (0,jsx_runtime.jsx)(CardActions_ApprovalAction, {\n                    pool: pool,\n                    isLoading: isLoading\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(StakeActions, {\n                    isLoading: isLoading,\n                    pool: pool,\n                    stakingTokenBalance: stakingTokenBalance,\n                    stakedBalance: stakedBalance,\n                    isBnbPool: isBnbPool,\n                    isStaked: isStaked\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var PoolCard_CardActions = (CardActions);\n\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/AprRowWithToolTip.tsx\nvar AprRowWithToolTip = __webpack_require__(9951);\n// EXTERNAL MODULE: ./src/views/Pools/components/Apr.tsx\nvar Apr = __webpack_require__(97421);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolCard/AprRow.tsx\n\n\n\nvar AprRow = function(param) {\n    var pool = param.pool, stakedBalance = param.stakedBalance, _performanceFee = param.performanceFee, performanceFee = _performanceFee === void 0 ? 0 : _performanceFee, _showIcon = param.showIcon, showIcon = _showIcon === void 0 ? true : _showIcon;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(AprRowWithToolTip/* AprRowWithToolTip */.b, {\n        isVaultKey: Boolean(pool.vaultKey),\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Apr/* default */.Z, {\n            pool: pool,\n            stakedBalance: stakedBalance,\n            performanceFee: performanceFee,\n            showIcon: showIcon\n        })\n    });\n};\n/* harmony default export */ var PoolCard_AprRow = (AprRow);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/CardFooter/index.tsx\nvar CardFooter = __webpack_require__(45249);\n// EXTERNAL MODULE: ./src/views/Pools/components/CakeVaultCard/index.tsx + 10 modules\nvar CakeVaultCard = __webpack_require__(5312);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(70865);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(96670);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(87394);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/PoolControls.tsx + 2 modules\nvar PoolControls = __webpack_require__(53975);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar user_hooks = __webpack_require__(72135);\n// EXTERNAL MODULE: ./src/state/block/hooks.ts\nvar block_hooks = __webpack_require__(26488);\n// EXTERNAL MODULE: ./src/config/index.ts\nvar config = __webpack_require__(7599);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolControls/index.tsx\n\n\n\n\n\n\n\n\n\nvar POOL_START_BLOCK_THRESHOLD = 60 / config/* BSC_BLOCK_TIME */.hJ * 4;\nfunction PoolControlsContainer(props) {\n    var ref = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserPoolStakedOnly */.tw)(), 2), stakedOnly = ref[0], setStakedOnly = ref[1];\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserPoolsViewMode */.Yi)(), 2), viewMode = ref1[0], setViewMode = ref1[1];\n    var ref2 = (0,wagmi_esm/* useAccount */.mA)(), account = ref2.address;\n    var initialBlock = (0,block_hooks/* useInitialBlock */.Xh)();\n    var threshHold = initialBlock > 0 ? initialBlock + POOL_START_BLOCK_THRESHOLD : 0;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolControls/* PoolControls */.t, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, props), {\n        stakedOnly: stakedOnly,\n        setStakedOnly: setStakedOnly,\n        viewMode: viewMode,\n        setViewMode: setViewMode,\n        account: account,\n        threshHold: threshHold\n    }));\n}\n\n// EXTERNAL MODULE: ../../node_modules/react/index.js\nvar react = __webpack_require__(2784);\n// EXTERNAL MODULE: ../../packages/uikit/src/contexts/MatchBreakpoints/useMatchBreakpoints.ts\nvar useMatchBreakpoints = __webpack_require__(62392);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/PoolsTable/ExpandRow.tsx\nvar ExpandRow = __webpack_require__(82528);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/NameCell.tsx\nvar NameCell = __webpack_require__(5251);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/Cells/BaseCell.tsx\nvar BaseCell = __webpack_require__(61203);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Modal/useModal.ts\nvar useModal = __webpack_require__(11298);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Balance/Balance.tsx\nvar Balance = __webpack_require__(64343);\n// EXTERNAL MODULE: ../../packages/utils/formatBalance.ts\nvar formatBalance = __webpack_require__(18426);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/EarningsCell.tsx\n\n\nfunction EarningsCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex: 4.5;\\n  \",\n        \" {\\n    flex: 1 0 120px;\\n  }\\n\"\n    ]);\n    EarningsCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\nvar StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* BaseCell */.q).withConfig({\n    componentId: \"sc-efcdf2ab-0\"\n})(EarningsCell_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar EarningsCell = function(param) {\n    var pool = param.pool, account = param.account;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var isMobile = (0,useMatchBreakpoints/* default */.Z)().isMobile;\n    var sousId = pool.sousId, earningToken = pool.earningToken, poolCategory = pool.poolCategory, userData = pool.userData, earningTokenPrice = pool.earningTokenPrice;\n    var earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new (bignumber_default())(userData.pendingReward) : bigNumber/* BIG_ZERO */.HW;\n    var earningTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings, earningToken.decimals);\n    var earningTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(earnings.multipliedBy(earningTokenPrice), earningToken.decimals);\n    var hasEarnings = account && earnings.gt(0);\n    var fullBalance = (0,formatBalance/* getFullDisplayBalance */.NJ)(earnings, earningToken.decimals);\n    var formattedBalance = (0,formatBalance/* formatNumber */.uf)(earningTokenBalance, 3, 3);\n    var isBnbPool = poolCategory === types/* PoolCategory.BINANCE */.jh.BINANCE;\n    var labelText = t(\"%asset% Earned\", {\n        asset: earningToken.symbol\n    });\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(CollectModal/* default */.Z, {\n        formattedBalance: formattedBalance,\n        fullBalance: fullBalance,\n        earningTokenSymbol: earningToken.symbol,\n        earningsDollarValue: earningTokenDollarBalance,\n        sousId: sousId,\n        isBnbPool: isBnbPool\n    })), 1), onPresentCollect = ref[0];\n    var handleEarningsClick = function(event) {\n        event.stopPropagation();\n        onPresentCollect();\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledCell, {\n        role: \"cell\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: labelText\n                }),\n                !pool.userDataLoaded && account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                            mr: \"8px\",\n                            height: \"32px\",\n                            onClick: hasEarnings ? handleEarningsClick : undefined,\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    mt: \"4px\",\n                                    bold: !isMobile,\n                                    fontSize: isMobile ? \"14px\" : \"16px\",\n                                    color: hasEarnings ? \"primary\" : \"textDisabled\",\n                                    decimals: hasEarnings ? 5 : 1,\n                                    value: hasEarnings ? earningTokenBalance : 0\n                                }),\n                                hasEarnings ? /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                                    children: earningTokenPrice > 0 && /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                        display: \"inline\",\n                                        fontSize: \"12px\",\n                                        color: \"textSubtle\",\n                                        decimals: 2,\n                                        prefix: \"~\",\n                                        value: earningTokenDollarBalance,\n                                        unit: \" USD\"\n                                    })\n                                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    mt: \"4px\",\n                                    fontSize: \"12px\",\n                                    color: \"textDisabled\",\n                                    children: \"0 USD\"\n                                })\n                            ]\n                        })\n                    })\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_EarningsCell = (EarningsCell);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/AprCell.tsx\nvar AprCell = __webpack_require__(51110);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx\n\nfunction TotalStakedCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex: 2 0 100px;\\n\"\n    ]);\n    TotalStakedCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\nvar TotalStakedCell_StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* BaseCell */.q).withConfig({\n    componentId: \"sc-3dd9e8e1-0\"\n})(TotalStakedCell_templateObject());\nvar TotalStakedCell = function(param) {\n    var pool = param.pool;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var stakingToken = pool.stakingToken, totalStaked = pool.totalStaked, vaultKey = pool.vaultKey;\n    var totalCakeInVault = (0,hooks/* useVaultPoolByKey */.eB)(vaultKey).totalCakeInVault;\n    var totalStakedBalance = (0,react.useMemo)(function() {\n        if (vaultKey) {\n            return (0,formatBalance/* getBalanceNumber */.mW)(totalCakeInVault, stakingToken.decimals);\n        }\n        return (0,formatBalance/* getBalanceNumber */.mW)(totalStaked, stakingToken.decimals);\n    }, [\n        vaultKey,\n        totalCakeInVault,\n        totalStaked,\n        stakingToken.decimals\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(TotalStakedCell_StyledCell, {\n        role: \"cell\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: t(\"Total staked\")\n                }),\n                totalStaked && totalStaked.gte(0) ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                    height: \"20px\",\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                        fontSize: \"16px\",\n                        value: totalStakedBalance,\n                        decimals: 0,\n                        unit: \" \".concat(stakingToken.symbol)\n                    })\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_TotalStakedCell = (TotalStakedCell);\n\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Timer.tsx\nvar Timer = __webpack_require__(70581);\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(5305);\n// EXTERNAL MODULE: ./src/views/Pools/helpers.tsx\nvar helpers = __webpack_require__(9681);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/EndsInCell.tsx\n\nfunction EndsInCell_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  flex: 2 0 100px;\\n\"\n    ]);\n    EndsInCell_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\nvar EndsInCell_StyledCell = (0,styled_components_browser_esm/* default */.ZP)(BaseCell/* BaseCell */.q).withConfig({\n    componentId: \"sc-645c663f-0\"\n})(EndsInCell_templateObject());\nvar EndsInCell = function(param) {\n    var pool = param.pool;\n    var sousId = pool.sousId, totalStaked = pool.totalStaked, startBlock = pool.startBlock, endBlock = pool.endBlock, isFinished = pool.isFinished;\n    var currentBlock = (0,block_hooks/* useCurrentBlock */.je)();\n    var t = (0,src/* useTranslation */.$G)().t;\n    var ref = (0,helpers/* getPoolBlockInfo */.zy)(pool, currentBlock), shouldShowBlockCountdown = ref.shouldShowBlockCountdown, blocksUntilStart = ref.blocksUntilStart, blocksRemaining = ref.blocksRemaining, hasPoolStarted = ref.hasPoolStarted, blocksToDisplay = ref.blocksToDisplay;\n    var isCakePool = sousId === 0;\n    var renderBlocks = shouldShowBlockCountdown ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n        alignItems: \"center\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n                flex: \"1.3\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                        fontSize: \"16px\",\n                        value: blocksToDisplay,\n                        decimals: 0\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        ml: \"4px\",\n                        textTransform: \"lowercase\",\n                        children: t(\"Blocks\")\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                flex: \"1\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Link/* default */.Z, {\n                    external: true,\n                    href: (0,utils/* getBlockExploreLink */.C)(hasPoolStarted ? endBlock : startBlock, \"countdown\"),\n                    onClick: function(e) {\n                        return e.stopPropagation();\n                    },\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Timer/* default */.Z, {\n                        ml: \"4px\"\n                    })\n                })\n            })\n        ]\n    }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n        children: \"-\"\n    });\n    // A bit hacky way to determine if public data is loading relying on totalStaked\n    // Opted to go for this since we don't really need a separate publicDataLoaded flag\n    // anywhere else\n    var isLoadingBlockData = !currentBlock || !blocksRemaining && !blocksUntilStart;\n    var isLoadingPublicData = hasPoolStarted ? !totalStaked.gt(0) || isLoadingBlockData : isLoadingBlockData;\n    var showLoading = isLoadingPublicData && !isCakePool && !isFinished;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(EndsInCell_StyledCell, {\n        role: \"cell\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: hasPoolStarted || !shouldShowBlockCountdown ? t(\"Ends in\") : t(\"Starts in\")\n                }),\n                showLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                }) : renderBlocks\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_EndsInCell = (EndsInCell);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx + 4 modules\nvar ActionPanel = __webpack_require__(1108);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx\nvar AutoEarningsCell = __webpack_require__(42863);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx\nvar AutoAprCell = __webpack_require__(14085);\n// EXTERNAL MODULE: ./src/state/types.ts\nvar state_types = __webpack_require__(93638);\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/Cells/StakedCell.tsx\n\n\n\n\n\n\n\n\nvar StakedCell = function(param) {\n    var pool = param.pool, account = param.account;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var isMobile = (0,useMatchBreakpoints/* default */.Z)().isMobile;\n    // vault\n    var vaultData = (0,hooks/* useVaultPoolByKey */.eB)(pool.vaultKey);\n    var _userData = vaultData.userData, userShares = _userData.userShares, _balance = _userData.balance, cakeAsBigNumber = _balance.cakeAsBigNumber, cakeAsNumberBalance = _balance.cakeAsNumberBalance, isLoading = _userData.isLoading;\n    var hasSharesStaked = userShares.gt(0);\n    var isVaultWithShares = pool.vaultKey && hasSharesStaked;\n    // pool\n    var stakingTokenPrice = pool.stakingTokenPrice, stakingToken = pool.stakingToken, userData = pool.userData;\n    var stakedAutoDollarValue = (0,formatBalance/* getBalanceNumber */.mW)(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n    var stakedBalance = (userData === null || userData === void 0 ? void 0 : userData.stakedBalance) ? new (bignumber_default())(userData.stakedBalance) : bigNumber/* BIG_ZERO */.HW;\n    var stakedTokenBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance, stakingToken.decimals);\n    var stakedTokenDollarBalance = (0,formatBalance/* getBalanceNumber */.mW)(stakedBalance.multipliedBy(stakingTokenPrice), stakingToken.decimals);\n    var labelText = \"\".concat(pool.stakingToken.symbol, \" \").concat(pool.vaultKey === state_types/* VaultKey.CakeVault */.om.CakeVault && vaultData.userData.locked ? t(\"Locked\") : t(\"Staked\"));\n    var hasStaked = account && (stakedBalance.gt(0) || isVaultWithShares);\n    var userDataLoading = pool.vaultKey ? isLoading : !pool.userDataLoaded;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(BaseCell/* BaseCell */.q, {\n        role: \"cell\",\n        flex: pool.vaultKey === state_types/* VaultKey.CakeFlexibleSideVault */.om.CakeFlexibleSideVault ? \"1 0 162px\" : pool.vaultKey === state_types/* VaultKey.CakeVault */.om.CakeVault && !hasStaked ? \"1 0 120px\" : \"2 0 100px\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(BaseCell/* CellContent */.J, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    fontSize: \"12px\",\n                    color: \"textSubtle\",\n                    textAlign: \"left\",\n                    children: labelText\n                }),\n                userDataLoading && account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                    width: \"80px\",\n                    height: \"16px\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                            mr: \"8px\",\n                            height: \"32px\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    mt: \"4px\",\n                                    bold: !isMobile,\n                                    fontSize: isMobile ? \"14px\" : \"16px\",\n                                    color: hasStaked ? \"primary\" : \"textDisabled\",\n                                    decimals: hasStaked ? 5 : 1,\n                                    value: hasStaked ? pool.vaultKey ? Number.isNaN(cakeAsNumberBalance) ? 0 : cakeAsNumberBalance : stakedTokenBalance : 0\n                                }),\n                                hasStaked ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    display: \"inline\",\n                                    fontSize: \"12px\",\n                                    color: \"textSubtle\",\n                                    decimals: 2,\n                                    prefix: \"~\",\n                                    value: pool.vaultKey ? stakedAutoDollarValue : stakedTokenDollarBalance,\n                                    unit: \" USD\"\n                                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    mt: \"4px\",\n                                    fontSize: \"12px\",\n                                    color: \"textDisabled\",\n                                    children: \"0 USD\"\n                                })\n                            ]\n                        })\n                    })\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var Cells_StakedCell = (StakedCell);\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/PoolsTable/PoolRow.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar VaultPoolRow = /*#__PURE__*/ (0,react.memo)(function(param) {\n    var vaultKey = param.vaultKey, account = param.account, initialActivity = param.initialActivity;\n    var ref = (0,useMatchBreakpoints/* default */.Z)(), isXs = ref.isXs, isSm = ref.isSm, isMd = ref.isMd, isLg = ref.isLg, isXl = ref.isXl, isXxl = ref.isXxl;\n    var isLargerScreen = isLg || isXl || isXxl;\n    var isXLargerScreen = isXl || isXxl;\n    var pool = (0,hooks/* useDeserializedPoolByVaultKey */.YX)(vaultKey);\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(ExpandRow/* ExpandRow */.A, {\n        initialActivity: initialActivity,\n        panel: /*#__PURE__*/ (0,jsx_runtime.jsx)(ActionPanel/* default */.Z, {\n            account: account,\n            pool: pool,\n            expanded: true,\n            breakpoints: {\n                isXs: isXs,\n                isSm: isSm,\n                isMd: isMd,\n                isLg: isLg,\n                isXl: isXl,\n                isXxl: isXxl\n            }\n        }),\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(NameCell/* default */.Z, {\n                pool: pool\n            }),\n            isXLargerScreen && /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoEarningsCell/* default */.Z, {\n                pool: pool,\n                account: account\n            }),\n            isXLargerScreen ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_StakedCell, {\n                pool: pool,\n                account: account\n            }) : null,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoAprCell/* default */.Z, {\n                pool: pool\n            }),\n            isLargerScreen && /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_TotalStakedCell, {\n                pool: pool\n            })\n        ]\n    });\n});\nvar PoolRow = function(param) {\n    var sousId = param.sousId, account = param.account, initialActivity = param.initialActivity;\n    var ref = (0,useMatchBreakpoints/* default */.Z)(), isXs = ref.isXs, isSm = ref.isSm, isMd = ref.isMd, isLg = ref.isLg, isXl = ref.isXl, isXxl = ref.isXxl, isDesktop = ref.isDesktop;\n    var isLargerScreen = isLg || isXl || isXxl;\n    var pool = (0,hooks/* usePool */.AI)(sousId).pool;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(ExpandRow/* ExpandRow */.A, {\n        initialActivity: initialActivity,\n        panel: /*#__PURE__*/ (0,jsx_runtime.jsx)(ActionPanel/* default */.Z, {\n            account: account,\n            pool: pool,\n            expanded: true,\n            breakpoints: {\n                isXs: isXs,\n                isSm: isSm,\n                isMd: isMd,\n                isLg: isLg,\n                isXl: isXl,\n                isXxl: isXxl\n            }\n        }),\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(NameCell/* default */.Z, {\n                pool: pool\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_EarningsCell, {\n                pool: pool,\n                account: account\n            }),\n            isLargerScreen && /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_TotalStakedCell, {\n                pool: pool\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(AprCell/* default */.Z, {\n                pool: pool\n            }),\n            isDesktop && /*#__PURE__*/ (0,jsx_runtime.jsx)(Cells_EndsInCell, {\n                pool: pool\n            })\n        ]\n    });\n};\n/* harmony default export */ var PoolsTable_PoolRow = (/*#__PURE__*/(0,react.memo)(PoolRow));\n\n;// CONCATENATED MODULE: ./src/views/Pools/index.tsx\n\nfunction Pools_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  justify-content: center;\\n\"\n    ]);\n    Pools_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  padding-bottom: 32px;\\n  flex-direction: column;\\n  \",\n        \" {\\n    flex-direction: row;\\n  }\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  font-weight: 400;\\n  white-space: nowrap;\\n  text-decoration: underline;\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar CardLayout = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-1c90c2e7-0\"\n})(Pools_templateObject());\nvar FinishedTextContainer = (0,styled_components_browser_esm/* default */.ZP)(Box_Flex/* default */.Z).withConfig({\n    componentId: \"sc-1c90c2e7-1\"\n})(_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.md;\n});\nvar FinishedTextLink = (0,styled_components_browser_esm/* default */.ZP)(Link/* default */.Z).withConfig({\n    componentId: \"sc-1c90c2e7-2\"\n})(_templateObject2());\nvar Pools = function() {\n    var t = (0,src/* useTranslation */.$G)().t;\n    var ref = (0,wagmi_esm/* useAccount */.mA)(), account = ref.address;\n    var ref1 = (0,hooks/* usePoolsWithVault */.f6)(), pools = ref1.pools, userDataLoaded = ref1.userDataLoaded;\n    (0,hooks/* usePoolsPageFetch */.l7)();\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(PageHeader/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                    justifyContent: \"space-between\",\n                    flexDirection: [\n                        \"column\",\n                        null,\n                        null,\n                        \"row\"\n                    ],\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box_Flex/* default */.Z, {\n                        flex: \"1\",\n                        flexDirection: \"column\",\n                        mr: [\n                            \"8px\",\n                            0\n                        ],\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                as: \"h1\",\n                                scale: \"xxl\",\n                                color: \"secondary\",\n                                mb: \"24px\",\n                                children: t(\"Syrup Pools\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                scale: \"md\",\n                                color: \"text\",\n                                children: t(\"Just stake some tokens to earn.\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Heading/* default */.Z, {\n                                scale: \"md\",\n                                color: \"text\",\n                                children: t(\"High APR, low risk.\")\n                            })\n                        ]\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Page/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolControlsContainer, {\n                    pools: pools,\n                    children: function(param) {\n                        var chosenPools = param.chosenPools, viewMode = param.viewMode, stakedOnly = param.stakedOnly, normalizedUrlSearch = param.normalizedUrlSearch, showFinishedPools = param.showFinishedPools;\n                        /*#__PURE__*/ return (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                            children: [\n                                showFinishedPools && /*#__PURE__*/ (0,jsx_runtime.jsxs)(FinishedTextContainer, {\n                                    children: [\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            fontSize: [\n                                                \"16px\",\n                                                null,\n                                                \"20px\"\n                                            ],\n                                            color: \"failure\",\n                                            pr: \"4px\",\n                                            children: t(\"Looking for v1 CAKE syrup pools?\")\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(FinishedTextLink, {\n                                            href: \"/migration\",\n                                            fontSize: [\n                                                \"16px\",\n                                                null,\n                                                \"20px\"\n                                            ],\n                                            color: \"failure\",\n                                            children: [\n                                                t(\"Go to migration page\"),\n                                                \".\"\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                account && !userDataLoaded && stakedOnly && /*#__PURE__*/ (0,jsx_runtime.jsx)(Box_Flex/* default */.Z, {\n                                    justifyContent: \"center\",\n                                    mb: \"4px\",\n                                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Loading/* default */.Z, {})\n                                }),\n                                viewMode === ToggleView/* ViewMode.CARD */.w.CARD ? /*#__PURE__*/ (0,jsx_runtime.jsx)(CardLayout, {\n                                    children: chosenPools.map(function(pool) {\n                                        var ref, ref1, ref2, ref3;\n                                        return pool.vaultKey ? /*#__PURE__*/ (0,jsx_runtime.jsx)(CakeVaultCard/* default */.Z, {\n                                            pool: pool,\n                                            showStakedOnly: stakedOnly\n                                        }, pool.vaultKey) : /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCard/* PoolCard */.A, {\n                                            pool: pool,\n                                            isStaked: Boolean(pool === null || pool === void 0 ? void 0 : (ref = pool.userData) === null || ref === void 0 ? void 0 : (ref1 = ref.stakedBalance) === null || ref1 === void 0 ? void 0 : ref1.gt(0)),\n                                            cardContent: account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCard_CardActions, {\n                                                pool: pool,\n                                                stakedBalance: pool === null || pool === void 0 ? void 0 : (ref2 = pool.userData) === null || ref2 === void 0 ? void 0 : ref2.stakedBalance\n                                            }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                        mb: \"10px\",\n                                                        textTransform: \"uppercase\",\n                                                        fontSize: \"12px\",\n                                                        color: \"textSubtle\",\n                                                        bold: true,\n                                                        children: t(\"Start earning\")\n                                                    }),\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {})\n                                                ]\n                                            }),\n                                            tokenPairImage: /*#__PURE__*/ (0,jsx_runtime.jsx)(TokenImage/* TokenPairImage */.q, {\n                                                primaryToken: pool.earningToken,\n                                                secondaryToken: pool.stakingToken,\n                                                width: 64,\n                                                height: 64\n                                            }),\n                                            cardFooter: /*#__PURE__*/ (0,jsx_runtime.jsx)(CardFooter/* default */.Z, {\n                                                pool: pool,\n                                                account: account\n                                            }),\n                                            aprRow: /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCard_AprRow, {\n                                                pool: pool,\n                                                stakedBalance: pool === null || pool === void 0 ? void 0 : (ref3 = pool.userData) === null || ref3 === void 0 ? void 0 : ref3.stakedBalance\n                                            })\n                                        }, pool.sousId);\n                                    })\n                                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolsTable/* PoolsTable */.N, {\n                                    children: chosenPools.map(function(pool) {\n                                        var ref, ref1;\n                                        return pool.vaultKey ? /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultPoolRow, {\n                                            initialActivity: normalizedUrlSearch.toLowerCase() === ((ref = pool.earningToken.symbol) === null || ref === void 0 ? void 0 : ref.toLowerCase()),\n                                            vaultKey: pool.vaultKey,\n                                            account: account\n                                        }, pool.vaultKey) : /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolsTable_PoolRow, {\n                                            initialActivity: normalizedUrlSearch.toLowerCase() === ((ref1 = pool.earningToken.symbol) === null || ref1 === void 0 ? void 0 : ref1.toLowerCase()),\n                                            sousId: pool.sousId,\n                                            account: account\n                                        }, pool.sousId);\n                                    })\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Image/* default */.Z, {\n                                    mx: \"auto\",\n                                    mt: \"12px\",\n                                    src: \"/images/decorations/3d-syrup-bunnies.png\",\n                                    alt: \"Pancake illustration\",\n                                    width: 192,\n                                    height: 184.5\n                                })\n                            ]\n                        });\n                    }\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ var views_Pools = (Pools);\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","d","views_Pools","_tagged_template_literal","jsx_runtime","styled_components_browser_esm","wagmi_esm","Flex","Box_Flex","Link","PageHeader","Heading","Text","Loading","ToggleView","PoolCard","PoolsTable","Image","src","hooks","Page","ConnectWalletButton","TokenImage","bignumber","bignumber_default","n","bigNumber","Box","types","useProfileRequirement","Skeleton","Button","AutoRenew","useContract","useApprove","ApprovalAction","param","pool","_isLoading","isLoading","sousId","stakingToken","earningToken","t","$G","stakingTokenContract","X_","address","ref","iB","symbol","handleApprove","pendingTx","jsx","Fragment","children","Z","width","height","endIcon","spin","color","disabled","onClick","withStakeActions","StakeModal","StakeActions","H","withCollectModal","CollectModal","HarvestActions","ProfileRequirementWarning","_templateObject","data","InlineText","ZP","withConfig","componentId","CardActions","stakedBalance","poolCategory","userData","earningTokenPrice","profileRequirement","isBnbPool","jh","BINANCE","allowance","HW","stakingTokenBalance","earnings","pendingReward","needsApproval","gt","isStaked","f","notMeetRequired","notMeetThreshold","flexDirection","jsxs","display","textTransform","bold","fontSize","concat","earningTokenSymbol","earningTokenDecimals","decimals","Q","AprRowWithToolTip","Apr","AprRow","_performanceFee","performanceFee","_showIcon","showIcon","b","isVaultKey","Boolean","vaultKey","CardFooter","CakeVaultCard","_object_spread","_object_spread_props","_sliced_to_array","PoolControls","user_hooks","block_hooks","POOL_START_BLOCK_THRESHOLD","config","hJ","PoolControlsContainer","props","tw","stakedOnly","setStakedOnly","ref1","Yi","viewMode","setViewMode","account","ref2","mA","initialBlock","Xh","threshHold","react","useMatchBreakpoints","ExpandRow","NameCell","BaseCell","useModal","Balance","formatBalance","EarningsCell_templateObject","StyledCell","q","theme","mediaQueries","sm","EarningsCell","isMobile","earningTokenBalance","mW","earningTokenDollarBalance","multipliedBy","hasEarnings","fullBalance","NJ","formattedBalance","uf","labelText","asset","onPresentCollect","earningsDollarValue","handleEarningsClick","event","stopPropagation","role","J","textAlign","userDataLoaded","mr","undefined","mt","value","prefix","unit","AprCell","TotalStakedCell_templateObject","TotalStakedCell_StyledCell","TotalStakedCell","totalStaked","totalCakeInVault","eB","totalStakedBalance","useMemo","gte","alignItems","Timer","utils","helpers","EndsInCell_templateObject","EndsInCell_StyledCell","EndsInCell","startBlock","endBlock","isFinished","currentBlock","je","zy","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","renderBlocks","flex","ml","external","href","C","e","isLoadingPublicData","showLoading","ActionPanel","AutoEarningsCell","AutoAprCell","state_types","StakedCell","vaultData","_userData","userShares","_balance","balance","cakeAsBigNumber","cakeAsNumberBalance","hasSharesStaked","isVaultWithShares","stakingTokenPrice","stakedAutoDollarValue","stakedTokenBalance","stakedTokenDollarBalance","om","CakeVault","locked","hasStaked","userDataLoading","CakeFlexibleSideVault","Number","isNaN","VaultPoolRow","memo","initialActivity","isXs","isSm","isMd","isLg","isXl","isXxl","isXLargerScreen","YX","A","panel","expanded","breakpoints","isLargerScreen","PoolRow","isDesktop","AI","PoolsTable_PoolRow","Pools_templateObject","_templateObject1","_templateObject2","CardLayout","FinishedTextContainer","md","FinishedTextLink","f6","pools","l7","justifyContent","as","scale","mb","chosenPools","normalizedUrlSearch","showFinishedPools","pr","w","CARD","map","ref3","showStakedOnly","cardContent","tokenPairImage","primaryToken","secondaryToken","cardFooter","aprRow","N","toLowerCase","mx","alt"],"sourceRoot":""}