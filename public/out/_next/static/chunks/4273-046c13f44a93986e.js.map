{"version":3,"file":"static/chunks/4273-046c13f44a93986e.js","mappings":"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AA9B,CAAA,CAAAuB,QAAA,CAAAS,MAAA,+CACA,CAAAhC,CAAA,CAAAuB,QAAA,CAAAU,IAAA,gEAAAlC,CAAA,CAAAC,CAAA,CAAAkC,CAAA,ECtMAjC,MAAA,CAAAC,cAAA,CAAAF,CAAA,aAAiC,EAAAG,KAAA,MACjCH,CAAA,CAAAmC,yBAAiB,CAAO,KAAC,CAAQ,KACjCC,CAAA,CAAAF,CAAA,QACAG,CAAA,EACA,CACAC,MAAA,EACA,CACAC,YAAA,4BACAC,IAAA,mBACaC,IAAA,WACb,EACA,CACAC,eAAA,cACKD,IAAA,eACL,CACA,CACAE,SAAA,IACAL,MAAA,EACA,CACAM,OAAA,IACAL,YAAA,WACAC,IAAA,OACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,cACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,SACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,SACAC,IAAA,QACaC,IAAA,SACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,UACaC,IAAA,WACb,EACA,CACAD,IAAA,gBACKC,IAAA,SACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,CACA,CACAF,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,EACA,CACAD,IAAA,gBACAK,OAAA,IACAH,eAAA,cACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,kBACAK,OAAA,EACA,CACAN,YAAA,4BACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,EACA,OACAN,CAAA,QACAW,eAAA,GACA,WAAAV,CAAA,CAAAW,KAAA,CAAAC,SAAA,CAAAX,CAAA,SAEAY,OAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,WAAAf,CAAA,CAAAgB,QAAA,CAAAF,CAAA,CAAAb,CAAA,CAAAc,CAAA,GAEA,CACA,CAAAhB,yBAAA,CAAAA,CAAA,CAAAA,CAAA,CAAAkB,GAAA,CAAAhB,CAAA,iBAAAtC,CAAA,CAAAC,CAAA,CAAAkC,CAAA,EC7IAjC,MAAA,CAAAC,cAAA,CAAsBF,CAAA,eAAAG,KAAA,MACtBH,CAAA,CAAAsD,cAAiB,YACjBlB,CAAA,CAAAF,CAAA,QACAG,CAAA,EACA,CACAkB,QAAA,IACAjB,MAAA,IACAE,IAAA,QACAK,OAAA,EACA,CACAL,IAAA,IACaC,IAAA,UACb,EACA,CACAe,OAAA,IACAd,eAAA,QACKD,IAAA,YACL,CACA,CACAc,QAAA,IACAjB,MAAA,EACA,CACAE,IAAA,YACaC,IAAA,WACb,CACA,CACAD,IAAA,UACaC,IAAA,WACb,EACA,CACAD,IAAA,WACAK,OAAA,EACA,CACAL,IAAA,IACaC,IAAA,QACb,EACA,CACAe,OAAA,IACAd,eAAA,cACKD,IAAA,YACL,CACA,CACAc,QAAA,IACAjB,MAAA,IACAE,IAAA,eACAK,OAAA,EACA,CACAL,IAAA,IACaC,IAAA,WACb,EACA,CACAe,OAAA,IACAd,eAAA,QACKD,IAAA,YACL,CACA,CACAc,QAAA,IACAjB,MAAA,EACA,CACAE,IAAA,SACaC,IAAA,WACb,CACA,CACAD,IAAA,OACaC,IAAA,WACb,CACA,CACAD,IAAA,UACaC,IAAA,WACb,EACA,CACAD,IAAA,gBACAK,OAAA,EACA,CACAL,IAAA,IACaC,IAAA,QACb,EACA,CACAe,OAAA,IACAd,eAAA,cACKD,IAAA,YACL,CACA,CACAc,QAAA,IACAjB,MAAA,IACAE,IAAA,YACAK,OAAA,EACA,CACAL,IAAA,IACaC,IAAA,SACb,EACA,CACAe,OAAA,IACAd,eAAA,QACKD,IAAA,YACL,CACA,CACAc,QAAA,IACAjB,MAAA,EACA,CACAE,IAAA,UACaC,IAAA,WACb,EACA,CACAD,IAAA,aACAK,OAAA,EACA,CACAL,IAAA,WACaC,IAAA,WACb,EACA,CACAe,OAAA,IACAd,eAAA,QACKD,IAAA,YACL,CACA,CACAc,QAAA,IACAjB,MAAA,IACAE,IAAA,UACAK,OAAA,EACA,CACAL,IAAA,IACaC,IAAA,UACb,EACA,CACAe,OAAA,IACAd,eAAA,QACKD,IAAA,YACL,CACA,CACAc,QAAA,IACAjB,MAAA,EACA,CACAE,IAAA,OACaC,IAAA,WACb,CACA,CACAD,IAAA,UACaC,IAAA,WACb,EACA,CACAD,IAAA,YACAK,OAAA,EACA,CACAL,IAAA,IACaC,IAAA,QACb,EACA,CACAe,OAAA,IACAd,eAAA,cACKD,IAAA,YACL,CACA,CACAc,QAAA,IACAjB,MAAA,EACA,CACAE,IAAA,UACaC,IAAA,WACb,CACA,CACAD,IAAA,YACaC,IAAA,WACb,EACA,CACAD,IAAA,aACAK,OAAA,EACA,CACAL,IAAA,IACaC,IAAA,WACb,EACA,CACAe,OAAA,IACAd,eAAA,QACKD,IAAA,YACL,CACA,CACAe,OAAA,IACAd,eAAA,WACKD,IAAA,YACL,CACA,CACAE,SAAA,IACAL,MAAA,EACA,CACAM,OAAA,IACAJ,IAAA,SACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAJ,IAAA,WACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAJ,IAAA,SACaC,IAAA,WACb,EACA,CACAD,IAAA,YACKC,IAAA,SACL,CACA,CACAE,SAAA,IACAL,MAAA,EACA,CACAM,OAAA,IACAJ,IAAA,QACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAJ,IAAA,MACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAJ,IAAA,SACaC,IAAA,WACb,EACA,CACAD,IAAA,YACKC,IAAA,SACL,EACA,OACAa,CAAA,QACAR,eAAA,GACA,WAAAV,CAAA,CAAAW,KAAA,CAAAC,SAAA,CAAAX,CAAA,SAEAY,OAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,WAAAf,CAAA,CAAAgB,QAAA,CAAAF,CAAA,CAAAb,CAAA,CAAAc,CAAA,GAEA,CACA,CAAAG,cAAA,CAAAA,CAAA,CAAAA,CAAA,CAAAD,GAAA,CAAAhB,CAAA,iBAAAtC,CAAA,CAAAC,CAAA,CAAAkC,CAAA,ECzOAjC,MAAA,CAAAC,cAAA,CAAAF,CAAA,aAAkC,EAAAG,KAAA,MAClCH,CAAA,CAAAyD,0BAAiB,CAAQ,KAAQ,MACjCrB,CAAA,CAAAF,CAAA,QACAG,CAAA,EACA,CACAM,SAAA,IACAL,MAAA,EACA,CACAM,OAAA,IACAL,YAAA,WACAC,IAAA,QACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,EACA,CACAD,IAAA,cACKC,IAAA,SACL,CACA,CACAE,SAAA,IACAL,MAAA,EACA,CACAM,OAAA,IACAL,YAAA,WACAC,IAAA,QACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,EACA,CACAD,IAAA,kBACKC,IAAA,SACL,CACA,CACAE,SAAA,IACAL,MAAA,EACA,CACAM,OAAA,IACAL,YAAA,WACAC,IAAA,QACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,CACA,CACAG,OAAA,IACAL,YAAA,SACAC,IAAA,YACaC,IAAA,SACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,EACA,CACAD,IAAA,iBACKC,IAAA,SACL,CACA,CACAH,MAAA,IACAE,IAAA,eACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,oBACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,CACA,CACAF,YAAA,SACAC,IAAA,YACaC,IAAA,SACb,EACA,CACAD,IAAA,mBACAK,OAAA,EACA,CACAN,YAAA,QACAC,IAAA,IACaC,IAAA,QACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,oBACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,EACA,CACAD,IAAA,eACAK,OAAA,IACAH,eAAA,cACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,EACA,CACAD,IAAA,eACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,cACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,SACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,QACaC,IAAA,SACb,CACA,CACAF,YAAA,WACAC,IAAA,UACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,EACA,CACAD,IAAA,cACAK,OAAA,IACAH,eAAA,WACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,CACA,CACAF,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,EACA,CACAD,IAAA,kBACAK,OAAA,EACA,CACAN,YAAA,SACAC,IAAA,IACaC,IAAA,SACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,oBACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,CACA,CACAF,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,EACA,CACAD,IAAA,oBACAK,OAAA,EACA,CACAN,YAAA,SACAC,IAAA,IACaC,IAAA,SACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAD,IAAA,eACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,oBACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,CACA,CACAF,YAAA,SACAC,IAAA,cACaC,IAAA,SACb,CACA,CACAF,YAAA,SACAC,IAAA,YACaC,IAAA,SACb,EACA,CACAD,IAAA,gBACAK,OAAA,IACAH,eAAA,cACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,oBACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,EACA,CACAD,IAAA,cACAK,OAAA,EACA,CACAN,YAAA,QACAC,IAAA,IACaC,IAAA,QACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,oBACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,EACA,CACAD,IAAA,SACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,oBACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,eACaC,IAAA,WACb,CACA,CACAF,YAAA,mBACAC,IAAA,UACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,SACaC,IAAA,SACb,EACA,CACAD,IAAA,gBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAC,eAAA,WACKD,IAAA,WACL,EACA,OACAgB,CAAA,QACAX,eAAA,GACA,WAAAV,CAAA,CAAAW,KAAA,CAAAC,SAAA,CAAAX,CAAA,SAEAY,OAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,WAAAf,CAAA,CAAAgB,QAAA,CAAAF,CAAA,CAAAb,CAAA,CAAAc,CAAA,GAEA,CACA,CAAAM,0BAAA,CAAAA,CAAA,CAAAA,CAAA,CAAAJ,GAAA,CAAAhB,CAAA,iBAAAtC,CAAA,CAAAC,CAAA,CAAAkC,CAAA,EChjBAjC,MAAA,CAAAC,cAAA,CAAAF,CAA0B,eAAAG,KAAA,MAC1BH,CAAA,CAAA0D,kBAAiB,YACjBtB,CAAA,CAAAF,CAAA,QACAG,CAAA,EACA,CACAC,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,eACaC,IAAA,WACb,EACA,CACAC,eAAA,cACKD,IAAA,eACL,CACA,CACAE,SAAA,IACAL,MAAA,EACA,CACAM,OAAA,IACAL,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,cACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,cACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,SACAC,IAAA,YACaC,IAAA,SACb,EACA,CACAD,IAAA,kBACKC,IAAA,SACL,CACA,CACAE,SAAA,IACAL,MAAA,EACA,CACAM,OAAA,IACAL,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAG,OAAA,IACAL,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,EACA,CACAD,IAAA,kBACKC,IAAA,SACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,SACaC,IAAA,WACb,EACA,CACAD,IAAA,iBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,mBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,MACaC,IAAA,WACb,EACA,CACAD,IAAA,iBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,eACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,MACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,SACaC,IAAA,WACb,EACA,CACAD,IAAA,YACAK,OAAA,EACA,CACAN,YAAA,SACAC,IAAA,QACaC,IAAA,SACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,SACaC,IAAA,WACb,EACA,CACAD,IAAA,gBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,SACaC,IAAA,WACb,EACA,CACAD,IAAA,gBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,QACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,gBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,kBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,eACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,gBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,gBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,cACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,IACAE,IAAA,iBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAD,IAAA,oBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAD,IAAA,oBACAK,OAAA,EACA,CACAN,YAAA,WACAC,IAAA,IACaC,IAAA,WACb,EACA,CACAC,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAqB,UAAA,EACA,CACApB,YAAA,QACAC,IAAA,gBACqBC,IAAA,QACrB,CACA,CACAF,YAAA,QACAC,IAAA,iBACqBC,IAAA,QACrB,CACA,CACAF,YAAA,WACAC,IAAA,YACqBC,IAAA,WACrB,CACA,CACAF,YAAA,WACAC,IAAA,UACqBC,IAAA,WACrB,CACA,CACAF,YAAA,WACAC,IAAA,SACqBC,IAAA,WACrB,CACA,CACAF,YAAA,SACAC,IAAA,QACqBC,IAAA,SACrB,EACA,CACAF,YAAA,qCACAC,IAAA,QACaC,IAAA,WACb,EACA,CACAD,IAAA,aACAK,OAAA,EACA,CACAN,YAAA,UACAC,IAAA,cACaC,IAAA,UACb,CACA,CACAF,YAAA,WACAC,IAAA,YACaC,IAAA,WACb,EACA,CACAC,eAAA,WACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,cACaC,IAAA,WACb,CACA,CACAkB,UAAA,EACA,CACApB,YAAA,WACAC,IAAA,UACqBC,IAAA,WACrB,CACA,CACAF,YAAA,WACAC,IAAA,UACqBC,IAAA,WACrB,EACA,CACAF,YAAA,gCACAC,IAAA,YACaC,IAAA,WACb,CACA,CACAF,YAAA,QACAC,IAAA,UACaC,IAAA,QACb,EACA,CACAD,IAAA,iBACAK,OAAA,IACAH,eAAA,cACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,SACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,gBACaC,IAAA,WACb,CACA,CACAF,YAAA,SACAC,IAAA,cACaC,IAAA,SACb,CACA,CACAF,YAAA,QACAC,IAAA,UACaC,IAAA,QACb,EACA,CACAD,IAAA,yBACAK,OAAA,IACAH,eAAA,cACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,WACaC,IAAA,WACb,CACA,CACAF,YAAA,WACAC,IAAA,UACaC,IAAA,WACb,EACA,CACAD,IAAA,mBACAK,OAAA,IACAH,eAAA,QACKD,IAAA,YACL,CACA,CACAH,MAAA,EACA,CACAC,YAAA,WACAC,IAAA,eACaC,IAAA,WACb,EACA,CACAD,IAAA,qBACAK,OAAA,IACAH,eAAA,QACKD,IAAA,YACL,EACA,OACAiB,CAAA,QACAZ,eAAA,GACA,WAAAV,CAAA,CAAAW,KAAA,CAAAC,SAAA,CAAAX,CAAA,SAEAY,OAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,WAAAf,CAAA,CAAAgB,QAAA,CAAAF,CAAA,CAAAb,CAAA,CAAAc,CAAA,GAEA,CACA,CAAAO,kBAAA,CAAAA,CAAA,CAAAA,CAAA,CAAAL,GAAA,CAAAhB,CAAA,iBAAAtC,CAAA,CAAAC,CAAA,CAAAkC,CAAA,EC5eAjC,MAAA,CAAAC,cAAA,CAAAF,CAA6B,eAAAG,KAAA,KAAkC,CAC/DH,CAAA,CAAA0D,kBAAuB,CAAA1D,CAAA,CAAAyD,0BAAoC,CAAAzD,CAAA,CAAAmC,yBAAA,CAAAnC,CAAA,CAAAsD,cAAA,YAC3DM,CAAA,CAAA1B,CAAA,QACAjC,MAAA,CAAAC,cAAA,CAAAF,CAAA,iBAAkC,EAAA6D,UAA+C,IAAAC,GAAA,mBAAAF,CAAA,CAAAN,cAAA,QACjFS,CAAA,CAAA7B,CAAA,QACAjC,MAAA,CAAAC,cAAA,CAAAF,CAAA,4BAA2C,CAAwC,CAAA6D,UAAA,IAAAC,GAAA,mBAAAC,CAAA,CAAA5B,yBAAA,QACnF6B,CAAA,CAAA9B,CAAA,QACAjC,MAAA,CAAAC,cAAA,CAAAF,CAA2B,6BAAwC,EAAA6D,UAAA,IAAAC,GAAA,mBAAAE,CAAA,CAAAP,0BAAA,QACnEQ,CAAA,CAAA/B,CAAA,QAAgJjC,MAAA,CAAAC,cAAA,CAAAF,CAAA,uBAAA6D,UAAA,IAAAC,GAAA,mBAAAG,CAAA,CAAAP,kBAAA,oBAAA3D,CAAA,CAAAC,CAAA,CAAAkC,CAAA,ECRhJjC,MAAA,CAAAC,cAAoB,CAAAF,CAAA,aAAgB,EAAAG,KAAA,GAAuB,EAAG,CAC9DH,CAAA,CAAAkE,SAAgB,CAAAlE,CAAA,CAAA+C,KAAA,CAAQ/C,CAAO,CAAAmE,eAAA,CAAAnE,CAAA,CAAAoE,qBAAA,CAAApE,CAAA,CAAAqE,wBAAA,CAAArE,CAAA,CAAAsE,iBAAA,YAC/BC,CAAA,CAAArC,CAAqB,KAAO,CAAC,KAC7BsC,CAAA,CAAAtC,CAAA,QACAjC,MAAA,CAAAC,cAAA,CAAAF,CAAA,sBAAA6D,UAA6D,IAAAC,GAAA,mBAAqCU,CAAA,CAAAF,iBAAA,IAClGrE,MAAA,CAAAC,cAAA,CAAAF,CAAyB,2BAA4B,EAAA6D,UAAA,IAAAC,GAAA,mBAAAU,CAAA,CAAAH,wBAAA,QACrDI,CAAA,CAAAvC,CAAA,QACAjC,MAAA,CAAAC,cAAc,CAAAF,CAAA,wBAAiB,EAAA6D,UAAA,IAAAC,GAAA,mBAAAW,CAAA,CAAAL,qBAAA,QAC/BM,CAAA,CAAAxC,CAAA,OACAjC,MAAA,CAAAC,cAAA,CAAAF,CAA0B,kBAAQ,CAAS,CAAA6D,UAAA,IAAAC,GAAA,mBAAAY,CAAA,CAAAP,eAAA,IAC3C,GAAAI,CAAA,CAAAI,YAAa,EAAAzC,CAA6B,QAAAlC,CAAO,CAAC,CAClDA,CAAA,CAAA+C,KAAA,EAAiB,EAAAwB,CAAA,CAAAK,YAAA,EAAA1C,CAA6B,KAAQ,GAAalC,CAAA,CAAAkE,SAAA,IAAAK,CAAA,CAAAK,YAAA,EAAA1C,CAAA,yBAAAnC,CAAA,CAAAC,CAAA,CAAAkC,CAAA,ECXnEjC,MAAA,CAAAC,cAAA,CAAAF,CAA4B,eAAAG,KAAA,MAC5BH,CAAA,CAAAsE,iBAAgB,CAAAtE,CAAO,CAAC6E,4BAAO,CAAA7E,CAAA,CAAAqE,wBAAA,YAC/BE,CAAA,CAAArC,CAAiB,CAAO,IAAC,EACzBE,CAAA,CAAAF,CAA4B,QAC5B4C,CAAA,CAA0B5C,CAAQ,MAAgC,EAClE6C,CAAoB,CAAA7C,CAAsB,QAC1C8C,CAAgB,CAAA9C,CAAQ,MAAoB,EAC5C+C,CAAA,CAAA/C,CAAkB,MAAQ,EAC1BgD,CAAA,CAAgBhD,CAAQ,MAAU,EAClCwC,CAAA,CAAAxC,CAAA,OACAmC,CAAA,EAAAc,CAAA,CAAAC,CAAA,GACAJ,CAAA,CAAA/D,gBAAA,CAAAkE,CAAA,EAAAE,QAAA,CAAAD,CAAA,EAEApF,CAAA,CAAAqE,wBAAA,CAAAA,CAAA,CAIArE,CAAA,CAAA6E,4BAAA,CAHA,GACAM,CAAA,EAAAH,CAAA,CAAAzD,QAAA,CAAAI,OAAA,EAAAwD,CAAA,EAAAH,CAAA,CAAAzD,QAAA,CAAAM,MAAA,CAwbyB7B,CAAA,CAAAsE,iBAAA,CArbzB,MACAgB,YAAAH,CAAA,CAAAhC,CAAA,CAAAiC,CAAA,CAAAG,CAAA,KACA,IAAAC,CAAA,IACAJ,CAAA,MAAApF,CAAA,CAAAqE,wBAAA,EAAAc,CAAA,CAAAC,CAAA,EACA,8CAEAG,CAAA,EACAH,CAAAA,CAAA,MAAApF,CAAA,CAAA6E,4BAAA,EAAAM,CAAA,GACA,mJAEA,KAAAM,QAAA,CAAAN,CAAA,CACA,KAAAO,aAAA,CAAAV,CAAA,CAAA1D,cAAA,CAAA6D,CAAA,EACA,KAAAQ,YAAA,CAAAX,CAAA,CAAA5D,oBAAA,CAAA+D,CAAA,EACA,KAAAS,YAAA,CAAAZ,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,KAAAU,OAAA,CAAAd,CAAA,CAAAe,MAAA,CAAAC,QAAA,CAAA5C,CAAA,EACAA,CAAA,CACA6C,KAAAA,CAAA,CACA,KAAAC,SAAA,CAAAnB,CAAA,CAAAoB,QAAA,CAAAC,UAAA,CAAAhD,CAAA,EACAA,CAAA,CACA4B,CAAA,CAAAe,MAAA,CAAAC,QAAA,CAAA5C,CAAA,EACAA,CAAA,CAAAiD,QAAA,CACAJ,KAAAA,CAAA,CACA,KAAAK,kBAAA,MAAAR,OAAA,CACAZ,CAAA,CAAAxB,0BAAA,CAAAR,OAAA,CAAA+B,CAAA,CAAAnE,2BAAA,MAAA4E,QAAA,OAAAI,OAAA,EACA,KAAAI,SAAA,CACAhB,CAAA,CAAAxB,0BAAA,CAAAR,OAAA,CAAA+B,CAAA,CAAAnE,2BAAA,MAAA4E,QAAA,OAAAQ,SAAA,EACA,IAAA7D,CAAA,CAAAgB,QAAA,CAAA4B,CAAA,CAAAnE,2BAAA,MAAA4E,QAAA,EAAAR,CAAA,CAAAxB,0BAAA,CAAAX,eAAA,IACA,KAAAwD,cAAA,CAAAf,CAAA,CACAP,CAAA,CAAArE,4CAAA,MAAA8E,QAAA,EACAT,CAAA,CAAApE,kCAAA,MAAA6E,QAAA,EACA,KAAAc,QAAA,CAAAnB,CAAA,CACA,KAAAoB,eAAA,CAAApB,CAAA,CACA,OAAAI,CAAAA,CAAA,CAAAR,CAAA,CAAA7D,kBAAA,MAAAsE,QAAA,EAAAL,CAAA,IAAAI,KAAA,IAAAA,CAAA,QAAAA,CAAA,CAAAiB,WAAA,GACAT,KAAAA,CAAA,CACA,KAAAU,qBAAA,CAAAnB,CAAA,CACA,KAAAoB,WAAA,KAAAvE,CAAA,CAAAW,KAAA,CAAA6D,QAAA,CACA,KAAAC,iBAAA,MAAAhB,OAAA,CACAZ,CAAA,CAAA9C,yBAAA,CAAAc,OAAA,CAAA+B,CAAA,CAAAtE,sCAAA,MAAA+E,QAAA,OAAAI,OAAA,EACA,KAAAI,SAAA,CACAhB,CAAA,CAAA9C,yBAAA,CAAAc,OAAA,CAAA+B,CAAA,CAAAtE,sCAAA,MAAA+E,QAAA,OAAAQ,SAAA,EACA,IAAA7D,CAAA,CAAAgB,QAAA,CAAA4B,CAAA,CAAAtE,sCAAA,MAAA+E,QAAA,EAAAR,CAAA,CAAA9C,yBAAA,CAAAW,eAAA,QAEAgE,YAAA,GACA,YAAApB,aAAA,KAEAqB,WAAA,GACA,YAAApB,YAAA,KAEAR,OAAA,GACA,YAAAM,QAAA,KAEAuB,MAAA,GACA,YAAAnB,OAAA,KAEAO,QAAA,GACA,YAAAH,SAAA,KAEAgB,WAAA,GACA,YAAArB,YAAA,KAEAR,OAAA,GACA,YAAAmB,QAAA,KAEAW,cAAA,GACA,YAAAV,eAAA,KAEAW,aAAA,GACA,YAAAb,cAAA,KAEAc,QAAA,GACA,YAAAf,kBAAA,KAEAgB,gBAAA,GACA,YAAAR,iBAAA,KAEAtB,oBAAA,GACA,YAAAmB,qBAAA,CAEAY,0BAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,KACA,SAAArD,CAAoB,CAAAsD,SAAU,iCAC9B,IAAAC,OAAA,CAAAA,CAAA,aAAAC,oCAAA,CAAAR,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,SACSE,CAAA,CACT,EAEAC,oCAAA,CAAAR,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAO,CAAA,CAAAL,CAAA,CAAAC,CAAA,KACA,IAAApC,CAAA,OACA,GAAAjB,CAAA,CAAAsD,SAAA,iCACA,IAAAI,CAAA,CAAA7F,CAAA,CAAAW,KAAA,CAAAmF,OAAA,CAAA9F,CAAA,CAAAW,KAAA,CAAAoF,WAAA,MAAAC,OAAA,UAEAC,CAAoB,8BAAuC,EAAAJ,CAAA,GAC3D,CAAoBK,UAAA,CAAYC,CAAA,CAAArF,OAAA,CAAAsF,CAAA,MAAApG,CAAA,CAAAqG,MAAA,CAAAJ,CAAA,EAChC,CAAAX,SAAA,CAAAA,CAAA,OAAAgB,kCAAA,CAAAV,CAAA,EACAF,CAAA,YAAAa,iBAAA,CAAApB,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAa,CAAA,CAAAf,CAAA,CAAAC,CAAA,CAAAa,CAAA,CAAAX,CAAA,EACAgB,CAAA,MAAApC,eAAA,CACA,KAAAG,WAAA,CAAAkC,MAAA,kCAAArB,CAAA,CAAAE,CAAA,MAAAlB,eAAA,GACA,KAAAG,WAAA,CAAAkC,MAAA,wBAAArB,CAAA,CAAAE,CAAA,SACA,CACAI,OAAA,CAAAA,CAAA,CACAS,MAAA,CAAAA,CAAA,CACAC,OAAA,CAAAA,CAAA,CACAM,KAAA,EACAC,EAAA,MAAAC,OAAA,EACAC,MAAA,MAAA3C,cAAA,CACAiB,UAAA,CAAAA,CAAA,CACAI,KAAA,CAAAA,CAAA,CACAa,OAAA,CAAAA,CAAA,CACqBU,IAAA,CAAAN,CAAA,CACrB,EACAK,MAAA,MAAA3C,cAAA,CAAAG,WAAA,GACAyC,IAAA,CAAAN,CAAA,CACArB,UAAA,CAAAA,CAAA,CAAAd,WAAA,GACAe,WAAA,CAAAA,CAAA,CAAAf,WAAA,GACAkB,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACA+B,OAAA,CAAAA,CAAA,CAAA/B,WAAA,GACAgB,WAAA,CAAAA,CAAA,CAAA0B,QAAA,GACAzB,SAAA,CAAAA,CAAA,CAAAyB,QAAA,GACAC,iBAAA,CAAApB,CAAA,CAAAmB,QAAA,GACAE,SAAA,CAAAvB,CAAA,CAAAoB,IAAA,CAAAC,QAAA,GACAZ,MAAA,CAAAA,CAAA,CAAA9B,WAAA,GACiBrB,OAAA,QAAAI,CAAAA,CAAA,MAAAgB,eAAA,GAAAhB,KAAA,IAAAA,CAAA,CAAAA,CAAA,MACjB,CACS,CACT,EAEA8D,gBAAA,CAAA/B,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAE,CAAA,IAAA2B,CAAA,EACA,SAAAhF,CAAA,CAAAsD,SAAA,iCACA,SAAAhC,OAAA,CACA,6BACA8B,CAAA,YAAA9B,OAAA,CAAA2D,UAAA,GACAC,CAAA,YAAAnC,0BAAA,CAAAC,CAAA,CAAAC,CAA8E,CAAAC,CAAgB,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,SACrF,KAAA/B,OAAA,CAAA6D,eAAA,CAAAzJ,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAJ,CAAA,GAAAK,EAAA,CAAAH,CAAA,CAAAG,EAAA,CAAAV,IAAA,CAAAO,CAAA,CAAAP,IAAA,CAAA/I,KAAA,CAAAiC,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAL,CAAA,CAAAtJ,KAAA,KACT,EAEA4J,4BAAA,CAAAjB,CAAA,CAAAkB,CAAA,EACA,SAAAzF,CAAA,CAAAsD,SAAA,iCACA,SAAAxB,kBAAA,CACA,kDACA,CAAAyC,CAAA,CAAAvB,UAAA,CACA,0CACA,CAAAuB,CAAA,CAAAN,OAAA,CACA,sCACA,CAAAM,CAAA,CAAAtB,WAAA,CACA,2CACA,CAAAsB,CAAA,CAAApB,SAAA,CACA,wCACA,CAAAoB,CAAA,CAAAnB,KAAA,CACA,2BACA,CAAAmB,CAAA,CAAAG,MAAA,CACA,qCACAe,CAAA,EACA,IAAAC,CAAA,YAAAA,aAAA,CAAAnB,CAAA,KACA,CAAAmB,CAAA,CACA,+DACA,IACAf,CAAA,MAAA7C,kBAAA,CAAA6D,SAAA,CAAAC,kBAAA,gBAAArB,CAAA,CAAAG,MAAA,CAAAH,CAAA,CAAAvB,UAAA,CAAAuB,CAAA,CAAAnB,KAAA,CAAAmB,CAAA,CAAAN,OAAA,CAAAM,CAAA,CAAAI,IAAA,SACA,CACAA,IAAA,CAAAA,CAAA,CACAU,EAAA,MAAAvD,kBAAA,CAAAnD,OAAA,CACA/C,KAAA,CAAAiC,CAAA,CAAA8B,SAAA,CAAAkG,IAAA,CACS,CACT,EAEAC,gBAAA,CAAAvB,CAAA,CAAAkB,CAAA,CAAAT,CAAA,EACA,SAAAhF,CAAA,CAAAsD,SAAA,iCACA,SAAAhC,OAAA,CACA,4BACA,MAAAQ,kBAAA,CACA,mDACAiE,CAAA,CAAAxB,CAAA,IACAA,CAAA,CAAAC,EAAA,CACA,IACA,IAAAwB,CAAA,OAAAC,OAAA,CAAAC,IAAA,EACA,KAAAC,QAAA,CAAA5B,CAAA,CAAAC,EAAA,EACA,IAAAyB,OAAA,IAAAG,UAAA,CAAAC,CAAA,OAAAC,IAAA,MACyB,uBACzB,GACA,KACAN,CAAA,EACA,GAAAA,WAAA,GAAAA,CAAA,CAAAO,MAAA,CACA,+DAAAP,CAAA,CAAAO,MAAA,oCAAAP,CAAA,CAAAQ,eAAA,OAEAR,UAAA,GAAAA,CAAA,CAAAO,MAAA,CACA,+DAAAP,CAAA,CAAAO,MAAA,iCAAAP,CAAA,CAAAS,cAAA,IAEAV,CAAA,CAAArK,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAb,CAAA,EAAAyB,CAAA,EACA,CAGA,MAAAU,CAAA,MAEA,CAAAX,CAAA,CAAA/C,UAAA,CACA,0CACA,CAAA+C,CAAA,CAAA9B,OAAA,CACA,sCACA,CAAA8B,CAAA,CAAA9C,WAAA,CACA,2CACA,CAAA8C,CAAA,CAAA5C,SAAA,CACA,wCACA,CAAA4C,CAAA,CAAApB,IAAA,CACA,mCACA,CAAAoB,CAAA,CAAArB,MAAA,CACA,qCACAe,CAAA,EACA,IAAAC,CAAA,YAAAA,aAAA,CAAAK,CAAA,KACA,CAAAL,CAAA,CACA,+DACA,IACAtC,CAAA,YAAA9B,OAAA,CAAA2D,UAAA,MACA7B,CAAA,CAAAlB,WAAA,KAAAqC,CAAA,CAAAnB,KAAA,CAAAlB,WAAA,GACA,gDACA,KAAAJ,kBAAA,CAAA6E,WAAA,CAAAZ,CAAA,CAAArB,MAAA,CAAAqB,CAAA,CAAA/C,UAAA,CAAA+C,CAAA,CAAA3C,KAAA,CAAA2C,CAAA,CAAA9B,OAAA,CAAA8B,CAAA,CAAApB,IAAA,CAAAK,MAAAA,CAAA,CAAAA,CAAA,EACa4B,QAAA,IAAAzG,CAAA,CAAAP,eAAA,OAAAsB,QAAA,UACJ,EACT,EAEA2F,kBAAA,CAAA7D,CAAA,CAAA8D,CAAA,CAAA9B,CAAA,EACA,SAAAhF,CAAA,CAAAsD,SAAA,iCACA,SAAAhC,OAAA,CACA,gCACA0D,CAAA,CACAtE,CAAA,CAAA3B,cAAA,CAAAL,OAAA,CAAAsE,CAAA,MAAA1B,OAAA,EAAAyF,OAAA,MAAAzE,iBAAA,CAAA3D,OAAA,CAAAmI,CAAA,CAAA9B,CAAA,EACStE,CAAA,CAAA3B,cAAA,CAAAL,OAAA,CAAAsE,CAAA,MAAA1B,OAAA,EAAAyF,OAAA,MAAAzE,iBAAA,CAAA3D,OAAA,CAAAmI,CAAA,EACT,EAEApB,aAAA,CAAAnB,CAAA,EACA,SAAAvE,CAAA,CAAAsD,SAAA,iCACA,SAAA5B,SAAA,CACA,8BACA,MAAAI,kBAAA,CACA,kDACA,CAAAyC,CAAA,CAAAG,MAAA,CACA,qCACA,CAAAH,CAAA,CAAAvB,UAAA,CACA,0CACA,CAAAuB,CAAA,CAAAnB,KAAA,CACA,oCACA,CAAAmB,CAAA,CAAAN,OAAA,CACA,sCACA,CAAAM,CAAA,CAAAI,IAAA,CACA,uCACS,KAAA7C,kBAAA,CAAAkF,UAAA,CAAAzC,CAAA,CAAAG,MAAA,CAAAH,CAAA,CAAAvB,UAAA,CAAAuB,CAAA,CAAAnB,KAAA,CAAAmB,CAAA,CAAAN,OAAA,CAAAM,CAAA,CAAAI,IAAA,EACT,EAEAsC,eAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,KACA,IAAAC,CAAA,CAAA1J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,aACA,EACA1H,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA2B,CAAA,EACAO,GAAA,CAAAF,CAAA,EACAG,GAAA,CAAAN,CAAA,EACAK,GAAA,CAAA5J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA8B,CAAA,IACAK,GAAA,CAAA7J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA4B,CAAA,IACAvC,QAAA,GAGA/G,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA6B,CAAA,EACAK,GAAA,CAAAF,CAAA,EACAG,GAAA,CAAAR,CAAA,EACAO,GAAA,CAAA5J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA4B,CAAA,IACAO,GAAA,CAAA7J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA8B,CAAA,IACAzC,QAAA,GAGAT,kCAAA,CAAAwD,CAAA,CAAAC,CAAA,EACA,GAAAA,CAAA,EACA,CAAAC,MAAA,CAAAC,SAAA,CAAAF,CAAA,EACA,+DAEAG,CAAA,CAAAlK,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EACAF,GAAA,MAAAtG,aAAA,EACAuG,GAAA,MACAM,GAAA,IACAnK,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EAAAF,GAAA,MAAAtG,aAAA,EAAAuG,GAAA,MACA7J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,IACA/C,CAAA,CAAAoF,CAAA,CACA,KAAAxG,YAAA,CAAAwG,CAAA,CACA,KAAAxG,YAAA,CACA6G,CAAA,CAAApK,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EAAAF,GAAA,CAAAjF,CAAA,EAAAkF,GAAA,MACAvE,CAAA,CAAAtF,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EAAAO,GAAA,CAAAH,CAAA,EAAAG,GAAA,CAAAD,CAAA,QACA,CACA9E,SAAA,CAAAA,CAAA,CAAAyB,QAAA,GACAqD,QAAA,CAAAA,CAAA,CAAArD,QAAA,GACAmD,SAAA,CAAAA,CAAA,CAAAnD,QAAA,GACA,CAEAuD,oBAAA,CAAAhF,CAAA,CAAAyE,CAAA,EACA,IAAAG,CAAA,CAAAlK,CAAA,CAAAyH,SAAA,CAAAC,IAAA,MAAApE,aAAA,EACA8G,CAAA,CAAAL,CAAA,CACA/J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,MAAAnE,YAAA,CAAAwG,CAAA,EACA/J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,MAAAnE,YAAA,EACAgH,CAAA,CAAAL,CAAA,CAAAM,GAAA,CAAAJ,CAAA,EACApD,CAAA,CAAAhH,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAApC,CAAA,EACAsE,GAAA,MACAC,GAAA,CAAA7J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,MAAA2C,GAAA,CAAAE,CAAA,UACAvD,CAAA,CAAAD,QAAA,GAEA0D,iBAAA,CAAApF,CAAA,CAAAiE,CAAA,CAAAQ,CAAA,CAAAN,CAAA,CAAAkB,CAAA,KACA,IAAAhB,CAAA,CAAA1J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAgD,CAAA,CAAAlB,CAAA,CAAAF,CAAA,UACA,EACAtJ,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAArC,CAAA,EACAuE,GAAA,CAAAF,CAAA,EACAG,GAAA,CAAAC,CAAA,EACA/C,QAAA,GAGA/G,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EACAF,GAAA,CAAAF,CAAA,EACAG,GAAA,CAAAxE,CAAA,EACA0B,QAAA,GAGAuB,QAAA,CAAAqC,CAAA,EACA,SAAAxI,CAAA,CAAAsD,SAAA,iCACA,IAAAiB,CAAA,SAAA5D,CAAA,CAAA8H,UAAA,EAAAD,CAAA,MAAAtH,QAAA,SACA,EACAxF,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAb,CAAA,GAAAM,iBAAA,MAAAsD,oBAAA,CAAA5D,CAAA,CAAApB,SAAA,IAGA,KAEA,EAEAuF,SAAA,CAAAtF,CAAA,CAAAuF,CAAA,KACA,SAAA3I,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAAjI,CAAA,CAAAkI,WAAA,EAAAzF,CAAA,MAAAlC,QAAA,SACA0H,CAAA,CACAE,GAAA,IAAApN,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAb,CAAA,GAAAM,iBAAA,MAAAsD,oBAAA,CAAA5D,CAAA,CAAApB,SAAA,KACA4F,MAAA,IACA,KAAA/G,QAAA,GAAAuC,CAAA,CAAA1D,OAAA,GACA8H,CAAA,CAGA,MAAA3G,QAAA,EAAAuC,CAAA,CAAA1D,OAAA,QAAAoB,eAAA,CAES,CACT,EAEA+G,aAAA,CAAA5F,CAAA,CAAAuF,CAAA,KACA,SAAA3I,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAAjI,CAAA,CAAAsI,eAAA,EAAA7F,CAAA,MAAAlC,QAAA,SACA0H,CAAA,CACAE,GAAA,IAAApN,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAb,CAAA,GAAAM,iBAAA,MAAAsD,oBAAA,CAAA5D,CAAA,CAAApB,SAAA,KACA4F,MAAA,IACA,KAAA/G,QAAA,GAAAuC,CAAA,CAAA1D,OAAA,GACA8H,CAAA,CAGA,MAAA3G,QAAA,EAAAuC,CAAA,CAAA1D,OAAA,QAAAoB,eAAA,CAES,CACT,EAEAiH,aAAA,CAAA9F,CAAA,CAAAuF,CAAA,KACA,SAAA3I,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAAjI,CAAA,CAAAwI,eAAA,EAAA/F,CAAA,MAAAlC,QAAA,SACA0H,CAAA,CACAE,GAAA,IAAApN,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAb,CAAA,GAAAM,iBAAA,MAAAsD,oBAAA,CAAA5D,CAAA,CAAApB,SAAA,KACA4F,MAAA,IACA,KAAA/G,QAAA,GAAAuC,CAAA,CAAA1D,OAAA,GACA8H,CAAA,CAGA,MAAA3G,QAAA,EAAAuC,CAAA,CAAA1D,OAAA,QAAAoB,eAAA,CAES,CACT,EAEAmH,iBAAA,CAAAhG,CAAA,CAAAuF,CAAA,KACA,SAAA3I,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAAjI,CAAA,CAAA0I,mBAAA,EAAAjG,CAAA,MAAAlC,QAAA,SACA0H,CAAA,CACAE,GAAA,IAAApN,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAb,CAAA,GAAAM,iBAAA,MAAAsD,oBAAA,CAAA5D,CAAA,CAAApB,SAAA,KACA4F,MAAA,IACA,KAAA/G,QAAA,GAAAuC,CAAA,CAAA1D,OAAA,GACA8H,CAAA,CAGA,MAAA3G,QAAA,EAAAuC,CAAA,CAAA1D,OAAA,QAAAoB,eAAA,CAES,CACT,EAEAqH,kBAAA,CAAAlG,CAAA,CAAAuF,CAAA,KACA,SAAA3I,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAAjI,CAAA,CAAA4I,oBAAA,EAAAnG,CAAA,MAAAlC,QAAA,SACA0H,CAAA,CACAE,GAAA,IAAApN,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAb,CAAA,GAAAM,iBAAA,MAAAsD,oBAAA,CAAA5D,CAAA,CAAApB,SAAA,KACA4F,MAAA,IACA,KAAA/G,QAAA,GAAAuC,CAAA,CAAA1D,OAAA,GACA8H,CAAA,CAGA,MAAA3G,QAAA,EAAAuC,CAAA,CAAA1D,OAAA,QAAAoB,eAAA,CAES,CACT,EAEAwC,OAAA,CAAAF,CAAA,EACA,OAAA1G,CAAA,CAAAW,KAAA,CAAAgL,SAAA,MAAApH,WAAA,CAAAkC,MAAA,oDAAAC,CAAA,CAAAG,MAAA,CAAAH,CAAA,CAAAvB,UAAA,CAAAuB,CAAA,CAAAnB,KAAA,CAAAmB,CAAA,CAAAN,OAAA,CAAAM,CAAA,CAAAI,IAAA,IAEAP,iBAAA,CAAApB,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAa,CAAA,CAAA6C,CAAA,CAAA3D,CAAA,CAAAa,CAAA,CAAAX,CAAA,EACA,SAAArD,CAAA,CAAAsD,SAAA,iCACA,SAAA5B,SAAA,CACA,8BACAsB,CAAA,CAAAd,WAAA,KAAAe,CAAA,CAAAf,WAAA,GACA,iEACAmC,CAAA,MAAApC,eAAA,CACA,KAAAG,WAAA,CAAAkC,MAAA,kCAAArB,CAAA,CAAAE,CAAA,MAAAlB,eAAA,GACA,KAAAG,WAAA,CAAAkC,MAAA,wBAAArB,CAAA,CAAAE,CAAA,GACAwB,CAAA,CAAA/I,CAAA,CAAAyJ,CAAA,IACA,GAAAlF,CAAA,CAAAsJ,iBAAA,EAAAzG,CAAA,GACA,IAAA0G,CAAA,YAAA5H,kBAAA,CAAA6H,cAAA,MAAA5H,cAAA,CAAAtB,CAAA,CAAAtD,WAAA,CACAiG,CAAA,CAAAa,CAAA,CAAAI,CAAA,CAAAL,CAAA,EACAW,CAAA,MAAA7C,kBAAA,CAAA6D,SAAA,CAAAC,kBAAA,eAAA8D,CAAA,GACA9N,CAAA,CAAAkL,CAAA,CACAzB,CAAA,MAAAvD,kBAAA,CAAAnD,OAAA,KAEA,CACA,GAAA0E,CAAA,EACA,IAAAuG,CAAA,OAAAlJ,CAAA,CAAA3B,cAAA,CAAAL,OAAA,CAAAsE,CAAA,MAAAtB,SAAA,EAAAkI,SAAA,CAAAxG,CAAA,MAAAd,iBAAA,CAAA3D,OAAA,KACAiL,CAAA,CAAAC,EAAA,CAAA/C,CAAA,EACA,8DACA,CACA,MAAAxE,iBAAA,CAAAqD,SAAA,CAAAC,kBAAA,iBACAkB,CAAA,CACA,KAAA/E,cAAA,CACAiB,CAAA,CACAI,CAAA,CACAa,CAAA,CACAI,CAAA,CACAL,CAAA,EACA,EACApI,CAAA,CAAAiC,CAAA,CAAA8B,SAAA,CAAAkG,IAAA,CACAR,CAAA,MAAA/C,iBAAA,CAAA3D,OAAA,CACA,MACS,CAAAgG,IAAA,CAAAA,CAAA,CAAA/I,KAAA,CAAAA,CAAA,CAAAyJ,EAAA,CAAAA,CAAA,EACT,GAEA,CAAyB,gBAAA7J,CAAA,CAAAC,CAAA,CAAAkC,CAAA,ECvczBjC,MAAA,CAAAC,cAAqB,CAAAF,CAAA,aAAsB,EAAAG,KAAA,MAC3CH,CAAA,CAAAqO,UAAgB,CAAArO,CAAA,CAAAsO,WAAe,CAAAtO,CAAA,CAAA6E,4BAAA,CAAA7E,CAAA,CAAAqE,wBAAA,YAC/BE,CAAA,CAAArC,CAAiB,CAAO,IAAC,EACzBE,CAAA,CAAAF,CAA4B,QAC5B4C,CAAA,CAA0B5C,CAAQ,MAAgC,EAClE6C,CAAoB,CAAA7C,CAAsB,QAC1C8C,CAAgB,CAAA9C,CAAQ,MAAoB,EAC5C+C,CAAA,CAAgB/C,CAAO,CAAC,KAAU,EAClCwC,CAAA,CAAAxC,CAAA,OACAmC,CAAA,EAAAc,CAAA,CAAAC,CAAA,GACAJ,CAAA,CAAA/D,gBAAA,CAAAkE,CAAA,EAAAE,QAAA,CAAAD,CAAA,EAEApF,CAAA,CAAAqE,wBAAA,CAAAA,CAAA,CAIArE,CAAA,CAAA6E,4BAAA,CAHA,GACAM,CAAA,EAAAH,CAAA,CAAAzD,QAAA,CAAAI,OAAA,EAAAwD,CAAA,EAAAH,CAAA,CAAAzD,QAAA,CAAAM,MAAA,KAGAyM,CAAA,EAAAC,CAAA,CAAAC,CAAA,IACA,IAAAC,CAAA,CAAAzJ,CAAA,CAAA1E,4BAAA,CAAAkO,CAAA,SACAD,CAAA,CAAA9H,WAAA,KAAAzB,CAAA,CAAAtD,WAAA,CAAA+E,WAAA,IACA8H,CAAA,CAAA9H,WAAA,KAAAgI,CAAA,CAAAhI,WAAA,GACA,CACAzG,CAAA,CAAAsO,WAAA,CAAAA,CAAA,CA8QkBtO,CAAA,CAAAqO,UAAA,CA7QlB,MACA/I,YAAAH,CAAA,CAAAgC,CAAA,CAAAhE,CAAA,CAAAiC,CAAA,CAAA8B,CAAA,EACA,GAAA9B,CAAA,MAAApF,CAAA,CAAAqE,wBAAA,EAAAc,CAAA,CAAAC,CAAA,EACA,2CAEA,KAAAK,QAAA,CAAAN,CAAA,CACA,KAAAO,aAAA,IAAAhB,CAAA,CAAAP,eAAA,EAAAgB,CAAA,EAEA,EADAH,CAAA,CAAA1D,cAAA,CAAA6D,CAAA,EAEA,KAAAQ,YAAA,CAAAX,CAAA,CAAA3D,uBAAA,CAAA8D,CAAA,EACA,KAAAS,YAAA,CAAAZ,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,KAAAU,OAAA,CAAAd,CAAA,CAAAe,MAAA,CAAAC,QAAA,CAAA5C,CAAA,EACAA,CAAA,CACA6C,KAAAA,CAAA,CACA,KAAAC,SAAA,CAAAnB,CAAA,CAAAoB,QAAA,CAAAC,UAAA,CAAAhD,CAAA,EACAA,CAAA,CACA4B,CAAA,CAAAe,MAAA,CAAAC,QAAA,CAAA5C,CAAA,EACAA,CAAA,CAAAiD,QAAA,CACAJ,KAAAA,CAAA,CACA,KAAA0I,WAAA,MAAA7I,OAAA,CACAZ,CAAA,CAAAxB,0BAAA,CAAAR,OAAA,CAAA+B,CAAA,CAAAnE,2BAAA,MAAA4E,QAAA,OAAAI,OAAA,EACA,KAAAI,SAAA,CACAhB,CAAA,CAAAxB,0BAAA,CAAAR,OAAA,CAAA+B,CAAA,CAAAnE,2BAAA,MAAA4E,QAAA,OAAAQ,SAAA,EACA,IAAA7D,CAAA,CAAAgB,QAAA,CAAA4B,CAAA,CAAAnE,2BAAA,MAAA4E,QAAA,EAAAR,CAAA,CAAAxB,0BAAA,CAAAX,eAAA,IACA,KAAA6D,WAAA,KAAAvE,CAAA,CAAAW,KAAA,CAAA6D,QAAA,CACA,KAAAC,iBAAA,MAAAhB,OAAA,CACAZ,CAAA,CAAA9C,yBAAA,CAAAc,OAAA,CAAA+B,CAAA,CAAAtE,sCAAA,MAAA+E,QAAA,OAAAI,OAAA,EACA,KAAAI,SAAA,CACAhB,CAAA,CAAA9C,yBAAA,CAAAc,OAAA,CAAA+B,CAAA,CAAAtE,sCAAA,MAAA+E,QAAA,OAAAQ,SAAA,EACA,IAAA7D,CAAA,CAAAgB,QAAA,CAAA4B,CAAA,CAAAtE,sCAAA,MAAA+E,QAAA,EAAAR,CAAA,CAAA9C,yBAAA,CAAAW,eAAA,IACA,KAAAyD,QAAA,CAAAnB,CAAA,CACA,KAAAoB,eAAA,CAAAU,CAAA,CACA,KAAAZ,cAAA,CAAAa,CAAA,KAEAL,YAAA,GACA,YAAApB,aAAA,KAEAqB,WAAA,GACA,YAAApB,YAAA,KAEAR,OAAA,GACA,YAAAM,QAAA,KAEAuB,MAAA,GACA,YAAAnB,OAAA,KAEAO,QAAA,GACA,YAAAH,SAAA,KAEAgB,WAAA,GACA,YAAArB,YAAA,KAEAR,OAAA,GACA,YAAAmB,QAAA,KAEAW,cAAA,GACA,YAAAV,eAAA,KAEAW,aAAA,GACA,YAAAb,cAAA,KAEAc,QAAA,GACA,YAAAsH,WAAA,KAEArH,gBAAA,GACA,YAAAR,iBAAA,KAEA8H,UAAA,GACA,YAAAhI,WAAA,CAEAoD,4BAAA,CAAAjB,CAAA,CAAAkB,CAAA,EACA,SAAAzF,CAAA,CAAAsD,SAAA,iCACA,SAAA6G,WAAA,CACA,kDACA,CAAA5F,CAAA,CAAAvB,UAAA,CACA,0CACA,CAAAuB,CAAA,CAAAN,OAAA,CACA,sCACA,CAAAM,CAAA,CAAAtB,WAAA,CACA,2CACA,CAAAsB,CAAA,CAAApB,SAAA,CACA,wCACA,CAAAoB,CAAA,CAAAnB,KAAA,CACA,2BACAqC,CAAA,EACA,IAAAC,CAAA,YAAAA,aAAA,CAAAnB,CAAA,KACA,CAAAmB,CAAA,CACA,+DACA,IACAf,CAAA,MAAAwF,WAAA,CAAAxE,SAAA,CAAAC,kBAAA,gBACA,KAAA7D,cAAA,CACAwC,CAAA,CAAAvB,UAAA,CACAuB,CAAA,CAAAnB,KAAA,CACAmB,CAAA,CAAAN,OAAA,CACAM,CAAA,CAAAI,IAAA,EACA,QACA,CACAA,IAAA,CAAAA,CAAA,CACAU,EAAA,MAAA8E,WAAA,CAAAxL,OAAA,CACA/C,KAAA,CAAAiC,CAAA,CAAA8B,SAAA,CAAAkG,IAAA,CACS,CACT,EAEAwE,oBAAA,CAAA9F,CAAA,CAAAkB,CAAA,CAAAT,CAAA,EACA,SAAAhF,CAAA,CAAAsD,SAAA,iCACA,SAAAhC,OAAA,CACA,4BACA,MAAA6I,WAAA,CACA,kDACA,CAAA5F,CAAA,CAAAvB,UAAA,CACA,0CACA,CAAAuB,CAAA,CAAAN,OAAA,CACA,sCACA,CAAAM,CAAA,CAAAtB,WAAA,CACA,2CACA,CAAAsB,CAAA,CAAApB,SAAA,CACA,wCACA,CAAAoB,CAAA,CAAAI,IAAA,CACA,mCACAc,CAAA,EACA,IAAAC,CAAA,YAAAA,aAAA,CAAAnB,CAAA,KACA,CAAAmB,CAAA,CACA,+DACA,IACAtC,CAAA,YAAA9B,OAAA,CAAA2D,UAAA,MACA7B,CAAA,CAAAlB,WAAA,KAAAqC,CAAA,CAAAnB,KAAA,CAAAlB,WAAA,GACA,gDACA,KAAAiI,WAAA,CAAAxD,WAAA,MAAA5E,cAAA,CAAAwC,CAAA,CAAAvB,UAAA,CAAAuB,CAAA,CAAAnB,KAAA,CAAAmB,CAAA,CAAAN,OAAA,CAAAM,CAAA,CAAAI,IAAA,CAAAK,MAAAA,CAAA,CAAAA,CAAA,EACa4B,QAAA,IAAAzG,CAAA,CAAAP,eAAA,OAAAsB,QAAA,WACJ,EACT,EAEA2F,kBAAA,CAAA7D,CAAA,CAAA8D,CAAA,CAAA9B,CAAA,EACA,SAAAhF,CAAA,CAAAsD,SAAA,iCACA,SAAAhC,OAAA,CACA,gCACA0D,CAAA,CACAtE,CAAA,CAAA3B,cAAA,CAAAL,OAAA,CAAAsE,CAAA,MAAA1B,OAAA,EAAAyF,OAAA,MAAAzE,iBAAA,CAAA3D,OAAA,CAAAmI,CAAA,CAAA9B,CAAA,EACStE,CAAA,CAAA3B,cAAA,CAAAL,OAAA,CAAAsE,CAAA,MAAA1B,OAAA,EAAAyF,OAAA,MAAAzE,iBAAA,CAAA3D,OAAA,CAAAmI,CAAA,EACT,EAEApB,aAAA,CAAAnB,CAAA,EACA,SAAAvE,CAAA,CAAAsD,SAAA,iCACA,SAAA5B,SAAA,CACA,8BACA,MAAAyI,WAAA,CACA,kDACA,CAAA5F,CAAA,CAAAG,MAAA,CACA,qCACA,CAAAH,CAAA,CAAAvB,UAAA,CACA,0CACA,CAAAuB,CAAA,CAAAnB,KAAA,CACA,oCACA,CAAAmB,CAAA,CAAAN,OAAA,CACA,sCACA,CAAAM,CAAA,CAAAI,IAAA,CACA,uCACS,KAAAwF,WAAA,CAAAnD,UAAA,CAAAzC,CAAA,CAAAG,MAAA,CAAAH,CAAA,CAAAvB,UAAA,CAAAuB,CAAA,CAAAnB,KAAA,CAAAmB,CAAA,CAAAN,OAAA,CAAAM,CAAA,CAAAI,IAAA,EACT,EAEAsC,eAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,KACA,IAAAC,CAAA,CAAA1J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,aACA,EACA1H,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA2B,CAAA,EACAO,GAAA,CAAAF,CAAA,EACAG,GAAA,CAAAN,CAAA,EACAK,GAAA,CAAA5J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA8B,CAAA,IACAK,GAAA,CAAA7J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA4B,CAAA,IACAvC,QAAA,GAGA/G,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA6B,CAAA,EACAK,GAAA,CAAAF,CAAA,EACAG,GAAA,CAAAR,CAAA,EACAO,GAAA,CAAA5J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA4B,CAAA,IACAO,GAAA,CAAA7J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAA8B,CAAA,IACAzC,QAAA,GAGAT,kCAAA,CAAAwD,CAAA,CAAAC,CAAA,EACA,GAAAA,CAAA,EACA,CAAAC,MAAA,CAAAC,SAAA,CAAAF,CAAA,EACA,+DAEAG,CAAA,IAAA5H,CAAA,CAAAP,eAAA,OAAAsB,QAAA,EACA,EACArD,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EAAAF,GAAA,MAAAtG,aAAA,EAAAuG,GAAA,MAAAM,GAAA,IACAnK,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EAAAF,GAAA,MAAAtG,aAAA,EAAAuG,GAAA,MACA7J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,IACA/C,CAAA,CAAAoF,CAAA,OAAAxG,YAAA,CACA6G,CAAA,CAAApK,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EAAAF,GAAA,CAAAjF,CAAA,EAAAkF,GAAA,MACAvE,CAAA,CAAAtF,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EAAAO,GAAA,CAAAH,CAAA,EAAAG,GAAA,CAAAD,CAAA,QACA,CACA9E,SAAA,CAAAA,CAAA,CAAAyB,QAAA,GACAqD,QAAA,CAAAA,CAAA,CAAArD,QAAA,GACAmD,SAAA,CAAAA,CAAA,CAAAnD,QAAA,GACA,CAEAuD,oBAAA,CAAAhF,CAAA,CAAAyE,CAAA,EACA,MAAAzH,CAAA,CAAAP,eAAA,OAAAsB,QAAA,EACA,2DACA6G,CAAA,CAAAlK,CAAA,CAAAyH,SAAA,CAAAC,IAAA,MAAApE,aAAA,EACA8G,CAAA,CAAAL,CAAA,CACA/J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAqC,CAAA,EACA/J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,MAAAnE,YAAA,EACAgH,CAAA,CAAAL,CAAA,CAAAM,GAAA,CAAAJ,CAAA,EACApD,CAAA,CAAAhH,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAApC,CAAA,EACAsE,GAAA,MACAC,GAAA,CAAA7J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,MAAA2C,GAAA,CAAAE,CAAA,UACAvD,CAAA,CAAAD,QAAA,GAEA0D,iBAAA,CAAApF,CAAA,CAAAiE,CAAA,CAAAQ,CAAA,CAAAN,CAAA,CAAAkB,CAAA,KACA,IAAAhB,CAAA,CAAA1J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,KAAAiC,GAAA,CAAA3J,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAgD,CAAA,CAAAlB,CAAA,CAAAF,CAAA,UACA,EACAtJ,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAArC,CAAA,EACAuE,GAAA,CAAAF,CAAA,EACAG,GAAA,CAAAC,CAAA,EACA/C,QAAA,GAGA/G,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAoC,CAAA,EACAF,GAAA,CAAAF,CAAA,EACAG,GAAA,CAAAxE,CAAA,EACA0B,QAAA,GAGAH,OAAA,CAAAF,CAAA,EACA,OAAA1G,CAAA,CAAAW,KAAA,CAAAgL,SAAA,MAAApH,WAAA,CAAAkC,MAAA,oDAAAC,CAAA,CAAAG,MAAA,CAAAH,CAAA,CAAAvB,UAAA,CAAAuB,CAAA,CAAAnB,KAAA,CAAAmB,CAAA,CAAAN,OAAA,CAAAM,CAAA,CAAAI,IAAA,IAEAP,iBAAA,CAAApB,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAa,CAAA,CAAA6C,CAAA,CAAAwD,CAAA,CAAAnH,CAAA,CAAAa,CAAA,CAAAX,CAAA,EACA,SAAArD,CAAA,CAAAsD,SAAA,iCACA,SAAAzB,QAAA,CACA,8BACA,MAAAc,cAAA,CACA,oCACAK,CAAA,CAAAd,WAAA,KAAAe,CAAA,CAAAf,WAAA,GACA,iEACAmC,CAAA,MAAA+F,UAAA,CAAA9F,MAAA,4CAAArB,CAAA,CAAAE,CAAA,MAAAR,cAAA,CAAA2H,CAAA,GACA3F,CAAA,CAAA/I,CAAA,CAAAyJ,CAAA,IACA,GAAAlF,CAAA,CAAAsJ,iBAAA,EAAAzG,CAAA,GACA,IAAA0G,CAAA,YAAA7G,QAAA,CAAA8G,cAAA,MAAA/G,aAAA,CAAAnC,CAAA,CAAAtD,WAAA,CACAiG,CAAA,CAAAa,CAAA,CAAAI,CAAA,CAAAL,CAAA,EACAW,CAAA,MAAA9B,QAAA,CAAA8C,SAAA,CAAAC,kBAAA,eACA8D,CAAA,EACA,EACA9N,CAAA,CAAAkL,CAAA,CACAzB,CAAA,MAAAxC,QAAA,CAAAlE,OAAA,KAEA,CACA,GAAA0E,CAAA,EACA,IAAAuG,CAAA,OAAAlJ,CAAA,CAAA3B,cAAA,CAAAL,OAAA,CAAAsE,CAAA,MAAAnB,QAAA,EAAA+H,SAAA,CAAAxG,CAAA,MAAAN,gBAAA,CAAAnE,OAAA,KACAiL,CAAA,CAAAC,EAAA,CAAA/C,CAAA,EACA,8DACA,CACA,MAAAhE,gBAAA,CAAA6C,SAAA,CAAAC,kBAAA,iBACAkB,CAAA,CACA,KAAAlE,aAAA,CACAI,CAAA,CACAI,CAAA,CACAa,CAAA,CACAI,CAAA,CACAL,CAAA,EACA,EACApI,CAAA,CAAAiC,CAAA,CAAA8B,SAAA,CAAAkG,IAAA,CACAR,CAAA,MAAAvC,gBAAA,CAAAnE,OAAA,CACA,MACS,CAAAgG,IAAA,CAAAA,CAAA,CAAA/I,KAAA,CAAAA,CAAA,CAAAyJ,EAAA,CAAAA,CAAA,EACT,GAEA,CAAkB,gBAAA7J,CAAA,CAAAC,CAAA,CAAAkC,CAAA,ECpSlBjC,MAAA,CAAAC,cAAA,CAAAF,CAA6B,eAAAG,KAAA,MAC7BH,CAAA,CAAAoE,qBAAgB,MAAQ,MACxBG,CAAA,CAAArC,CAAiB,CAAO,IAAC,EACzBE,CAAA,CAAAF,CAAoB,MAAQ,EAC5B8C,CAAe,CAAA9C,CAAQ,CAAQ,OAC/B4M,CAAA,CAAA5M,CAAoB,MAAQ,EAC5B6M,CAAA,CAAA7M,CAAA,cACAkC,CAAA,SAAA0K,CAAA,CAAAT,UAAA,CACA/I,YAAAH,CAAA,CAAAhC,CAAA,CAAAiC,CAAA,EACA,IAAAI,CAAA,IACAJ,CAAA,MAAA0J,CAAA,CAAAzK,wBAAA,EAAAc,CAAA,CAAAC,CAAA,EACA,+CAEA4J,CAAA,CAAAhK,CAAA,CAAAhE,2BAAA,CAAAmE,CAAA,KACA,CAAAC,CAAA,CACA,qCAEAA,CAAA,GAAA4J,CAAA,CAAA3J,QAAA,CAAAD,CAAA,EACA,yCAEA+B,CAAA,CAAAnC,CAAA,CAAA5E,uCAAA,CAAA+E,CAAA,KACA,CAAAgC,CAAA,CACA,+CACAD,CAAA,QAAA1B,CAAAA,CAAA,CAAAR,CAAA,CAAA7D,kBAAA,CAAAgE,CAAA,EAAAC,CAAA,IAAAI,KAAA,IAAAA,CAAA,QAAAA,CAAA,CAAAiB,WAAA,GACA,MAAAtB,CAAA,CAAAgC,CAAA,CAAAhE,CAAA,CAAAiC,CAAA,CAAA8B,CAAA,EAEA+H,oBAAA,CAAA1H,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAoH,CAAA,CAAAjH,CAAA,IAAA2B,CAAA,EACA,SAAAhF,CAAA,CAAAsD,SAAA,iCACA,SAAAb,MAAA,CACA,4BACA,CAAA6H,CAAA,CACA,wCACAlH,CAAA,YAAAX,MAAA,CAAAwC,UAAA,GACAC,CAAA,YAAAyF,8BAAA,CAAA3H,CAA6E,CAAAC,CAAA,CAAgBC,CAAA,CAAAoH,CAAA,CAAAlH,CAAA,CAAAC,CAAA,SACpF,KAAAZ,MAAA,CAAA0C,eAAA,CAAAzJ,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAJ,CAAA,GAAAK,EAAA,CAAAH,CAAA,CAAAG,EAAA,CAAAV,IAAA,CAAAO,CAAA,CAAAP,IAAA,CAAA/I,KAAA,CAAAiC,CAAA,CAAAyH,SAAA,CAAAC,IAAA,CAAAL,CAAA,CAAAtJ,KAAA,KACT,EAEA+O,8BAAA,CAAA3H,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAoH,CAAA,CAAAlH,CAAA,CAAAC,CAAA,KACA,SAAArD,CAAoB,CAAAsD,SAAU,iCAC9B,IAAAC,OAAA,CAAAA,CAAA,aAAAqH,wCAAA,CAAA5H,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAoH,CAAA,CAAAlH,CAAA,CAAAC,CAAA,SACSE,CAAA,CACT,EAEAqH,wCAAA,CAAA5H,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAA2H,CAAA,CAAAzH,CAAA,CAAAC,CAAA,KACA,IAAApC,CAAA,OACA,GAAAjB,CAAA,CAAAsD,SAAA,iCACA,IAAAuH,CAAA,CACA,uCACA,MAAAlI,cAAA,CACA,qCACAe,CAAA,CAAA7F,CAAA,CAAAW,KAAA,CAAAmF,OAAA,CAAA9F,CAAA,CAAAW,KAAA,CAAAoF,WAAA,MAAAC,OAAA,UAEAC,CAAoB,8BAAuC,EAAAJ,CAAA,GAC3D,CAAoBK,UAAA,CAAYC,CAAA,CAAArF,OAAA,CAAAsF,CAAA,MAAApG,CAAA,CAAAqG,MAAA,CAAAJ,CAAA,EAChC,CAAAX,SAAA,CAAAA,CAAA,OAAAgB,kCAAA,CAAA0G,CAAA,EACAtH,CAAA,YAAAa,iBAAA,CAAApB,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAa,CAAA,CAAAf,CAAA,CAAA2H,CAAA,CAAA1H,CAAA,CAAAa,CAAA,CAAAX,CAAA,EACAgB,CAAA,MAAA+F,UAAA,CAAA9F,MAAA,4CAAArB,CAAA,CAAAE,CAAA,MAAAR,cAAA,CAAAkI,CAAA,SACA,CACAtH,OAAA,CAAAA,CAAA,CACAS,MAAA,CAAAA,CAAA,CACAC,OAAA,CAAAA,CAAA,CACAM,KAAA,EACAC,EAAA,MAAAC,OAAA,EACAC,MAAA,MAAA9B,aAAA,CACAI,UAAA,CAAAA,CAAA,CACAI,KAAA,CAAAA,CAAA,CACAa,OAAA,CAAAA,CAAA,CACqBU,IAAA,CAAAN,CAAA,CACrB,EACAK,MAAA,MAAA9B,aAAA,CAAAV,WAAA,GACAyC,IAAA,CAAAN,CAAA,CACArB,UAAA,CAAAA,CAAA,CAAAd,WAAA,GACAe,WAAA,CAAAA,CAAA,CAAAf,WAAA,GACAkB,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACA+B,OAAA,CAAAA,CAAA,CAAA/B,WAAA,GACAgB,WAAA,CAAAA,CAAA,CAAA0B,QAAA,GACAzB,SAAA,CAAAA,CAAA,CAAAyB,QAAA,GACA0F,SAAA,CAAAO,CAAA,CAAAjG,QAAA,GACAC,iBAAA,CAAAgG,CAAA,CAAAjG,QAAA,GACAE,SAAA,CAAAvB,CAAA,CAAAoB,IAAA,CAAAC,QAAA,GACAZ,MAAA,CAAAA,CAAA,CAAA9B,WAAA,GACiBrB,OAAA,QAAAI,CAAAA,CAAA,MAAA0B,cAAA,GAAA1B,KAAA,IAAAA,CAAA,CAAAA,CAAA,MACjB,CACS,CACT,EAEA6J,sBAAA,CAAA1H,CAAA,EACA,SAAApD,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAA4B,CAAA,CAAAO,oBAAA,EAAA3H,CAAA,MAAAxC,OAAA,SACSgI,CAAA,CACT,EAEAoC,kBAAA,CAAA5H,CAAA,EACA,SAAApD,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAA4B,CAAA,CAAAO,oBAAA,EAAA3H,CAAA,MAAAxC,OAAA,SACSgI,CAAA,CACT,EAEAqC,0BAAA,CAAA7H,CAAA,EACA,SAAApD,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAA4B,CAAA,CAAAU,4BAAA,EAAA9H,CAAA,MAAAxC,OAAA,SACSgI,CAAA,CACT,EAEAuC,2BAAA,CAAA/H,CAAA,EACA,SAAApD,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAA4B,CAAA,CAAAY,6BAAA,EAAAhI,CAAA,MAAAxC,OAAA,SACSgI,CAAA,CACT,EAEAyC,sBAAA,CAAAjI,CAAA,EACA,SAAApD,CAAA,CAAAsD,SAAA,iCACA,IAAAsF,CAAA,SAAA4B,CAAA,CAAArB,eAAA,EAAA/F,CAAA,MAAAxC,OAAA,SACSgI,CAAA,CACT,GAEA,CAA6B,CAAA/I,qBAAA,CAAAA,CAAA,iBAAArE,CAAA,CAAAC,CAAA,ECrHgCC,MAAA,CAAAC,cAAA,CAAAF,CAAA,eAAAG,KAAA,qBAAAJ,CAAA,CAAAC,CAAA,CAAAkC,CAAA,ECC7DjC,MAAA,CAAAC,cAAA,CAAAF,CAA0B,eAAAG,KAAA,MAC1BH,CAAA,CAAAmE,eAAgB,CAAAnE,CAAA,CAAA6P,+BAAe,CAAA7P,CAAA,CAAAgO,iBAAA,CAAAhO,CAAA,CAAA8P,OAAA,YAC/BvL,CAAA,CAAArC,CAAoB,KAAQ,EAC5B8C,CAAe,CAAA9C,CAAA,MAA6B,EAC5ClC,CAAA,CAAA8P,OAAA,IAAAvL,CAAA,CAAAK,YAAA,EAAA1C,CAAA,aACA8L,CAAA,IACA+B,CAAA,CAAAtJ,WAAA,KAAAzB,CAAA,CAAAtD,WAAA,CAAA+E,WAAA,GAOAzG,CAAA,CAAAgO,iBAAA,CAAAA,CAAA,KACA6B,CAAA,KACA,OAAA1K,CAAA,EACA,OACA,KACA,EACA,KACA,EACA,KACA,GACA,KACA,IACA,KACA,MATA,iBAYA,SACA,CACA,CACAnF,CAAA,CAAA6P,+BAAA,CAAAA,CAAA,KACA1L,CAAA,KACA,OAAAgB,CAAA,EACA,OACA,KACA,EACA,KACA,EAHA,iBAMA,SACA,CACA,CAAuBnF,CAAA,CAAAmE,eAAA,CAAAA,CAAA,iBAAApE,CAAA,CAAAC,CAAA,CAAAkC,CAAA,EC5CvBjC,MAAA,CAAAC,cAAA,CAAAF,CAAA,aAA0C,CAAG,CAAAG,KAAA,MAC7CH,CAAA,CAAAgQ,kCAA0B,CAAOhQ,CAAkB,CAAAiQ,iCAAA,CAAAjQ,CAAA,CAAAkQ,gCAAA,CAAAlQ,CAAA,CAAAmQ,4BAAA,CAAAnQ,CAAA,CAAAoQ,4BAAA,CAAApQ,CAAA,CAAAqQ,uBAAA,CAAArQ,CAAA,CAAAsQ,eAAA,YACnDC,CAAuB,CAAArO,CAAA,QACvBlC,CAAA,CAAAsQ,eAAA,GAAAE,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,EACAxQ,CAAA,CAAAqQ,uBAAA,GAAAG,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,EACAxQ,CAAA,CAAAoQ,4BAAA,GAAAI,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,EACAxQ,CAAA,CAAAmQ,4BAAA,GAAAK,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,EACAxQ,CAAA,CAAAkQ,gCAAA,GAAAM,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,EACAxQ,CAAA,CAAAiQ,iCAAA,GAAAO,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,EACAxQ,CAAA,CAAAgQ,kCAAA,GAAAQ,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,kBAAAzQ,CAAA,CAAAC,CAAA,CAAAkC,CAAA,EClPAjC,MAAA,CAAAC,cAAA,CAAAF,CAA4B,CAAG,cAAAG,KAAA,GAA2B,CAAG,EAC7DH,CAAA,CAAA8N,oBAAgB,CAAA9N,CAAQ,CAAA4N,mBAAO,CAAA5N,CAAA,CAAA0N,eAAA,CAAA1N,CAAA,CAAAwN,eAAA,CAAAxN,CAAA,CAAAoN,WAAA,CAAApN,CAAA,CAAAgN,UAAA,YAC/BzI,CAAA,CAAArC,CAA0B,OAC1BqO,CAAoB,CAAArO,CAAyB,QAC7C8C,CAAA,CAAoB9C,CAAO,CAAC,KAAa,EACzCuO,CAAA,CAAAvO,CAAA,QACAwO,CAAA,IAAA1L,CAAA,CAAA5E,uCAAA,CAAA+E,CAAA,EAAAsB,WAAA,GACAuG,CAAA,EAAAD,CAAA,CAAA5H,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IAAArC,CAAA,IACA,CACA,IAAAmL,CAAA,CAAA3L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EAAAsL,CAAA,CAAAH,eAAA,EACavH,EAAA,CAAAgE,CAAA,CAAAtG,WAAA,GACb,EACA,CAAA0G,MAAA,KACA0D,CAAA,CAAA7L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAH,eAAA,EACavH,EAAA,CAAAgE,CAAA,CAAAtG,WAAA,GACb,EACA,CAAA0G,MAAA,KACA2D,CAAA,KACAH,CAAA,CAAAxD,MAAA,IACA0D,CAAA,CAAA1D,MAAA,EACA,QACA,OAAA3H,CAAAA,CAAA,CAAAuL,CAAA,CAAAD,CAAA,CAAA3L,CAAA,EAAA6L,GAAA,KAAAxL,KAAA,IAAAA,CAAA,CAAAA,CAAA,MAEA,MAAAyF,CAAA,EACA,uDACC,CACD,EACAjL,CAAA,CAAAgN,UAAA,CAAAA,CAAA,KACAI,CAAA,EAAAzF,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAA8I,CAAA,CAAA3L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA0D,CAAA,CAAA7L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA2D,CAAA,KACAH,CAAA,CAAAxD,MAAA,IACA0D,CAAA,CAAA1D,MAAA,EACA,QACA4D,CAAA,CAAAD,CAAA,CAAA3L,CAAA,EAEA,MAAA8F,CAAA,EACA,uDACC,CACD,EACAjL,CAAA,CAAAoN,WAAA,CAAAA,CAAA,KACAI,CAAA,EAAA7F,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAA8I,CAAA,CAAA3L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA0D,CAAA,CAAA7L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA2D,CAAA,KACAH,CAAA,CAAAxD,MAAA,IACA0D,CAAA,CAAA1D,MAAA,EACA,QACA4D,CAAA,CAAAD,CAAA,CAAA3L,CAAA,EAAAmI,MAAA,IAAAxE,MAAA,GAAAA,CAAA,CAAAgC,MAAA,EAEA,MAAAG,CAAA,EACA,wDACC,CACD,EACAjL,CAAA,CAAAwN,eAAA,CAAAA,CAAA,KACAE,CAAA,EAAA/F,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAA8I,CAAA,CAAA3L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA0D,CAAA,CAAA7L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA2D,CAAA,KACAH,CAAA,CAAAxD,MAAA,IACA0D,CAAA,CAAA1D,MAAA,EACA,QACA4D,CAAA,CAAAD,CAAA,CAAA3L,CAAA,EAAAmI,MAAA,IAAAxE,MAAA,GAAAA,CAAA,CAAAgC,MAAA,EAEA,MAAAG,CAAA,EACA,wDACC,CACD,EACAjL,CAAA,CAAA0N,eAAA,CAAAA,CAAA,KACAE,CAAA,EAAAjG,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAA8I,CAAA,CAAA3L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA0D,CAAA,CAAA7L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA2D,CAAA,KACAH,CAAA,CAAAxD,MAAA,IACA0D,CAAA,CAAA1D,MAAA,EACA,QACA4D,CAAA,CAAAD,CAAA,CAAA3L,CAAA,EAAAmI,MAAA,IAAAxE,UAAA,GAAAA,CAAA,CAAAgC,MAAA,EAEA,MAAAG,CAAA,EACA,4DACC,CACD,EACAjL,CAAA,CAAA4N,mBAAA,CAAAA,CAAA,KACAE,CAAA,EAAAnG,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAA8I,CAAA,CAAA3L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAjE,gBAAA,CAAAoE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA0D,CAAA,CAAA7L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAJ,uBAAA,EACa1I,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACb,EACA,CAAA0G,MAAA,KACA2D,CAAA,KACAH,CAAA,CAAAxD,MAAA,IACA0D,CAAA,CAAA1D,MAAA,EACA,QACA4D,CAAA,CAAAD,CAAA,CAAA3L,CAAA,EAAAmI,MAAA,IAAAxE,WAAA,GAAAA,CAAA,CAAAgC,MAAA,EAEA,MAAAG,CAAA,EACA,6DACC,CACD,EACAjL,CAAA,CAAA8N,oBAAA,CAAAA,CAAA,KACAiD,CAAA,EAAAD,CAAA,CAAA3L,CAAA,GAEA,QAAA8L,GAAA,CAAAH,CAAA,CAAAzD,GAAA,KAAAvE,CAAA,CAAAC,EAAA,CAAAD,CAAA,IAAAoI,MAAA,IAEAC,IAAA,EAAAC,CAAA,CAAAC,CAAA,GAAAC,UAAA,CAAAF,CAAA,CAAAG,SAAA,EAAAD,UAAA,CAAAD,CAAA,CAAAE,SAAA,GAEAjE,MAAA,IAAAxE,CAAA,CAAAG,MAAA,GAAAyH,CAAA,CAAAvL,CAAA,GAEAkI,GAAA,KACA,IAAAmE,CAAA,CAAAC,IAAA,CAAAC,GAAA,GACA,CAAAC,QAAA,CAAA7I,CAAA,CAAA8I,SAAA,EAAA5M,CAAyC,CAAAxD,uBAAuB,aAC/DvB,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAb,CAAA,GAAA0I,SAAA,CAAAA,CAAA,qBAAAzR,CAAA,CAAAC,CAAA,CAAAkC,CAAA,EC7JDjC,MAAA,CAAAC,cAAA,CAAAF,CAAA,aAAqC,EAAAG,KAAA,IAAuB,CAAG,CAC/DH,CAAA,CAAA+Q,0BAAgB,CAAQ/Q,CAAO,CAAA0N,eAAA,CAAA1N,CAAA,CAAA2P,6BAAA,CAAA3P,CAAA,CAAAyP,4BAAA,CAAAzP,CAAA,CAAA6R,wBAAA,CAAA7R,CAAA,CAAAsP,oBAAA,YAC/B/K,CAAA,CAAArC,CAA0B,OAC1BqO,CAAoB,CAAArO,CAAyB,QAC7C8C,CAAA,CAAoB9C,CAAO,CAAC,KAAa,EACzCuO,CAAA,CAAAvO,CAAA,QACAoN,CAAA,EAAA3H,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAAiK,CAAA,CAAA9M,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAT,kCAAA,EACArI,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACawC,MAAA,CAAAjE,CAAA,CAAA5E,uCAAA,CAAA+E,CAAA,EAAAsB,WAAA,GACb,EACA,CAAA0G,MAAA,KACAA,CAAA,CAAA2E,CAAA,CAAA3E,MAAA,OACA,GAAAnN,CAAA,CAAA+Q,0BAAA,EAAA5D,CAAA,EAEA,MAAAlC,CAAA,EAEA,MADA8G,OAAA,CAAA9G,KAAA,CAAAA,CAAA,EACA,iDACC,CACD,EACAjL,CAAA,CAAAsP,oBAAA,CAAAA,CAAA,KACAuC,CAAA,EAAAlK,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAAiK,CAAA,CAAA9M,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAT,kCAAA,EACArI,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACawC,MAAA,CAAAjE,CAAA,CAAA5E,uCAAA,CAAA+E,CAAA,EAAAsB,WAAA,GACb,EACA,CAAA0G,MAAA,KACAA,CAAA,CAAA2E,CAAA,CAAA3E,MAAA,OACA,GAAAnN,CAAA,CAAA+Q,0BAAA,EAAA5D,CAAA,EAAAG,MAAA,IAAAxE,MAAA,GAAAA,CAAA,CAAAgC,MAAA,EAEA,MAAAG,CAAA,EACA,wDACC,CACD,EACAjL,CAAA,CAAA6R,wBAAA,CAAAA,CAAA,KACApC,CAAA,EAAA9H,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAAiK,CAAA,CAAA9M,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAT,kCAAA,EACArI,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACawC,MAAA,CAAAjE,CAAA,CAAA5E,uCAAA,CAAA+E,CAAA,EAAAsB,WAAA,GACb,EACA,CAAA0G,MAAA,KACAA,CAAA,CAAA2E,CAAA,CAAA3E,MAAA,OACA,GAAAnN,CAAA,CAAA+Q,0BAAA,EAAA5D,CAAA,EAAAG,MAAA,IAAAxE,UAAA,GAAAA,CAAA,CAAAgC,MAAA,EAEA,MAAAG,CAAA,EACA,4DACC,CACD,EACAjL,CAAA,CAAAyP,4BAAA,CAAAA,CAAA,KACAE,CAAA,EAAAhI,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAAiK,CAAA,CAAA9M,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAT,kCAAA,EACArI,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACawC,MAAA,CAAAjE,CAAA,CAAA5E,uCAAA,CAAA+E,CAAA,EAAAsB,WAAA,GACb,EACA,CAAA0G,MAAA,KACAA,CAAA,CAAA2E,CAAA,CAAA3E,MAAA,OACA,GAAAnN,CAAA,CAAA+Q,0BAAA,EAAA5D,CAAA,EAAAG,MAAA,IAAAxE,WAAA,GAAAA,CAAA,CAAAgC,MAAA,EAEA,MAAAG,CAAA,EACA,6DACC,CACD,EACAjL,CAAA,CAAA2P,6BAAA,CAAAA,CAAA,KACAjC,CAAA,EAAA/F,CAAA,CAAAxC,CAAA,MAAAZ,CAAA,CAAAsD,SAAA,mCACA,IACA,IAAAiK,CAAA,CAAA9M,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EACA,QAAAoL,CAAA,CAAAK,OAAA,EAAA5L,CAAA,CAAAlE,YAAA,CAAAqE,CAAA,EAAAsL,CAAA,CAAAT,kCAAA,EACArI,KAAA,CAAAA,CAAA,CAAAlB,WAAA,GACawC,MAAA,CAAAjE,CAAA,CAAA5E,uCAAA,CAAA+E,CAAA,EAAAsB,WAAA,GACb,EACA,CAAA0G,MAAA,KACAA,CAAA,CAAA2E,CAAA,CAAA3E,MAAA,OACA,GAAAnN,CAAA,CAAA+Q,0BAAA,EAAA5D,CAAA,EAAAG,MAAA,IAAAxE,MAAA,GAAAA,CAAA,CAAAgC,MAAA,EAEA,MAAAG,CAAA,EACA,wDACC,CACD,EACAjL,CAAA,CAAA0N,eAAA,CAAAA,CAAA,KACAqD,CAAA,YAAAE,GAAA,CAAAH,CAAA,CAAAzD,GAAA,KAAAvE,CAAA,CAAAC,EAAA,CAAAD,CAAA,IAAAoI,MAAA,IAEAC,IAAA,EAAAC,CAAA,CAAAC,CAAA,GAAAC,UAAA,CAAAF,CAAA,CAAAG,SAAA,EAAAD,UAAA,CAAAD,CAAA,CAAAE,SAAA,GAEAlE,GAAA,KACA,IAAAmE,CAAA,CAAAC,IAAA,CAAAC,GAAA,GACA,CAAAC,QAAA,CAAA7I,CAAA,CAAA8I,SAAA,EAAA5M,CAAyC,CAAAxD,uBAAuB,aAC/DvB,MAAA,CAAA0J,MAAA,CAAA1J,MAAA,CAAA0J,MAAA,IAAAb,CAAA,GAAA0I,SAAA,CAAAA,CAAA,GACD,EAAkCxR,CAAA,CAAA+Q,0BAAA,CAAAA,CAAA,iBAAAhR,CAAA,CAAAC,CAAA,CAAAkC,CAAA,EC/FlC,IAAA8P,CAAA,YAAAA,eAA6C,WAAAC,CAAA,EAC7C,UAAAA,CAAA,CAAAC,UAAA,CAAAD,CAAA,UAAAA,CAAA,EACA,CACAhS,MAAA,CAAAC,cAAA,CAAsBF,CAAA,aAAQ,EAAeG,KAAA,UAC7CgS,CAAA,CAAAjQ,CAAkC,QAClCkQ,CAAA,CAAAJ,CAAA,CAAA9P,CAAA,SAKAmQ,CAAA,UAAAlS,CAAA,EACA,OAAAgS,CAAA,CAAAG,iBAAA,CAAAnS,CAAA,GACAA,IAAA,GAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,CAAAoS,IAAA,CACA,CAqCAvS,CAAA,SA/BA,SAAAwS,CAAA,CAAAC,CAAA,CAA4CC,CAAA,EAC5C,IAAAlN,CAAA,CAAA2M,CAAA,CAAAQ,YAAA,EAAAH,KAAA,CAAAA,CAAA,CAAAC,SAAA,CAAAA,CAAA,CAAAC,aAAA,CAAAA,CAAA,KAAAL,CAAA,EAAAO,CAAA,CAAApN,CAAA,CAAAoN,KAAA,CAAAC,CAAA,CAAArN,CAAA,CAAAqN,KAAA,IACAA,CAAA,GAAAA,CAAA,CAAAC,IAAA,EACA,IAAAC,KAAA,CAAAC,OAAA,CAAAR,CAAA,EACA,OAAAS,IAAA,CAAAC,SAAA,CAAAN,CAAA,KAEA,SAAAH,CAAA,GAAAM,KAAA,CAAAC,OAAA,CAAAP,CAAA,EACA,0FAOAQ,IAAA,CAAAC,SAAA,CAJAV,CAAwB,CAAAW,MAAA,UAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAEf,OADTF,CAAA,CAAAtT,IAAA,EAAA0S,KAAA,CAAAa,CAAA,CAAAZ,SAAA,CAAAA,CAAA,CAAAA,CAAA,CAAAa,CAAA,EAAAtN,KAAAA,CAAA,GACSoN,CAAA,CACT,KACA,CACA,IAEAG,CAAA,IADA,qBAAAC,QAAA,CAAApB,CAAA,CAAAqB,OAAA,CAAAD,QAAA,EAEAD,CAAA,CAAAG,MAAA,cAAAT,IAAA,CAAAC,SAAA,CAAAN,CAAA,OACAvF,CAAA,IACAsG,CAAA,UACAd,CAAA,CAAAe,OAAA,UAAAC,CAAA,EACKxG,CAAA,GAAAsG,CAAA,EAAAE,CAAA,CACL,EACAN,CAAA,CAAAG,MAAA,OAAAT,IAAA,CAAAC,SAAA,CAAA7F,CAAA,GACAsG,CAAA,GACAd,CAAA,CAAAe,OAAA,UAAAC,CAAA,CAAAC,CAAA,EACKP,CAAA,CAAAG,MAAA,OAAAC,CAAA,CAAAG,CAAA,EACL,EACAP,CAAA,CACA,CACA,gBAAAxT,CAAA,CAAAC,CAAA,CAAAkC,CAAA,EClDA,IAAA6R,CAAA,YAAAA,QAAA,aASA,MAAAA,CARAA,CAAA,CAAA9T,MAAA,CAAA0J,MAAA,WAAAqK,CAAA,EACA,QAAAC,CAAA,CAAAN,CAAA,GAAAO,CAAA,CAAAC,SAAA,CAAAC,MAAA,CAAAT,CAAA,CAAAO,CAAA,CAAAP,CAAA,GAEA,QAAAU,CAAA,IADAJ,CAAA,CAAAE,SAAA,CAAAR,CAAA,EACA1T,MAAA,CAAAqU,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAP,CAAA,CAAAI,CAAA,GACAL,CAAAA,CAAA,CAAAK,CAAA,EAAAJ,CAAA,CAAAI,CAAA,UAEAL,CAAA,CACA,EACAS,KAAA,MAAAN,SAAA,EACA,CACAO,CAAA,YAAAA,eAAA,EAAAzU,CAAAA,MAAA,CAAA0U,MAAA,UAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA/O,KAAAA,CAAA,GAAA+O,CAAA,EAAAA,CAAAA,CAAA,CAAAD,CAAA,EACC7U,MAAA,CAAAC,cAAA,CAAA0U,CAAA,CAAAG,CAAA,EAAAlR,UAAA,IAAAC,GAAA,mBAAA+Q,CAAA,CAAAC,CAAA,KACD,UAAAF,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA/O,KAAAA,CAAA,GAAA+O,CAAA,EAAAA,CAAAA,CAAA,CAAAD,CAAA,EACCF,CAAA,CAAAG,CAAA,EAAAF,CAAA,CAAAC,CAAA,EACD,EACAE,CAAA,YAAAA,kBAA0C,EAAA/U,CAAAA,MAAA,CAA4B0U,MAAA,UAAAC,CAAA,CAAAK,CAAA,EACrEhV,MAAA,CAAAC,cAAA,CAAA0U,CAAA,YAAA/Q,UAAA,IAAA1D,KAAA,CAAA8U,CAAA,GACD,UAAAL,CAAA,CAAAK,CAAA,EACCL,CAAA,SAAAK,CAAA,CACD,EACArQ,CAAA,YAAAA,YAAA,WAAAqN,CAAA,EACA,GAAAA,CAAA,EAAAA,CAAA,CAAAC,UAAA,QAAAD,CAAA,KACAiD,CAAA,OACAjD,IAAA,EAAAA,CAAA,SAAA6C,CAAA,IAAA7C,CAAA,aAAA6C,CAAA,EAAA7U,MAAA,CAAAqU,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAvC,CAAA,CAAA6C,CAAA,GAAAJ,CAAA,CAAAQ,CAAA,CAAAjD,CAAA,CAAA6C,CAAA,SACAE,CAAA,CAAAE,CAAA,CAAAjD,CAAA,EACAiD,CAAA,CACA,CACArN,CAAA,WAA4B,CAAAA,SAAA,WAAAsN,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAE5B,UAAAD,CAAAA,CAAA,EAAAA,CAAAA,CAAA,CAAA7K,OAAA,GAAoC,SAAMI,CAAA,CAAA2K,CAAA,EAC1C,SAAAC,CAAA,CAAArV,CAAA,EAAmC,IAAMsV,CAAA,CAAAH,CAAA,CAAAI,IAAA,CAAAvV,CAAA,SAAmCwV,CAAA,EAAAJ,CAAY,CAAAI,CAAA,YACxFC,CAAA,CAAAzV,CAAA,CAAgC,KAAAsV,CAAA,CAAAH,CAAA,OAAAnV,CAAA,SAAAwV,CAAA,EAAAJ,CAAA,CAAAI,CAAA,YAChCF,CAAA,CAAAP,CAAA,MAJA/U,CAAA,CAIA+U,CAAA,CAAAW,IAAA,CAAAjL,CAAA,CAAAsK,CAAA,CAAA/U,KAAA,EAAA2V,CAJA3V,CAAAA,CAAA,CAIA+U,CAAA,CAAA/U,KAAA,YAJAkV,CAAA,CAAAlV,CAAA,KAAAkV,CAAA,UAAAzK,CAAA,EAAAA,CAAA,CAAAzK,CAAA,KAIA0K,IAAA,CAAA2K,CAAA,CAAAI,CAAA,GACK,EAAAN,CAAA,CAAAA,CAAA,CAAAb,KAAA,CAAAU,CAAA,CAAAC,CAAA,OAAAM,IAAA,IACL,EACA,CACAK,CAAc,YAAAA,WAA6B,WAAAZ,CAAA,CAAAa,CAA0B,EACrE,IAAqEC,CAAA,CAAAC,CAAA,CAAAlC,CAAA,CAAAmC,CAAA,CAArEC,CAAA,EAAAC,KAAiB,GAAAC,IAAA,eAAAtC,CAAA,CAAAA,CAAA,UAAAA,CAAA,WAAoDA,CAAA,KAAAuC,IAAA,IAAAC,GAAA,YACrEL,CAAA,EAAAT,IAAA,CAAuBe,CAAA,UAAAA,CAAsB,WAAAA,CAAA,wBAAAC,MAAA,EAAAP,CAAAA,CAAA,CAAAO,MAAA,CAAAC,QAAA,2BAAAR,CAAA,UAC7CM,CAAA,CAAAvC,CAAA,kBAAAe,CAAA,SAAAQ,SACAmB,CAAA,EACA,GAAAX,CAAA,yDACAG,CAAA,MACA,GAAAH,CAAA,GAAAC,CAAA,EAAAlC,CAAAA,CAAA,CAAA4C,CAAA,CAAAA,CAAA,IAAAV,CAAA,QAAAU,CAAA,IAAAV,CAAA,UAAAlC,CAAA,CAAAkC,CAAA,UAAAlC,CAAA,CAAAQ,IAAA,CAAA0B,CAAA,KAAAA,CAAA,CAAAR,IAAA,KAAA1B,CAAA,CAAAA,CAAA,CAAAQ,IAAA,CAAA0B,CAAA,CAAAU,CAAA,MAAAf,IAAA,QAAA7B,CAAA,QACAkC,CAAA,GAAAA,CAAA,EAAAU,CAAAA,CAAA,EAAAA,CAAA,CAAAA,CAAA,IAAA5C,CAAA,CAAA7T,KAAA,GACAyW,CAAA,KACA,cAAA5C,CAAA,CAAmC4C,CAAA,MAAS,MAC5C,EAAmC,OAAnCR,CAAA,CAAAC,KAAA,GAAmC,CAAAlW,KAAW,CAAAyW,CAAA,GAAU,CAAAf,IAAA,UACxD,EAAAO,CAAA,CAAAC,KAAA,GAAAH,CAAA,CAAAU,CAAA,CAA0C,GAAAA,CAAA,aAAc,MACxD,EAAAA,CAAA,CAAAR,CAAA,CAAAI,GAAA,CAAAxF,GAAA,GAAAoF,CAAA,CAAAG,IAAA,CAAAvF,GAAA,oBAEA,GAAAgD,CAAAA,CAAAA,CAAA,CAAAA,CAAAA,CAAA,CAAAoC,CAAA,CAAAG,IAAA,EAAAnC,MAAA,IAAAJ,CAAA,CAAAA,CAAA,CAAAI,MAAA,MAAAwC,CAAAA,CAAiF,GAAjFA,CAAiF,KAAAA,CAAiB,GAAjBA,CAAA,EAAiB,IAAAR,CAAA,eAClGQ,CAAA,GAAAA,CAAA,OAAA5C,CAAA,EAAA4C,CAAA,IAAA5C,CAAA,CAAyD,IAAA4C,CAAA,IAAA5C,CAAA,CAAgB,KAAQoC,CAAA,CAAAC,KAAA,CAAAO,CAAA,aACjFA,CAAA,GAAAA,CAAA,KAAAR,CAAA,CAAAC,KAAA,CAA+CrC,CAAA,KAAAoC,CAAA,CAAAC,KAAgB,CAAArC,CAAA,IAAAA,CAAA,CAAA4C,CAAgB,UAC/E5C,CAAA,EAAAoC,CAAA,CAAAC,KAAA,CAAArC,CAAA,KAAAoC,CAAA,CAAAC,KAAA,CAAArC,CAAA,IAAAoC,CAAA,CAAAI,GAAA,CAAA1W,IAAA,CAAA8W,CAAA,SACA,KAAAR,CAAA,CAAAI,GAAkC,CAAAxF,GAAA,GAClCoF,CAAA,CAAAG,IAAA,CAAAvF,GAAA,YACA,CACU,CAAAgF,CAAA,CAAYxB,IAAA,CAAAW,CAAA,CAAaiB,CAAA,EACnC,MAAAT,CAAA,EAAAiB,CAAA,IAAAjB,CAAA,EAAAO,CAAoC,UAAS,CAAAD,CAAA,CAAAjC,CAAA,MAC7C4C,CAAA,CAAAA,CAAA,UAAAA,CAAA,WAAAzW,KAAA,CAAAyW,CAAA,IAAAA,CAAA,WAAAf,IAAA,KACA,CAtBA,CAAA3B,CAAA,CAAAe,CAAA,KAuBA,CACA4B,CAAA,YAAAA,MAAA,WAAA5C,CAAA,CAAA0B,CAAA,EACA,IAAA3B,CAAA,QACA,IAAAK,CAAA,IAAAJ,CAAA,CAAAhU,MAAA,CAAAqU,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAP,CAAA,CAAAI,CAAA,GAAAsB,CAAA,CAAAA,CAAA,CAAAmB,OAAA,CAAAzC,CAAA,GACAL,CAAAA,CAAA,CAAAK,CAAA,EAAAJ,CAAA,CAAAI,CAAA,MACAJ,IAAA,EAAAA,CAAA,YAA6D,EAA7D,OAAAhU,MAAA,CAAA8W,qBAAA,CACA,QAAApD,CAAA,GAAAU,CAAA,CAAApU,MAAA,CAAA8W,qBAAA,CAAA9C,CAAA,EAAAN,CAAA,CAAAU,CAAA,CAAAD,MAAA,CAAAT,CAAA,GACA,EAAAgC,CAAA,CAAAmB,OAAA,CAAAzC,CAAA,CAAAV,CAAA,IAAA1T,MAAA,CAAAqU,SAAA,CAAA0C,oBAAA,CAAAxC,IAAA,CAAAP,CAAA,CAAAI,CAAA,CAAAV,CAAA,IACAK,CAAAA,CAAA,CAAAK,CAAA,CAAAV,CAAA,GAAAM,CAAA,CAAAI,CAAA,CAAAV,CAAA,WAEAK,CAAA,CACA,CACAhC,CAAA,YAAAA,eAA6C,WAAAC,CAAA,EAC7C,UAAAA,CAAA,CAAAC,UAAA,CAAAD,CAAA,UAAAA,CAAA,EACA,CACAhS,MAAA,CAAAC,cAAc,CAAAF,CAAA,aAAwB,EAAAG,KAAe,GAAG,GACxDH,CAAA,CAAAwQ,GAAA,CAAAxQ,CAAA,CAAAiX,aAAiC,CAAAjX,CAAA,CAAA4Q,OAAQ,CAAA5Q,CAAa,CAAAkX,UAAA,CAAAlX,CAAA,CAAAmX,aAAA,CAAAnX,CAAA,CAAAoX,WAAA,YACtDC,CAAgB,CAAAzS,CAAA,CAAA1C,CAAkC,SAClDoV,CAAA,CAAApV,CAAA,OAA0C,CAC1CqV,CAAc,CAAAvF,CAAiB,CAAA9P,CAAA,SAC/B+C,CAAA,CAAA/C,CAAA,MACAjC,MAAA,CAAAC,cAAA,CAAAF,CAAA,gBAAA6D,UAAA,IAAAC,GAAA,mBAAAmB,CAAA,CAAAmS,WAAA,QAIAI,CAAA,UAAAC,CAAA,EACA,IAsZAA,CAAA,CACA7C,CAAA,CAvZA8C,CAAA,WACAD,CAAA,GACA,oBAAAE,OAAA,EAAAF,CAAA,YAAAE,OAAA,EACAF,CAAA,YAAAG,CAZkD,CAYlDD,OAAA,EAmZAF,CAAA,CAlZAA,CAAA,CAmZA7C,CAAA,IAnZA8C,CAAA,EAoZAD,CAAA,CAAA7D,OAAA,UAAAqB,CAAA,CAAAH,CAAA,EACKF,CAAA,CAAAE,CAAA,EAAAG,CAAA,CACL,EACAL,CAAA,CAvZA,EAEA7B,KAAA,CAAAC,OAAA,CAAAyE,CAAA,EACAA,CAAA,CAAA7D,OAAA,UAAApO,CAAA,EACA,IAAAhD,CAAA,CAAAgD,CAAA,IAAArF,CAAA,CAAAqF,CAAA,IACakS,CAAA,CAAAlV,CAAA,EAAArC,CAAA,CACb,EAGAuX,CAAA,CAAAD,CAAA,EAGAC,CAAA,CACA,CAOAG,CAAA,UAAAC,CAAA,SAAAA,CAAA,CAAA1P,OAAA,4BAAA2P,IAAA,IAUAC,CAAA,UAAAxS,CAAA,EACA,IAAAgN,CAAA,CAAAhN,CAAA,CAAAgN,KAAA,CAAAC,CAAA,CAAAjN,CAAA,CAAAiN,SAAA,CAAAC,CAAA,CAAAlN,CAAA,CAAAkN,aAAA,IACA,CAAAK,KAAA,CAAAC,OAAA,CAAAR,CAAA,GACA,IAAAyF,CAAA,WAAAC,kBAAA,CAAAL,CAAA,CAAArF,CAAA,WACAC,CAAA,EACAwF,CAAA,CAAAnY,IAAA,cAAAoY,kBAAA,CAAAjF,IAAA,CAAAC,SAAA,CAAAT,CAAA,IAEAC,CAAA,EACAuF,CAAA,CAAAnY,IAAA,kBAAAoY,kBAAA,CAAAxF,CAAA,GAEAuF,CAAA,CAAAE,IAAA,MACA,GACA,SAAA1F,CAAA,GAAAM,KAAA,CAAAC,OAAA,CAAAP,CAAA,EACA,gFAGA3K,CAAA,CAAA0K,CAAA,CAAAW,MAAA,UAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAKK,OAJLF,CAAA,CAAAtT,IAAA,EACA0S,KAAA,CAAAqF,CAAA,CAAAxE,CAAA,EACSZ,SAAA,CAAAA,CAAA,CAAAQ,IAAA,CAAAC,SAAA,CAAAT,CAAA,CAAAa,CAAA,GAAAtN,KAAAA,CAAA,CACT,EACKoN,CAAA,CACL,WACA,SAAA8E,kBAAA,CAAAjF,IAAA,CAAAC,SAAA,CAAApL,CAAA,GACA,CAIAsQ,CAAA,UAAA5S,CAAA,EACA,IAAA6S,CAAA,CAAA7S,CAAA,CAAA6S,GAAA,CAAA7F,CAAA,CAAAhN,CAAA,CAAAgN,KAAA,CAAAC,CAAA,CAAAjN,CAAA,CAAAiN,SAAA,CAAAC,CAAA,CAAAlN,CAAA,CAAAkN,aAAA,CAAA+E,CAAA,CAAAjS,CAAA,CAAAiS,OAAA,CAAAa,CAAA,CAAA9S,CAAA,CAAA8S,KAAA,CAAAC,CAAA,CAAA/S,CAAA,CAAA+S,YAAA,QACA1Q,CAAA,iCACA,IAAAmO,CAAA,QACAD,CAAA,eAAAyC,CAAA,EACA,OAAAA,CAAA,CAAAnC,KAAA,EACA,OAEA,SAAAiC,CAAA,CAAAD,CAAA,CAAAtE,CAAA,EAAA0E,MAAA,QAAAhB,OAAA,CAAA1D,CAAA,CAAAA,CAAA,oBADAiC,CAAAA,CAAA,CAAAuB,CAAA,CAAA9D,OAAA,CAAAjB,CAAA,CAAAC,CAA+D,CAAAC,CAAA,GAC/D,wCAAA+E,CAAA,EAAAzB,IAAA,CAAAA,CAAA,EAAAuC,CAAA,SACA,WAAAC,CAAA,CAAAlC,IAAA,IACS,CACJ,EACL,EACA,CAIAxS,CAAA,UAAA0B,CAAA,EACA,IAAA6S,CAAA,CAAA7S,CAAA,CAAA6S,GAAA,CAAA7F,CAAA,CAAAhN,CAAA,CAAAgN,KAAA,CAAAC,CAAA,CAAAjN,CAAA,CAAAiN,SAAA,CAAAC,CAAA,CAAAlN,CAAA,CAAAkN,aAAA,CAAA+E,CAAA,CAAAjS,CAAA,CAAAiS,OAAA,CAAAa,CAAA,CAAA9S,CAAA,CAAA8S,KAAA,CAAAC,CAAA,CAAA/S,CAAA,CAAA+S,YAAA,QACA1Q,CAAA,iCACA,IAAA6Q,CAAA,QACA3C,CAAA,eAAAyC,CAAA,EACA,OAAAA,CAAA,CAAAnC,KAAA,EACA,OAMA,SAAAiC,CAAA,CAAAD,CAAA,KALAL,CAAA,EACAxF,KAAA,CAAAA,CAAA,CACAC,SAAA,CAAAA,CAAA,CACqBC,aAAA,CAAAA,CAAA,CACrB,EACAqB,CAAA,EAAA0E,MAAA,OAAAhB,OAAA,CAAAA,CAAA,EAAAc,CAAA,SACA,WAAAC,CAAA,CAAAlC,IAAA,IACS,CACJ,EACL,EACA,CAIAa,CAAA,YACA,SAAAA,CAAA,CAAAkB,CAAA,CAAAM,CAAA,EACA,KAAAN,GAAA,CAAAA,CAAA,CACA,KAAAM,OAAA,CAAAA,CAAA,KACA,OACAxB,CAAA,CAAA7C,SAAA,CAAA4C,UAAA,UAAA1E,CAAA,CAAAC,CAAA,CAAAmG,CAAA,EACA,IAAApT,CAAA,MAAAmT,OAAA,CAAAlB,CAAA,CAAAjS,CAAA,CAAAiS,OAAA,CAAAe,CAAA,CAAAhT,CAAA,CAAA8S,KAAA,CAAAA,CAAA,CAAAE,KAAA,IAAAA,CAAA,CAAAnB,CAAA,CAAA5D,OAAA,CAAA+E,CAAA,CAAAK,CAAA,CAAArT,CAAA,CAAAiT,MAAA,CAAAF,CAAA,CAAA1B,CAAA,CAAArR,CAAA,sCAEAsT,CAAA,EACAT,GAAA,CAFA,KAAAA,GAAA,CAGA7F,KAAA,CAAAA,CAAA,CACAC,SAAA,CAAAA,CAAA,CACAgF,OAAA,CAAA1D,CAAA,CAAAA,CAAA,IAAAyD,CAAA,CAAAC,CAAA,GAAAD,CAAA,CAAAoB,CAAA,GACAlG,aAAA,CAAA1M,KAAAA,CAAA,CACAsS,KAAA,CAAAA,CAAA,CACAG,MAAA,CATAI,KAAA,IAAAA,CAAA,QAAAA,CAAA,CAUSN,YAAA,CAAAA,CAAA,CACT,EACA,CAIApB,CAAA,CAAA7C,SAAA,CAAA1D,OAAA,UAAAmI,CAAA,CAAAtG,CAAA,CAAAmG,CAAA,EACA,OAAA/Q,CAAA,+BACA,IAAArC,CAAA,CAAAiS,CAAA,CAAAe,CAAA,CAAAF,CAAA,CAAAO,CAAA,CAAAJ,CAAA,CAAAF,CAAA,CAAAF,CAAA,CAAAW,CAAA,CAAAxG,CAAA,CAAAE,CAAA,CAAAxJ,CAAA,QACA6M,CAAA,eAAAkD,CAAA,EACA,OAAAA,CAAA,CAAA5C,KAAA,EACA,OAIA,OAHAoB,CAAA,CAAAjS,CAAAA,CAAA,MAAAmT,OAAA,EAAAlB,OAAA,CAAAa,CAAA,CAAAE,KAAA,IAAAA,CAAAA,CAAA,CAAAhT,CAAA,CAAA8S,KAAA,EAAAjB,CAAA,CAAA5D,OAAA,CAAA+E,CAAA,CAAAC,CAAA,CAAAI,KAAA,IAAAA,CAAAA,CAAA,CAAArT,CAAA,CAAAiT,MAAA,SAAAI,CAAA,CAAAN,CAAA,CAAA1B,CAAA,CAAArR,CAAA,+BACA6S,CAAA,MAAAA,GAAA,CACA7F,CAAA,CAAAwG,CAAAA,CAAA,CAAAE,CAAA,CAAAH,CAAA,GAAAvG,KAAA,CAAAE,CAAA,CAAAsG,CAAA,CAAAtG,aAAA,CACA,GAAAoG,CAAA,EACAT,GAAA,CAAAA,CAAA,CACA7F,KAAA,CAAAA,CAAA,CACAC,SAAA,CAAAA,CAAA,CACAgF,OAAA,CAAA1D,CAAA,CAAAA,CAAA,IAAAyD,CAAA,CAAAC,CAAA,GAAAD,CAAA,CAAAoB,CAAA,GACAlG,aAAA,CAAAA,CAAA,CACA4F,KAAA,CAAAA,CAAA,CACAG,MAAA,CAAAA,CAAA,CAC6BF,YAAA,CAAAA,CAAA,CAC7B,QACA,EAEA,SADA,EAAAjC,IAAA,GAAApN,IAAA,CACA,CACa,CACJ,EACT,EACA,CAIAiO,CAAA,CAAA7C,SAAA,CAAA2C,aAAA,UAAAkC,CAAA,CAAAP,CAAA,EACA,OAAA/Q,CAAA,+BACA,IAAArC,CAAA,CAAAiS,CAAA,CAAAe,CAAA,CAAAF,CAAA,CAAAO,CAAA,CAAAJ,CAAA,CAAAF,CAAA,CAAAF,CAAA,CAAAvI,CAAA,CAAA2C,CAAA,CAAAvJ,CAAA,QACA6M,CAAA,eAAAiD,CAAA,EACA,OAAAA,CAAA,CAAA3C,KAAA,EACA,OAWA,OAVAoB,CAAA,CAAAjS,CAAAA,CAAA,MAAAmT,OAAA,EAAAlB,OAAA,CAAAa,CAAA,CAAAE,KAAA,IAAAA,CAAAA,CAAA,CAAAhT,CAAA,CAAA8S,KAAA,EAAAjB,CAAA,CAAA5D,OAAA,CAAA+E,CAAA,CAAAC,CAAA,CAAAI,KAAA,IAAAA,CAAAA,CAAA,CAAArT,CAAA,CAAAiT,MAAA,SAAAI,CAAA,CAAAN,CAAA,CAAA1B,CAAA,CAAArR,CAAA,+BACA6S,CAAA,MAAAA,GAAA,CACAvI,CAAA,CAAAqJ,CAAA,CAAA9L,GAAA,UAAA7H,CAAA,EAEyB,OAAA0T,CAAA,CADzB1T,CAAA,CAAAuT,QAAA,CACyB,CAAAvG,KAAA,CACzB,EAKA,GAAAsG,CAAA,EACAT,GAAA,CAAAA,CAAA,CACA7F,KAAA,CAAA1C,CAAA,CACA2C,SAAA,CAPA0G,CAAA,CAAA9L,GAAA,UAAA7H,CAAA,EAEyB,OADzBA,CAAA,CAAAiN,SAAA,CAEA,EAKAgF,OAAA,CAAA1D,CAAA,CAAAA,CAAA,IAAAyD,CAAA,CAAAC,CAAA,GAAAD,CAAA,CAAAoB,CAAA,GACAlG,aAAA,CAAA1M,KAAAA,CAAA,CACAsS,KAAA,CAAAA,CAAA,CACAG,MAAA,CAAAA,CAAA,CAC6BF,YAAA,CAAAA,CAAA,CAC7B,QACA,EAEA,SADA,EAAAjC,IAAA,GAAApN,IAAA,CACA,CACa,CACJ,EACT,EACA,CACAiO,CAAA,CAAA7C,SAAA,CAAA8E,UAAA,UAAA3B,CAAA,EAEA,OADA,KAAAkB,OAAA,CAAAlB,OAAA,CAAAA,CAAA,CACA,KACA,CAIAN,CAAA,CAAA7C,SAAA,CAAA+E,SAAA,UAAAC,CAAA,CAAAnZ,CAAA,EAEA,IADAqF,CAAA,CACAiS,CAAA,MAAAkB,OAAA,CAAAlB,OAAA,QACAA,CAAA,CAGAA,CAAA,CAAA6B,CAAA,EAAAnZ,CAAA,CAGA,KAAAwY,OAAA,CAAAlB,OAAA,CAAAjS,CAAAA,CAAAA,CAAA,KAAA8T,CAAA,EAAAnZ,CAAA,CAAAqF,CAAA,EAEA,KACA,CAIA2R,CAAA,CAAA7C,SAAA,CAAAiF,WAAA,UAAApZ,CAAA,EAEA,OADA,KAAAkY,GAAA,CAAAlY,CAAA,CACA,KACA,CACCgX,CAAA,CACD,YAEA2B,CAAA,CAAAtT,CAAA,EACA,IAAA6S,CAAA,CAAA7S,CAAA,CAAA6S,GAAA,CAAA7F,CAAA,CAAAhN,CAAA,CAAAgN,KAAA,CAAAC,CAAA,CAAAjN,CAAA,CAAAiN,SAAA,CAAAgF,CAAA,CAAAjS,CAAA,CAAAiS,OAAA,CAAA/E,CAAA,CAAAlN,CAAA,CAAAkN,aAAA,CAAA4F,CAAA,CAAA9S,CAAA,CAAA8S,KAAA,CAAAE,CAAA,CAAAhT,CAAA,CAAAiT,MAAA,CAAAA,CAAA,CAAAD,KAAA,IAAAA,CAAA,QAAAA,CAAA,CAAAD,CAAA,CAAA/S,CAAA,CAAA+S,YAAA,QACA1Q,CAAA,+BACA,IAAA2R,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAxE,CAAA,CAAAyE,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,QACA/D,CAAA,eAAA8C,CAAA,EACA,OAAAA,CAAA,CAAAxC,KAAA,EACA,OAGA,OAFAmD,CAAA,CAAAf,MAAA,GAAAA,CAAA,CAAAsB,WAAA,GAAA3B,CAAA,CAAAtU,CAAA,CACA2V,CAAA,CAAA1G,KAAA,CAAAC,OAAA,CAAAR,CAAA,EACA,GAAAgH,CAAA,EACAnB,GAAA,CAAAA,CAAA,CACA7F,KAAA,CAAAA,CAAA,CACAC,SAAA,CAAAA,CAAA,CACAC,aAAA,CAAAA,CAAA,CACA+E,OAAA,CAAAA,CAAA,CACAa,KAAA,CAAAA,CAAA,CACyBC,YAAA,CAAAA,CAAA,CACzB,QACA,MA+HAmB,CAAA,CACAM,CAAA,OA9HA,IA6HAN,CAAA,CA9HAA,CAAA,CAAAb,CAAA,CAAAvC,IAAA,GA+HA0D,CAAA,CAAAN,CAAA,CAAAjC,OAAA,CAAA3T,GAAA,iBACA,GAAAkW,CAAA,CAAAC,UAAA,qBACAP,CAAA,CAAAQ,IAAA,GAGAR,CAAA,CAAAS,IAAA,IAnIA,MACA,EAMA,GALAjF,CAAA,CAAA2D,CAAA,CAAAvC,IAAA,GACAqD,CAAA,CAAAF,CAAA,EAAA1G,KAAA,CAAAC,OAAA,CAAAkC,CAAA,GAAAA,CAAA,CAAAkF,IAAA,UAAA5U,CAAA,EAEqB,OADrBA,CAAA,CAAA0D,IAAA,CAEA,IAAAgM,CAAA,CAAAhM,IAAA,CACAwQ,CAAA,CAAAW,EAAA,GAAAnF,CAAA,CAAAoF,MAAA,EAAAX,CAAA,CAEA,OADAC,CAAA,CAAAF,CAAA,CAAAjC,OAAA,CAAAoC,CAAA,CAAAH,CAAkE,CAAA5O,MAAA,CAClE,GAAAiJ,CAAA,CAAAA,CAAA,IAAA0F,CAAA,EAAAvQ,IAAA,CAAAgM,CAAA,EAAAA,CAAA,GAAAuC,OAAA,CAAAmC,CAAA,CAAA9O,MAAA,CAAA+O,CAAA,UAGAC,CAAA,kBAAA5E,CAAA,EAAAjK,KAA0E,CAAAiK,CAAA,EAAAA,CAAkB,CAC5F,IAAAjQ,CAAA,CAAAmS,WAAA,CAAArD,CAAA,CAAAA,CAAA,IAAA+F,CAAA,GAAAhP,MAAA,CAAA4O,CAAA,CAAA5O,MAAA,CAAA2M,OAAA,CAAAiC,CAAA,CAAAjC,OAAA,IAAAjF,KAAA,CAAAA,CAAA,CAAAC,SAAA,CAAAA,CAAA,GAGS,CACJ,EACL,EACA,SAgDA7B,CAAA,CAAAyH,CAAA,CAAAU,CAAA,CAAAtG,CAAA,CAAAmG,CAAA,EACA,OAAA/Q,CAAA,+BACA,IAAA0S,CAAA,QACAxE,CAAA,eAAAvQ,CAAA,EAES,SAAA+U,IADTpD,CAAA,CAAAkB,CAAA,EACSzH,OAAA,CAAAmI,CAAA,CAAAtG,CAAA,CAAAmG,CAAA,GACJ,EACL,EACA,SA8DAM,CAAA,CAAAH,CAAA,EAEA,WAAiB,EAAjB,OAAAA,CAAiB,CACjB,OAAAvG,KAAA,CAAAuG,CAAA,MAFAvT,CAAA,CAGAkN,CAAA,CAAA1M,KAAAA,CAAA,CACAwU,CAAA,CAAAzB,CAAA,CAAA0B,WAAA,CAAAnN,MAAA,UAAAoN,CAAA,QAAAA,qBAAA,GAAAA,CAAA,CAAAC,IAAA,UACA,IAAAH,CAAA,CAAApG,MAAA,EACA1B,CAAAA,CAAA,QAAAlN,CAAAA,CAAA,CAAAgV,CAAA,IAAAhY,IAAA,GAAAgD,KAAA,IAAAA,CAAA,QAAAA,CAAA,CAAArF,KAAA,EAEA,CAAAqS,KAAA,CAAA8E,CAAA,CAAAsD,KAAA,CAAA7B,CAAA,EAAArG,aAAA,CAAAA,CAAA,EACA,CAxKA,CAAAyE,aAAA,CAAAA,CAAA,CAqDAnX,CAAA,CAAAkX,UAAA,CATA,SAAAmB,CAAA,CAAA7F,CAAA,CAAAC,CAAA,CAAAmG,CAAA,EACA,OAAA/Q,CAAA,+BACA,IAAA0S,CAAA,QACAxE,CAAA,eAAAvQ,CAAA,EAES,SAAA+U,IADTpD,CAAA,CAAAkB,CAAA,EACSnB,UAAA,CAAA1E,CAAA,CAAAC,CAAA,CAAAmG,CAAA,GACJ,EACL,EACA,CA6CA5Y,CAAA,CAAA4Q,OAAA,CAAAA,CAAA,CA4CA5Q,CAAA,CAAAiX,aAAe,CATf,SAAAoB,CAAA,CAAAc,CAAA,CAAAP,CAAA,EACA,OAAA/Q,CAAA,+BACA,IAAA0S,CAAA,QACAxE,CAAA,eAAAvQ,CAAA,EAES,SAAA+U,IADTpD,CAAA,CAAAkB,CAAA,EACSpB,aAAA,CAAAkC,CAAA,CAAAP,CAAA,GACJ,EACL,EACA,CAEA5Y,CAAA,SAAA4Q,CAAA,CA+CA5Q,CAAA,CAAAwQ,GAAA,CAPA,SAAAqK,CAAA,EAEA,QADApI,CAAA,GAAqB,CACrBqI,CAAA,GAAAA,CAAA,CAAA3G,SAAA,CAAAC,MAAA,CAAA0G,CAAA,GACArI,CAAA,CAAAqI,CAAA,IAAA3G,SAAA,CAAA2G,CAAA,SAEAD,CAAA,CAAA1H,MAAA,UAAA4H,CAAA,CAAAC,CAAA,CAAA1H,CAAA,WAAAyH,CAAA,CAAAC,CAAA,CAAA1H,CAAAA,CAAA,IAAAb,CAAA,CAAAA,CAAA,CAAAa,CAAA,WACA,CAWA,cAAAvT,CAAA,CAAAC,CAAA,ECtfA,IAAAib,CAAA,CADAC,CAAA,YAAAA,SAAA,GACAD,CAAA,UAAAE,CAAA,CAAA9J,CAAA,EAIA,MAAA4J,CAHAA,CAAe,CAAAhb,MAAA,CAAgBmb,cAAA,EAC/B,EAAAC,SAAA,IAA8B,YAAAtI,KAAA,WAAAoI,CAAA,CAAA9J,CAAA,EAAA8J,CAAA,CAAAE,SAAA,CAAAhK,CAAA,GAC9B,SAAA8J,CAAA,CAAA9J,CAAA,UAAAgD,CAAA,IAAAhD,CAAA,CAAApR,MAAA,CAAAqU,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAnD,CAAA,CAAAgD,CAAA,GAAA8G,CAAAA,CAAA,CAAA9G,CAAA,EAAAhD,CAAA,CAAAgD,CAAA,KACA8G,CAAA,CAAA9J,CAAA,EACA,CACA,SAAA8J,CAAA,CAAA9J,CAAA,EACA,sBAAAA,CAAA,EAAAA,IAAA,GAAAA,CAAA,CACA,uCAAAiK,MAAA,CAAAjK,CAAA,4CAEAkK,CAAA,QAAAjW,WAAA,CAAA6V,CAAA,EADA,CAAAA,CAAA,CAAwB9J,CAAA,EAExB8J,CAAA,CAAA7G,SAAA,CAAAjD,IAAA,GAAAA,CAAA,CAAApR,MAAA,CAAA0U,MAAA,CAAAtD,CAAA,EAAAkK,CAAAA,CAAA,CAAAjH,SAAA,CAAAjD,CAAA,CAAAiD,SAAA,KAAAiH,CAAA,EACC,CACD,CACAtb,MAAA,CAAAC,cAAmB,CAAAF,CAAA,eAAAG,KAAA,MACnBH,CAAA,CAAAoX,WAAA,YACAA,CAAA,UAAAoE,CAAA,EAEA,SAAApE,CAAA,CAAAsC,CAAA,CAAA9I,CAAA,EACA,IAAA6K,CAAA,MACAC,CAAA,CAAAtE,CAAA,CAAAuE,cAAA,CAAAjC,CAAA,OAAAzG,IAAA,CAAAC,SAAA,EACAwG,QAAA,CAAAA,CAAA,CACS9I,OAAA,CAAAA,CAAA,CACT,SAEA3Q,MAAA,CAAAmb,cAAA,CADAK,CAAA,CAAAD,CAAA,CAAAhH,IAAA,MAAAkH,CAAA,QACAtE,CAAA,CAAA9C,SAAA,EACAmH,CAAA,CAAA/B,QAAA,CAAAA,CAAA,CACA+B,CAAA,CAAA7K,OAAA,CAAAA,CAAA,CAEA,mBAAAgL,KAAA,CAAAC,iBAAA,EACAD,KAAA,CAAAC,iBAAA,CAAAJ,CAAA,CAAArE,CAAA,EAEAqE,CAAA,CACA,OAhBAP,CAAA,CAAA9D,CAAA,CAAAoE,CAAA,EAiBApE,CAAA,CAAAuE,cAAA,UAAAjC,CAAA,EACA,IACA,OAAAA,CAAA,CAAAY,MAAA,IAAAoB,OAAA,CAEA,MAAA/F,CAAA,EACA,8BAAA+D,CAAA,CAAA5O,MAAA,KACA,CACA,CACCsM,CAAA,CACD,CAAAwE,KAAA,EACA5b,CAAA,CAAAoX,WAAA,CAAAA,CAAA,iBAAA0E,CAAA,CAAAC,CAAA,CAAA7Z,CAAA,EAAAA,CAAA,CAAA8Z,CAAA,CAAAD,CAAA,EAAA7Z,CAAA,CAAAiZ,CAAA,CAAAY,CAAA,0BAAAnB,CAAA,QC7CAqB,CAAA,oBAAAvF,MAAA,YAAwC,EAAxC,OAAeA,MAAA,CAAAwF,GAAA,CAA0BxF,MAAA,CAAAwF,GAAA,+BAAAlW,KAAAA,CAAA,UCF2TmW,CAAA,CAAAC,CAAA,QAAAD,CAAAA,CAAA,oBAAAzF,MAAA,mBAAAA,MAAA,CAAAC,QAAA,UAAAyF,CAAA,gBAAAA,CAAA,WAAAA,CAAA,SAAAA,CAAA,qBAAA1F,MAAA,EAAA0F,CAAA,CAAA9W,WAAA,GAAAoR,MAAA,EAAA0F,CAAA,GAAA1F,MAAA,CAAApC,SAAA,iBAAA8H,CAAA,GAAAA,CAAA,WAWpWC,CAAA,CAAAlc,CAAA,EACA,OAAAmc,SAGAA,CAAA,CAAAnc,CAAA,CAAAoc,CAAA,EACA,OAAAJ,CAAA,CAAAhc,CAAA,GACA,oBAAA8S,IAAA,CAAAC,SAAA,CAAA/S,CAAA,MAGA,kBAAAA,CAAA,CAAAqC,IAAA,cAAAga,MAAA,CAAArc,CAAA,CAAAqC,IAAA,uBAGA,SACA,GAAArC,IAAA,GAAAA,CAAA,CACA,oBAEAsc,SAQAtc,CAAA,CAAAuc,CAAA,EACA,GAAAA,EAAA,GAAAA,CAAA,CAAA5F,OAAA,CAAA3W,CAAA,EACA,uBAmBAwc,CAAA,CAAAJ,CAAA,CAAAK,CAAA,CA4CAD,CAAA,CAA+DE,CAAA,CA5D/DN,CAAA,IAAAC,MAAA,CAAAE,CAAA,EAAAvc,CAAA,GAAA0c,CAAA,EA4DAF,CAAA,CA5DAxc,CAAA,CA4D+D0c,CAAA,CAAAF,CAAA,CAAArB,MAAA,CDlGtBW,CAAA,CCkGsB,EAG/D,mBAAAY,CAAA,CACAA,CAAA,CAGA,mBAAAF,CAAA,CAAAN,OAAA,CACAM,CAAA,CAAAN,OAAA,OAJA,CAhEA,IAGAQ,KAAA7W,CAAA,GAAA6W,CAAA,EAAmD,IAAAC,CAAA,CAAAD,CAAA,CAAArI,IAAA,CAAArU,CAAA,KAGnD2c,CAAA,GAAA3c,CAAA,CACA,uBAAA2c,CAAA,CAAAA,CAAA,CAAAR,CAAA,CAAAQ,CAAA,CAAAP,CAAA,OAEA,GAAAxJ,KAAA,CAAAC,OAAA,CAAA7S,CAAA,EACA,OAAA4c,SAwBAC,CAAA,CAAAT,CAAA,EACA,GAAAS,CAAA,GAAAA,CAAA,CAAA5I,MAAA,CACA,cAGAmI,CAAA,CAAAnI,MAAA,CAzEA,EA0EA,oBAOA,IAJA6I,CAAA,CAAAC,IAAA,CAAAC,GAAA,CA9EA,GA8EAH,CAAA,CAAA5I,MAAA,EACAgJ,CAAA,CAAAJ,CAAA,CAAA5I,MAAA,CAAA6I,CAAA,CAAAI,CAAA,IAGA1J,CAAA,GAAAA,CAAA,CAAAsJ,CAAA,GAAAtJ,CAAA,CACA0J,CAAA,CAAAvd,IAAA,CAAAwc,CAAA,CAAAU,CAAA,CAAArJ,CAAA,EAAA4I,CAAA,UAGAa,CAAA,GAAAA,CAAA,CACIC,CAAA,CAAAvd,IAAA,oBACJsd,CAAA,IACAC,CAAA,CAAAvd,IAAA,QAAA0c,MAAA,CAAAY,CAAA,iBAGA,IAAAC,CAAA,CAAAlF,IAAA,YA/CAhY,CAAA,CAAAoc,CAAA,SAMAI,CAAA,CAHAxc,CAAA,CAGAoc,CAAA,CAHAA,CAAA,CAGAK,CAAA,CAAA3c,MAAA,CAAA2c,IAAA,CAAAD,CAAA,EAGA,CAAc,GAAdC,CAAA,CAAAxI,MAAc,CACd,KAGAmI,CAAA,CAAAnI,MAAA,CAzDA,EA0DA,IAAAkJ,SAgDAX,CAAA,MAAAY,CAAA,CAAAtd,MAAA,CAAAqU,SAAA,CAAAnL,QAAA,CAAAqL,IAAA,CAAAmI,CAAA,EAAAvU,OAAA,kBAAAA,OAAA,aAGAmV,QAAA,GAAAA,CAAA,qBAAAZ,CAAA,CAAArX,WAAA,MAAA9C,CAAA,CAAAma,CAAA,CAAArX,WAAA,CAAA9C,IAAA,IAGA,iBAAAA,CAAA,EAAAA,EAAA,GAAAA,CAAA,CACA,OAAAA,CAAA,CACA,OAGA+a,CAAA,EA3DAZ,CAAA,MAOA,KAAAa,CAJA,CAAAnQ,GAAA,UAAAiM,CAAA,EACA,IAAAnZ,CAAA,CAAAmc,CAAA,CAAAK,CAAA,CAAArD,CAAA,EAAAiD,CAAA,SACGjD,CAAA,MAAAnZ,CAAA,CACH,EACAgY,IAAA,YAlBA,CA1BAhY,CAAA,CAAAoc,CAAA,UAIA,OAAAjB,MAAA,CAAAnb,CAAA,EACA,EApBAA,CAAA,cELAsd,CAAA,CAAAC,CAAA,EACA,IAAAC,CAAA,CAAAD,CAAA,CAAApJ,SAA8B,CAAAsJ,MAAS,WACvC,SAAAD,CAAA,EAAAE,SDRAC,CAAA,CAAApC,CAAA,EAGA,IAH6CqC,OAAA,CCQP,EDRO,CAI7C,YAAArC,IAAA,EAAAA,CAAA,CAAAA,CAAA,oCACA,CCGsC,GAAAgC,CAAA,CAAApJ,SAAA,CAAA+H,OAAA,CAAAsB,CAAA,CHPG1B,CAAA,EGWzCyB,CAAAA,CAAA,CAAApJ,SAAA,CHXyC2H,CAAA,CGWzC,CAAA0B,CAAA,EACA,SCmGAK,CAAA,CAAAC,CAAA,EACA,OAAAA,IAAA,EAAAA,CAAA,mBAAAA,CAAA,CAAAtD,IAAA,CACA,CApEA,CAxCA,WAoBA,SAAAuD,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,KAAAC,KAAA,CAAAH,CAAA,CAAAG,KAAA,CACA,KAAAC,GAAA,CAAAH,CAAA,CAAAG,GAAA,CACA,KAAAJ,UAAA,CAAAA,CAAA,CACA,KAAAC,QAAA,CAAAA,CAAA,CACA,KAAAC,MAAA,CAAAA,CAAA,QAKAG,CAHA,CAAAlK,SAAA,CAGAsJ,MAAA,YACA,OACAU,KAAA,MAAAA,KAAA,CACAC,GAAA,MAAAA,GAAA,CACA,EAGKL,CAAA,IAGL,CA6DAT,CAAA,CAvDA,WA8BA,SAAAgB,CAAA,CAAA9D,CAAA,CAAA2D,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAze,CAAA,EACA,KAAAwa,IAAA,CAAAA,CAAA,CACA,KAAA2D,KAAA,CAAAA,CAAA,CACA,KAAAC,GAAA,CAAAA,CAAA,CACA,KAAAG,IAAA,CAAAA,CAAA,CACA,KAAAC,MAAA,CAAAA,CAAA,CACA,KAAAxe,KAAA,CAAAA,CAAA,CACA,KAAAye,IAAA,CAAAA,CAAA,CACA,KAAAlJ,IAAA,aAKAmJ,CAHA,CAAAvK,SAAA,CAGAsJ,MAAA,YACA,OACAjD,IAAA,MAAAA,IAAA,CACAxa,KAAA,MAAAA,KAAA,CACAue,IAAA,MAAAA,IAAA,CACAC,MAAA,MAAAA,MAAA,CACA,EAGKF,CAAA,IAGL,KCpGAK,CAAA,EACAC,IAAA,IACAC,QAAA,iBACAC,mBAAA,4DACAC,kBAAA,iDACAC,QAAA,UACAC,YAAA,gBACAC,KAAA,0DACAC,QAAA,kBACAC,cAAA,uBACAC,cAAA,+CACAC,kBAAA,SAEA,mEACAC,QAAA,IACAC,UAAA,IACAC,WAAA,IACAC,YAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,YACAC,WAAA,YACAC,WAAA,kBACAC,SAAA,sBACAC,SAAA,UACAC,QAAA,UACAC,WAAA,UACAC,gBAAA,+CACAC,uBAAA,UACAC,oBAAA,qCACAC,oBAAA,2DACAC,eAAA,wDACAC,oBAAA,2DACAC,uBAAA,2DACAC,mBAAA,6CACAC,kBAAA,8CACAC,mBAAA,qCACAC,yBAAA,8CACAC,mBAAA,gDACAC,eAAA,iCACAC,mBAAA,uBACAC,mBAAA,6CACAC,sBAAA,6CACAC,kBAAA,+BACAC,iBAAA,gCACAC,wBAAA,gCACO,CACPC,CAAA,CAAAzhB,MAAA,CAAA0hB,MAAA,cAwSAC,CAAA,CAAAC,CAAA,CAAAlH,CAAA,CAAAmH,CAAA,MAAAC,CAAA,CAAAF,CAAA,CAAAlH,CAAA,KAGAoH,CAAA,EACA,IAAAD,CAAW,qBAAAC,CAAA,CAEX,OAAAA,CAAA,KAEAC,CAAA,CAAAF,CAAA,CAAAC,CAAA,CAAAE,KAAA,CAAAF,CAAA,CAAAG,KAAA,IAGA,UAA6B,EAA7B,OAAWF,CAAkB,CAE7B,OAAAA,CAAA,KAEA,KAAAG,CAAA,CAAAL,CAAA,CAAAD,CAAA,CAAAI,KAAA,CAAAJ,CAAA,CAAAK,KAAA,IAGAC,CAAA,EACA,aAAuB,EAAvB,OAAaA,CAAU,CAEvB,OAAAA,CAAA,KAEAC,CAAA,CAAAD,CAAA,CAAAxH,CAAA,KAGA,UAA4C,EAA5C,OAAayH,CAAoB,CAEjC,OAAAA,CAAA,CAEA,CACA,UEtXSxH,CAAK,CAAAyH,CAAA,EACd,OAAAC,SFsIAC,CAAA,CAAAV,CAAA,MAAAW,CAAA,CAAArO,SAAA,CAAAC,MAAA,IAAAD,KAAAnO,CAAA,GAAAmO,SAAA,IAAAA,SAAA,IAAA2K,CAAA,CAIA2D,CAAA,CAAAzc,KAAAA,CAAA,CACA0c,CAAA,CAAA3P,KAAA,CAAAC,OAAA,CAAAuP,CAAA,EACA3F,CAAA,EAAA2F,CAAA,EACAjP,CAAA,IACAqP,CAAA,IACAC,CAAA,CAAA5c,KAAAA,CAAA,CACAsT,CAAA,CAAAtT,KAAAA,CAAA,CACA6c,CAAA,CAAA7c,KAAAA,CAAA,CACA8c,CAAA,IACAC,CAAA,IACAC,CAAA,CAAAT,CAAA,GAGA,CAEA,IAqGAU,CAAA,CArGAnB,CAAA,CAAAxO,EAAAA,CAAA,GAAAsJ,CAAA,CAAAxI,MAAA,CAAA8O,CAAA,CAAApB,CAAA,EAAAa,CAAA,GAAAA,CAAA,CAAAvO,MAAA,IAGA0N,CAAA,EAKA,GAJAxI,CAAA,CAAAyJ,CAAA,GAAAA,CAAA,CAAA3O,MAAA,CAAApO,KAAAA,CAAA,CAAA8c,CAAA,CAAAA,CAAA,CAAA1O,MAAA,IACAwO,CAAA,CAAAC,CAAA,CAAAA,CAAA,CAAAE,CAAA,CAAA/R,GAAA,GAGAkS,CAAA,EACA,GAAAR,CAAA,CACUE,CAAA,CAAAA,CAAA,CAAAO,KAAA,OACV,CAGA,QAHAvQ,CAAA,IAGAwQ,CAAA,GAAAC,CAAA,CAAApjB,MAAA,CAAA2c,IAAA,CAAAgG,CAAA,EAAAQ,CAAA,CAAAC,CAAA,CAAAjP,MAAA,CAAAgP,CAAA,IACA,IAAAtO,CAAA,CAAAuO,CAAA,CAAAD,CAAA,EACAxQ,CAAA,CAAAkC,CAAA,EAAA8N,CAAA,CAAA9N,CAAA,GAGA,CAAAlC,CAAA,KAKA,IAHA0Q,CAAA,GAGAC,CAAA,GAAAA,CAAA,CAAAZ,CAAA,CAAAvO,MAAA,CAAAmP,CAAA,IACA,IAAAC,CAAA,CAAAb,CAAA,CAAAY,CAAA,KAAAE,CAAA,CAAAd,CAAA,CAAAY,CAAA,KAGAb,CAAA,EACAc,CAAAA,CAAA,EAAAF,CAAA,EAGAZ,CAAA,EAAAe,IAAA,GAAAA,CAAA,EACAb,CAAA,CAAAc,MAAA,CAAAF,CAAA,IACYF,CAAA,IAEZV,CAAA,CAAAY,CAAA,EAAAC,CAAA,CAEA,EAGA,CAAAhB,CAAA,CAAAnP,KAAA,CACAsJ,CAAA,CAAA6F,CAAA,CAAA7F,IAAA,CACA+F,CAAA,CAAAF,CAAA,CAAAE,KAAA,CACAD,CAAA,CAAAD,CAAA,CAAAC,OAAA,CACMD,CAAA,CAAAA,CAAA,CAAA7D,IAAA,KACN,CAIA,GAHAtF,CAAA,CAAAuJ,CAAA,CAAAH,CAAA,CAAApP,CAAA,CAAAsJ,CAAA,CAAAtJ,CAAA,EAAAtN,KAAAA,CAAA,CAGA4c,IAAA,GAHAA,CAAAA,CAAA,CAAAC,CAAA,CAAAA,CAAA,CAAAvJ,CAAA,EAAA0J,CAAA,GAGAJ,KAAA5c,CAAA,GAAA4c,CAAA,CACA,SAGAC,CAAA,EACAC,CAAA,CAAAhjB,IAAA,CAAAwZ,CAAA,EACA,IAEApE,CAAA,WAGA,CAAAnC,KAAW,CAAAC,OAAM,CAAA4P,CAAA,GACjB,IAAA5E,CAAA,CAAA4E,CAAA,EACA,iCAAApG,MAAA,CAAAH,CAAA,CAAAuG,CAAA,YAEAe,CAAA,CAAA/B,CAAA,CAAAC,CAAA,CAAAe,CAAA,CAAAjI,IAAA,CAAAmH,CAAA,KAGA6B,CAAA,EAGA,GAAAzO,CAHAA,CAAA,CAAAyO,CAAA,CAAAnP,IAAA,CAAAqN,CAAA,CAAAe,CAAA,CAAAtJ,CAAA,CAAAuJ,CAAA,CAAAC,CAAA,CAAAC,CAAA,KAGArB,CAAA,CACA,SAGAxM,CAAA,IAAAA,CAAA,CACA,KAAA4M,CAAA,EACAgB,CAAA,CAAA9R,GAAA,WACA,CACU,MACV,GAAAkE,KAAAlP,CAAA,GAAAkP,CAAA,GAAAyN,CAAA,CAAA7iB,IAAA,EAAAwZ,CAAA,CAAApE,CAAA,GAGA,CAAA4M,CAAsB,CAHtB,EAIA,GAAA9D,CAAA,CAAA9I,CAAA,EACc0N,CAAA,CAAA1N,CAAA,KACd,CACA4N,CAAA,CAAA9R,GAAA,WACA,CACA,CAEA,CACA,MAGAhL,CAAA,GAAAkP,CAAA,EAAAgO,CAAA,EACAP,CAAA,CAAA7iB,IAAA,EAAAwZ,CAAA,CAAAsJ,CAAA,GAGAd,CAAA,CACMgB,CAAA,CAAA9R,GAAA,IAINyR,CAAA,EACAC,OAAA,CAAAA,CAAA,CACApP,KAAA,CAAAA,CAAA,CACAsJ,IAAA,CAAAA,CAAA,CACA+F,KAAA,CAAAA,CAAA,CACA/D,IAAA,CAAA6D,CAAA,CACA,CAEA7F,CAAA,CAAA8F,CADAA,CAAA,CAAA3P,KAAA,CAAAC,OAAA,CAAA4P,CAAA,GACAA,CAAA,QAAAK,CAAAA,CAAA,CAAAT,CAAA,CAAAI,CAAA,CAAAjI,IAAA,IAAAsI,KAAA,IAAAA,CAAA,CAAAA,CAAA,IACA3P,CAAA,IAAAqP,CAAA,IAGAE,CAAA,EACAE,CAAA,CAAAjjB,IAAA,CAAA+iB,CAAA,EAGAA,CAAA,CAAAD,CAAA,CACI,OAAAH,KAAAzc,CAAA,GAAAyc,CAAA,SAGJ,IAAAE,CAAA,CAAAvO,MAAA,EACA4O,CAAAA,CAAA,CAAAL,CAAA,CAAAA,CAAA,CAAAvO,MAAA,QAGA4O,CAAA,CACA,CE1RAX,CAAA,EACGJ,KAAA,CAAA2B,CAAA,CACH,EACA,IAGAA,CAAA,EACA7E,IAAA,UAAA6D,CAAA,EACG,OAAAA,CAAA,CAAAziB,KAAA,CACH,CACAgf,QAAA,UAAAyD,CAAA,EACG,UAAAA,CAAA,CAAApgB,IAAA,CACH,CAEAwc,QAAA,UAAA4D,CAAA,EACG,OAAAzK,CAAA,CAAAyK,CAAA,CAAAnI,WAAA,cACH,CACAwE,mBAAA,UAAA2D,CAAA,EACA,IAAAhM,CAAA,CAAAgM,CAAA,CAAAiB,SAAA,CACArhB,CAAA,CAAAogB,CAAA,CAAApgB,IAAA,CACAshB,CAAA,CAAAC,CAAA,KAAA5L,CAAA,CAAAyK,CAAA,CAAAoB,mBAAA,YACAC,CAAA,CAAA9L,CAAA,CAAAyK,CAAA,CAAAqB,UAAA,CAA0C,KAC1CC,CAAA,CAAAtB,CAAA,CAAAsB,YAAA,QAGG,GAAAD,CAAA,EAAAH,CAAA,EAAAlN,OAAA,GAAAA,CAAA,CAAAuB,CAAA,EAAAvB,CAAA,CAAAuB,CAAA,EAAA3V,CAAA,CAAAshB,CAAA,GAAAG,CAAA,CAAAC,CAAA,OAAAA,CAAA,CACH,CACAhF,kBAAA,UAAAiF,CAAA,EACA,IAAAC,CAAA,CAAAD,CAAA,CAAAC,QAAA,CACA3hB,CAAA,CAAA0hB,CAAA,CAAA1hB,IAAA,CACA4hB,CAAA,CAAAF,CAAA,CAAAE,YAAA,CACAJ,CAAA,CAAAE,CAAA,CAAAF,UAAA,QACGG,CAAA,MAAA3hB,CAAA,CAAAshB,CAAA,OAAAM,CAAA,EAAAN,CAAA,KAAA5L,CAAA,CAAA8L,CAAA,OACH,CACA7E,YAAA,UAAAkF,CAAA,EAEG,OAAAC,CAAA,CADHD,CAAA,CAAAE,UAAA,CACG,CACH,CACAnF,KAAA,UAAAoF,CAAA,EACA,IAAAC,CAAA,CAAAD,CAAA,CAAAC,KAAA,CACAliB,CAAA,CAAAiiB,CAAA,CAAAjiB,IAAA,CACAmiB,CAAA,CAAAF,CAAA,CAAAtQ,SAAA,CACA8P,CAAA,CAAAQ,CAAA,CAAAR,UAAA,CACAC,CAAA,CAAAO,CAAA,CAAAP,YAAA,CACAU,CAAA,CAAAb,CAAA,IAAAW,CAAA,OAAAliB,CAAA,CAAAqiB,CAAA,CAAAD,CAAA,CAAAb,CAAA,KAAA5L,CAAA,CAAAwM,CAAA,mBAGAE,CAAA,CAAAzQ,MAAA,CA5C0B,IA6C1ByQ,CAAAA,CAAA,CAAAD,CAAA,CAAAb,CAAA,OAAAe,CAAA,CAAA3M,CAAA,CAAAwM,CAAA,gBAGGxM,CAAA,EAAA0M,CAAA,CAAA1M,CAAA,CAAA8L,CAAA,MAAAC,CAAA,OACH,CACA5E,QAAA,UAAAyF,CAAA,EACA,IAAAviB,CAAA,QAEGA,CAFH,CAAAA,IAAA,CAEG,KADHuiB,CAAA,CAAA5kB,KAAA,CAEA,CAEAof,cAAA,UAAAyF,CAAA,EACA,IAAAxiB,CAAA,OAEG,MAFHwiB,CAAA,CAAAxiB,IAAA,CAEGuhB,CAAA,KAAA5L,CAAA,CADH6M,CAAA,CAAAf,UAAA,CACG,MACH,CACAzE,cAAA,UAAAyF,CAAA,EACA,IAAAC,CAAA,CAAAD,CAAA,CAAAC,aAAA,CACAjB,CAAA,CAAAgB,CAAA,CAAAhB,UAAA,CACAC,CAAA,CAAAe,CAAA,CAAAf,YAAA,QACG/L,CAAA,QAAA4L,CAAA,OAAAmB,CAAA,EAAA/M,CAAA,CAAA8L,CAAA,MAAAC,CAAA,OACH,CACAzE,kBAAA,UAAA0F,CAAA,EACA,IAAA3iB,CAAA,CAAA2iB,CAAA,CAAA3iB,IAAA,CACA0iB,CAAA,CAAAC,CAAA,CAAAD,aAAA,CACAlB,CAAA,CAAAmB,CAAA,CAAAnB,mBAAA,CACAC,CAAA,CAAAkB,CAAA,CAAAlB,UAAA,CACAC,CAAA,CAAAiB,CAAA,CAAAjB,YAAA,OAGA,YAAA1H,MAAA,CAAAha,CAAA,EAAAga,MAAA,CAAAuH,CAAA,KAAA5L,CAAA,CAAA6L,CAAA,uBAAAxH,MAAA,CAAA0I,CAAA,MAAA1I,MAAA,CAAAuH,CAAA,IAAA5L,CAAA,CAAA8L,CAAA,YAAAC,CAAA,CAEA,CAEAxE,QAAA,UAAA0F,CAAA,EAEG,OADHA,CAAA,CAAAjlB,KAAA,CAEA,CACAwf,UAAA,UAAA0F,CAAA,EAEG,OADHA,CAAA,CAAAllB,KAAA,CAEA,CACAyf,WAAA,UAAA0F,CAAA,CAAAhM,CAAA,EACA,IAAAnZ,CAAA,CAAAmlB,CAAA,CAAAnlB,KAAA,QAEGolB,CADwB,CAAAhB,KAAA,CACxBiB,SDCHrlB,CAAA,EACA,IAAAslB,CAAA,CAAAtR,SAAA,CAAAC,MAAA,IAAAD,KAAAnO,CAAA,GAAAmO,SAAA,IAAAA,SAAA,OACAuR,CAAA,CAAAvR,SAAA,CAAAC,MAAA,IAAAD,KAAAnO,CAAA,GAAAmO,SAAA,KAAAA,SAAA,IACAwR,CAAA,CAAAxlB,EAAA,GAAAA,CAAA,CAAA2W,OAAA,OACA8O,CAAA,CAAAzlB,GAAA,GAAAA,CAAA,KAAAA,GAAA,GAAAA,CAAA,IACA0lB,CAAA,CAAA1lB,GAAA,GAAAA,CAAA,CAAAA,CAAA,CAAAiU,MAAA,IACA0R,CAAA,CAAA3lB,IAAA,GAAAA,CAAA,CAAAA,CAAA,CAAAiU,MAAA,IACA2R,CAAmB,EAAAJ,CAAA,EAAAE,CAAA,EAAAC,CAAA,EAAAJ,CAAA,CAAAxQ,CAAA,WAGnB6Q,CAAA,GAAAJ,CAAAA,CAAA,EAAAC,CAAA,GACA1Q,CAAAA,CAAA,OAAAuQ,CAAA,EAEAvQ,CAAA,EAAAuQ,CAAA,CAAAtlB,CAAA,CAAAiI,OAAA,YAAAqd,CAAA,EAAAtlB,CAAA,CAGA4lB,CAAA,EACA7Q,CAAAA,CAAA,QAGA,MAAAA,CAAA,CAAA9M,OAAA,wBCrBGjI,CAAA,CAAAmZ,aAAA,GAAAA,CAAA,UAAArG,IAAA,CAAAC,SAAA,CAAA/S,CAAA,EACH,CACA0f,YAAA,UAAAmG,CAAA,EAEG,OAAA7lB,CADH,CAAAA,KAAA,CACG,eACH,CACA2f,SAAA,YACG,aACH,CACAC,SAAA,UAAAkG,CAAA,EAEG,OADHA,CAAA,CAAA9lB,KAAA,CAEA,CACA6f,SAAA,UAAAkG,CAAA,EAEG,UAAA/N,CAAA,CADH+N,CAAA,CAAAhV,MAAA,CACG,UACH,CACA+O,WAAA,UAAAkG,CAAA,EAEG,UAAAhO,CAAA,CADUgO,CAAA,CAAAC,MAAA,CACV,UACH,CACAlG,WAAA,UAAAmG,CAAA,EACA,IAAA7jB,CAAA,QAEGA,CAFH,CAAAA,IAAA,CAEG,KADH6jB,CAAA,CAAAlmB,KAAA,CAEA,CAEAggB,SAAA,UAAAmG,CAAA,EACA,IAAA9jB,CAAA,OAEG,IAFH8jB,CAAA,CAAA9jB,IAAA,CAEGuhB,CAAA,KAAA5L,CAAA,CADHmO,CAAA,CAAAnS,SAAA,CACG,WACH,CAEAiM,SAAA,UAAAmG,CAAA,EAEG,OADHA,CAAA,CAAA/jB,IAAA,CAEA,CACA6d,QAAA,UAAAmG,CAAA,EAEG,UADHA,CAAA,CAAA/jB,IAAA,CACG,IACH,CACA6d,WAAA,UAAAmG,CAAA,EAEG,OAAAhkB,CADH,CAAAA,IAAA,CACG,IACH,CAEA8d,gBAAA,CAAAmG,CAAA,UAAAC,CAAA,EACA,IAAA1C,CAAA,CAAA0C,CAAA,CAAA1C,UAAA,CACA2C,CAAA,CAAAD,CAAA,CAAAC,cAAA,QACGzO,CAAA,WAAAA,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAAqC,CAAA,QACH,EACApG,uBAAA,UAAAqG,CAAA,EACA,IAAAhD,CAAA,QAEGA,CAFH,CAAAA,SAAA,CAEG,KADHgD,CAAA,CAAApkB,IAAA,CAEA,CACAge,oBAAA,CAAAiG,CAAA,UAAAI,CAAA,EACA,IAAAtkB,CAAA,QAEG2V,CAAA,WAFH2O,CAAA,CAAAtkB,IAAA,CAEG2V,CAAA,CADH2O,CAAA,CAAA7C,UAAA,CACG,WACH,EACAvD,oBAAA,CAAAgG,CAAA,UAAAK,CAAA,EACA,IAAAvkB,CAAA,CAAAukB,CAAA,CAAAvkB,IAAA,CACAwkB,CAAA,CAAAD,CAAA,CAAAC,UAAA,CACA/C,CAAA,CAAA8C,CAAA,CAAA9C,UAAA,CACAmC,CAAA,CAAAW,CAAA,CAAAX,MAAA,QACGjO,CAAA,SAAA3V,CAAA,CAAAuhB,CAAA,eAAA5L,CAAA,CAAA6O,CAAA,SAAA7O,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAA6B,CAAA,QACH,EACAzF,eAAA,CAAA+F,CAAA,UAAAO,CAAA,EACA,IAAAzkB,CAAA,CAAAykB,CAAA,CAAAzkB,IAAA,CACAmiB,CAAA,CAAAsC,CAAA,CAAA9S,SAAA,CACA1R,CAAA,CAAAwkB,CAAA,CAAAxkB,IAAA,CACAwhB,CAAA,CAAAgD,CAAA,CAAAhD,UAAA,QACGzhB,CAAA,CAAA0kB,CAAAA,CAAA,CAAAvC,CAAA,EAAAZ,CAAA,OAAAe,CAAA,CAAA3M,CAAA,CAAAwM,CAAA,eAAAZ,CAAA,KAAA5L,CAAA,CAAAwM,CAAA,kBAAAliB,CAAA,CAAAshB,CAAA,KAAA5L,CAAA,CAAA8L,CAAA,OACH,EACArD,oBAAA,CAAA8F,CAAA,UAAAS,CAAA,EACA,IAAA3kB,CAAA,CAAA2kB,CAAA,CAAA3kB,IAAA,CACAC,CAAA,CAAA0kB,CAAA,CAAA1kB,IAAA,CACA4hB,CAAA,CAAA8C,CAAA,CAAA9C,YAAA,CACAJ,CAAA,CAAAkD,CAAA,CAAAlD,UAAA,QACG9L,CAAA,EAAA3V,CAAA,MAAAC,CAAA,CAAAshB,CAAA,MAAAM,CAAA,EAAAlM,CAAA,CAAA8L,CAAA,YACH,EACApD,uBAAA,CAAA6F,CAAA,UAAAU,CAAA,EACA,IAAA5kB,CAAA,CAAA4kB,CAAA,CAAA5kB,IAAA,CACAwkB,CAAA,CAAAI,CAAA,CAAAJ,UAAA,CACA/C,CAAA,CAAAmD,CAAA,CAAAnD,UAAA,CACAmC,CAAA,CAAAgB,CAAA,CAAAhB,MAAA,QACGjO,CAAA,cAAA3V,CAAA,CAAAuhB,CAAA,eAAA5L,CAAA,CAAA6O,CAAA,SAAA7O,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAA6B,CAAA,QACH,EACAtF,mBAAA,CAAA4F,CAAA,UAAAW,CAAA,EACA,IAAA7kB,CAAA,CAAA6kB,CAAA,CAAA7kB,IAAA,CACAyhB,CAAA,CAAAoD,CAAA,CAAApD,UAAA,CACAqD,CAAA,CAAAD,CAAA,CAAAC,KAAA,QACGnP,CAAA,UAAA3V,CAAA,CAAA2V,CAAA,CAAA8L,CAAA,MAAAqD,CAAA,EAAAA,CAAA,GAAAA,CAAA,CAAAlT,MAAA,MAAA+D,CAAA,CAAAmP,CAAA,iBACH,EACAvG,kBAAA,CAAA2F,CAAA,UAAAa,CAAA,EACA,IAAA/kB,CAAA,CAAA+kB,CAAA,CAAA/kB,IAAA,CACAyhB,CAAA,CAAAsD,CAAA,CAAAtD,UAAA,CACA/S,CAAA,CAAAqW,CAAA,CAAArW,MAAA,QACGiH,CAAA,SAAA3V,CAAA,CAAA2V,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAArT,CAAA,QACH,EACA8P,mBAAA,CAAA0F,CAAA,UAAAc,CAAA,EACA,IAAAhlB,CAAA,QAEG2V,CAAA,EAFHqP,CAAA,CAAAhlB,IAAA,CAEG2V,CAAA,CADHqP,CAAA,CAAAvD,UAAA,CACG,WACH,EACAhD,yBAAA,CAAAyF,CAAA,UAAAe,CAAA,EACA,IAAAjlB,CAAA,CAAAilB,CAAA,CAAAjlB,IAAA,CACAyhB,CAAA,CAAAwD,CAAA,CAAAxD,UAAA,CACAmC,CAAA,CAAAqB,CAAA,CAAArB,MAAA,QACGjO,CAAA,UAAA3V,CAAA,CAAA2V,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAA6B,CAAA,QACH,EACAlF,mBAAA,CAAAwF,CAAA,UAAAgB,CAAA,EACA,IAAAllB,CAAA,CAAAklB,CAAA,CAAAllB,IAAA,CACAmiB,CAAA,CAAA+C,CAAA,CAAAvT,SAAA,CACAwT,CAAA,CAAAD,CAAA,CAAAC,UAAA,CACAC,CAAA,CAAAF,CAAA,CAAAE,SAAA,OACG,cAAAplB,CAAA,CAAA0kB,CAAAA,CAAA,CAAAvC,CAAA,EAAAZ,CAAA,OAAAe,CAAA,CAAA3M,CAAA,CAAAwM,CAAA,eAAAZ,CAAA,KAAA5L,CAAA,CAAAwM,CAAA,aAAAgD,CAAAA,CAAA,0BAAAxP,CAAA,CAAAyP,CAAA,QACH,EACAzG,eAAA,UAAA0G,CAAA,EACA,IAAA5D,CAAA,CAAA4D,CAAA,CAAA5D,UAAA,CACA2C,CAAA,CAAAiB,CAAA,CAAAjB,cAAA,QACGzO,CAAA,kBAAAA,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAAqC,CAAA,QACH,CACAxF,mBAAA,UAAA0G,CAAA,EACA,IAAAtlB,CAAA,QAEG2V,CAAA,kBAFH2P,CAAA,CAAAtlB,IAAA,CAEG2V,CAAA,CADH2P,CAAA,CAAA7D,UAAA,CACG,WACH,CACA5C,mBAAA,UAAA0G,CAAA,EACA,IAAAvlB,CAAA,CAAAulB,CAAA,CAAAvlB,IAAA,CACAwkB,CAAA,CAAAe,CAAA,CAAAf,UAAA,CACA/C,CAAA,CAAA8D,CAAA,CAAA9D,UAAA,CACAmC,CAAA,CAAA2B,CAAA,CAAA3B,MAAA,QACGjO,CAAA,gBAAA3V,CAAA,CAAAuhB,CAAA,eAAA5L,CAAA,CAAA6O,CAAA,SAAA7O,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAA6B,CAAA,QACH,CACA9E,sBAAA,UAAA0G,CAAA,EACA,IAAAxlB,CAAA,CAAAwlB,CAAA,CAAAxlB,IAAA,CACAwkB,CAAA,CAAAgB,CAAA,CAAAhB,UAAA,CACA/C,CAAA,CAAA+D,CAAA,CAAA/D,UAAA,CACAmC,CAAA,CAAA4B,CAAA,CAAA5B,MAAA,QACGjO,CAAA,qBAAA3V,CAAA,CAAAuhB,CAAA,eAAA5L,CAAA,CAAA6O,CAAA,SAAA7O,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAA6B,CAAA,QACH,CACA7E,kBAAA,UAAA0G,CAAA,EACA,IAAAzlB,CAAA,CAAAylB,CAAA,CAAAzlB,IAAA,CACAyhB,CAAA,CAAAgE,CAAA,CAAAhE,UAAA,CACAqD,CAAA,CAAAW,CAAA,CAAAX,KAAA,QACGnP,CAAA,iBAAA3V,CAAA,CAAA2V,CAAA,CAAA8L,CAAA,MAAAqD,CAAA,EAAAA,CAAA,GAAAA,CAAA,CAAAlT,MAAA,MAAA+D,CAAA,CAAAmP,CAAA,iBACH,CACA9F,iBAAA,UAAA0G,CAAA,EACA,IAAA1lB,CAAA,CAAA0lB,CAAA,CAAA1lB,IAAA,CACAyhB,CAAA,CAAAiE,CAAA,CAAAjE,UAAA,CACA/S,CAAA,CAAAgX,CAAA,CAAAhX,MAAA,QACGiH,CAAA,gBAAA3V,CAAA,CAAA2V,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAArT,CAAA,QACH,CACAuQ,wBAAA,UAAA0G,CAAA,EACA,IAAA3lB,CAAA,CAAA2lB,CAAA,CAAA3lB,IAAA,CACAyhB,CAAA,CAAAkE,CAAA,CAAAlE,UAAA,CACAmC,CAAA,CAAA+B,CAAA,CAAA/B,MAAA,QACAjO,CAAA,iBAAA3V,CAAA,CAAA2V,CAAA,CAAA8L,CAAA,MAAAM,CAAA,CAAA6B,CAAA,QACA,WAGAM,CAAA,CAAA0B,CAAA,EACA,gBAAAxF,CAAA,EACA,OAAAzK,CAAA,EAAAyK,CAAA,CAAAyF,WAAA,CAAAD,CAAA,CAAAxF,CAAA,SACA,CACA,SAOAzK,CAAA,CAAAmQ,CAAA,EAGA,IAHAC,CAAA,CAGAC,CAAA,CAAArU,SAAA,CAAAC,MAAA,IAAAD,KAAAnO,CAAA,GAAAmO,SAAA,IAAAA,SAAA,cACA,IAEA,GAFAoU,CAAAA,CAAA,CAAAD,MAAAA,CAAA,QAAAA,CAAA,CAAAhb,MAAA,UAAAmb,CAAA,EACG,OAAAA,CAAA,CACH,EAAAtQ,IAAA,CAAAqQ,CAAA,IAAAD,KAAA,IAAAA,CAAA,CAAAA,CAAA,IACA,SAOAhE,CAAA,CAAAvH,CAAgB,EAChB,OAAA+G,CAAA,OAAAe,CAAA,CAAA3M,CAAA,CAAA6E,CAAA,eACA,SAMA+G,CAAA,CAAAzF,CAAA,CAAAoK,CAAA,EACA,IAAAnK,CAAA,CAAApK,SAAA,CAAAC,MAAA,IAAAD,KAAAnO,CAAA,GAAAmO,SAAA,IAAAA,SAAA,cACAuU,IAAA,EAAAA,CAAA,EAAAA,EAAA,GAAAA,CAAA,CAAApK,CAAA,CAAAoK,CAAA,CAAAnK,CAAA,aAGAuG,CAAA,CAAAhN,CAAA,EACA,OAAAiM,CAAA,MAAAjM,CAAA,CAAA1P,OAAA,yBAGAugB,CAAA,CAAA7Q,CAAA,EACA,OAAAA,EAAA,GAAAA,CAAA,CAAAhB,OAAA,gBAGAoQ,CAAA,CAAAoB,CAAA,EACA,OAAAA,IAAA,EAAAA,CAAA,EAAAA,CAAA,CAAAlO,IAAA,CAAAuO,CAAA","sources":["webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/constants/index.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/factories/ERC20OrderRouter__factory.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/factories/ERC20__factory.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/factories/GelatoLimitOrders__factory.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/factories/Multicall__factory.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/index.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/index.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/limit-orders/index.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/stoplimit-orders/core.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/stoplimit-orders/index.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/types/index.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/utils/index.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/utils/queries/constants.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/utils/queries/index.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/dist/utils/queries/stoplimit.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql-request/dist/createRequestBody.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql-request/dist/index.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql-request/dist/types.js","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/inspect.mjs","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/invariant.mjs","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/defineInspect.mjs","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/ast.mjs","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/visitor.mjs","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/blockString.mjs","webpack://_N_E/../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/printer.mjs","webpack://_N_E/<anon>"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS = exports.GENERIC_GAS_LIMIT_ORDER_EXECUTION = exports.NATIVE_WRAPPED_TOKEN_ADDRESS = exports.NATIVE_TOKEN_NAME = exports.NATIVE_WRAPPED_TOKEN_TICKER = exports.NATIVE_TOKEN_TICKER = exports.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER = exports.GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS = exports.GELATO_LIMIT_ORDERS_MODULE_ADDRESS = exports.GELATO_LIMIT_ORDERS_ADDRESS = exports.SUBGRAPH_URL = exports.OLD_SUBGRAPH_URL = exports.NETWORK_STOP_LIMIT_HANDLERS = exports.NETWORK_HANDLERS = exports.NETWORK_NAME = exports.HANDLERS_ADDRESSES = exports.LIMIT_ORDER_SLIPPAGE = exports.STOP_LIMIT_SLIPPAGE_BPS = exports.BPS_GELATO_FEE = exports.CHAIN_ID = exports.MAX_LIFETIME_IN_SECONDS = exports.SLIPPAGE_BPS = exports.ETH_ADDRESS = void 0;\nexports.ETH_ADDRESS = \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\nexports.SLIPPAGE_BPS = 40; // 0.4%\nexports.MAX_LIFETIME_IN_SECONDS = 7889238; // 3 months in seconds\nexports.CHAIN_ID = {\n    MAINNET: 1,\n    ROPSTEN: 3,\n    GOERLI: 5,\n    BSC: 56,\n    MATIC: 137,\n    FANTOM: 250,\n    AVAX: 43114,\n};\nexports.BPS_GELATO_FEE = {\n    [exports.CHAIN_ID.MAINNET]: 10,\n    [exports.CHAIN_ID.MATIC]: 10,\n    [exports.CHAIN_ID.FANTOM]: 10,\n    [exports.CHAIN_ID.BSC]: 10,\n    [exports.CHAIN_ID.AVAX]: 10,\n};\nexports.STOP_LIMIT_SLIPPAGE_BPS = {\n    [exports.CHAIN_ID.MAINNET]: 500,\n    [exports.CHAIN_ID.ROPSTEN]: 500,\n    [exports.CHAIN_ID.MATIC]: 500,\n    [exports.CHAIN_ID.FANTOM]: 500,\n    [exports.CHAIN_ID.BSC]: 500,\n    [exports.CHAIN_ID.AVAX]: 500,\n};\nexports.LIMIT_ORDER_SLIPPAGE = {\n    [exports.CHAIN_ID.MAINNET]: 40,\n    [exports.CHAIN_ID.ROPSTEN]: 40,\n    [exports.CHAIN_ID.MATIC]: 40,\n    [exports.CHAIN_ID.FANTOM]: 40,\n    [exports.CHAIN_ID.BSC]: 40,\n    [exports.CHAIN_ID.AVAX]: 40,\n};\nexports.HANDLERS_ADDRESSES = {\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.MAINNET]: {\n        [\"uniswap\"]: \"0x837c03414fb86861f28ca7e91e5fd770fda0f52d\",\n        [\"uniswap_stoplimit\"]: \"0xf437a1a98566872f734bd18addf4bb610d1f887b\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.ROPSTEN]: {\n        [\"uniswap\"]: \"0x1f397f95d31eb20183b69d685a5060cfdefd508b\",\n        [\"quickswap_stoplimit\"]: \"0x87bE4Eb9dFb2DefcEA035D3010f33584Fc8ddDB5\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.MATIC]: {\n        [\"quickswap\"]: \"0xaccbd2c6ad75ad3394dc5f4b1f606bf111e4eae3\",\n        [\"polydex\"]: \"0x00fc86d360162e4672ec6B427E12ed36F39f1f53\",\n        [\"cafeswap\"]: \"0xd167afcee4e9a89e69646fd3c27e58b61d1b7f97\",\n        [\"quickswap_stoplimit\"]: \"0x51cc226648f8de65513de7cdfd3e7b116156234e\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.FANTOM]: {\n        [\"spiritswap\"]: \"0x5fb00386558ccc219e51b69d8e963ef20b0c267a\",\n        [\"spookyswap\"]: \"0x228ffd7122d202c0cd24330892881c47b0817c7a\",\n        [\"bombswap\"]: \"0x87C4Fbd67f6DD8a1B5EFD9879956c728C97afeFe\",\n        [\"defyswap\"]: \"0x3d401587320522a5e0bb973d10a852430a8edbbd\",\n        [\"spiritswap_stoplimit\"]: \"0x6ea82c72732389c5149326e048a46be9f8bec8e8\",\n        [\"spookyswap_stoplimit\"]: \"0xe912cd26c4a4cfffc175a297f1328ab23313a1a7\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.BSC]: {\n        [\"pancakeswap\"]: \"0x88f8CCC064bA2D39cF08D57B6e7504a7B6bE8E4e\",\n        [\"pancakeswap_stoplimit\"]: \"0x84b826bcd26f1bc0cd5fbbdef7f5b8965d6bbb38\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.AVAX]: {\n        [\"traderjoe\"]: \"0x88f8CCC064bA2D39cF08D57B6e7504a7B6bE8E4e\",\n        [\"pangolin\"]: \"0x8b206547cfe6f35a77ddab2d6d97260765a349ef\",\n        [\"pangolin_stoplimit\"]: \"0xb4c53e2e32caf977d61a8a776bdc44837a5d0d91\",\n        [\"traderjoe_stoplimit\"]: \"0xcf497830e43836738bdd0c3d7e09b599ddf081b2\",\n    },\n};\nexports.NETWORK_NAME = {\n    [exports.CHAIN_ID.MAINNET]: \"Ethereum\",\n    [exports.CHAIN_ID.ROPSTEN]: \"Ropsten\",\n    [exports.CHAIN_ID.GOERLI]: \"Goerli\",\n    [exports.CHAIN_ID.MATIC]: \"Polygon (Matic)\",\n    [exports.CHAIN_ID.FANTOM]: \"FANTOM\",\n    [exports.CHAIN_ID.BSC]: \"BSC\",\n    [exports.CHAIN_ID.AVAX]: \"AVAX\",\n};\nexports.NETWORK_HANDLERS = {\n    [exports.CHAIN_ID.MAINNET]: [\"uniswap\", \"uniswap_stoplimit\"],\n    [exports.CHAIN_ID.ROPSTEN]: [\"uniswap\", \"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.MATIC]: [\"quickswap\", \"polydex\", \"cafeswap\", \"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.FANTOM]: [\n        \"spiritswap\",\n        \"spookyswap\",\n        \"bombswap\",\n        \"defyswap\",\n        \"spiritswap_stoplimit\",\n        \"spookyswap_stoplimit\",\n    ],\n    [exports.CHAIN_ID.BSC]: [\"pancakeswap\", \"pancakeswap_stoplimit\"],\n    [exports.CHAIN_ID.AVAX]: [\n        \"traderjoe\",\n        \"pangolin\",\n        \"pangolin_stoplimit\",\n        \"traderjoe_stoplimit\",\n    ],\n};\nexports.NETWORK_STOP_LIMIT_HANDLERS = {\n    [exports.CHAIN_ID.MAINNET]: [\"uniswap_stoplimit\"],\n    [exports.CHAIN_ID.ROPSTEN]: [\"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.MATIC]: [\"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.BSC]: [\"pancakeswap_stoplimit\"],\n    [exports.CHAIN_ID.FANTOM]: [\"spookyswap_stoplimit\", \"spiritswap_stoplimit\"],\n    [exports.CHAIN_ID.AVAX]: [\"traderjoe_stoplimit\", \"pangolin_stoplimit\"],\n};\nexports.OLD_SUBGRAPH_URL = {\n    [exports.CHAIN_ID.MAINNET]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders\",\n    [exports.CHAIN_ID.ROPSTEN]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-ropsten\",\n    [exports.CHAIN_ID.MATIC]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-polygon\",\n    [exports.CHAIN_ID.FANTOM]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-fantom\",\n};\nexports.SUBGRAPH_URL = {\n    [exports.CHAIN_ID.MAINNET]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-ii\",\n    [exports.CHAIN_ID.MATIC]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-polygon-ii\",\n    [exports.CHAIN_ID.FANTOM]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-fantom-ii\",\n    [exports.CHAIN_ID.BSC]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-bsc\",\n    [exports.CHAIN_ID.AVAX]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-avax\",\n};\nexports.GELATO_LIMIT_ORDERS_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0x36049D479A97CdE1fC6E2a5D2caE30B666Ebf92B\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0x0e5096D201Fe2985f5C26432A76f145D6e5D1453\",\n    [exports.CHAIN_ID.GOERLI]: \"0xa0453c6ab71fe3da89640ee2503326bd0899a589\",\n    [exports.CHAIN_ID.MATIC]: \"0x38c4092b28dAB7F3d98eE6524549571c283cdfA5\",\n    [exports.CHAIN_ID.FANTOM]: \"0x05Ad1094Eb6Cde564d732196F6754Ee464896031\",\n    [exports.CHAIN_ID.BSC]: \"0x0c30D3d66bc7C73A83fdA929888c34dcb24FD599\",\n    [exports.CHAIN_ID.AVAX]: \"0x0c30D3d66bc7C73A83fdA929888c34dcb24FD599\",\n};\nexports.GELATO_LIMIT_ORDERS_MODULE_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0x037fc8e71445910e1E0bBb2a0896d5e9A7485318\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0x3f3C13b09B601fb6074124fF8D779d2964caBf8B\",\n    [exports.CHAIN_ID.GOERLI]: \"0xCf8EDB3333Fae73b23f689229F4De6Ac95d1f707\",\n    [exports.CHAIN_ID.MATIC]: \"0x5A36178E38864F5E724A2DaF5f9cD9bA473f7903\",\n    [exports.CHAIN_ID.FANTOM]: \"0xf2253BF9a0BD002300cFe6f4E630d755669f6DCa\",\n    [exports.CHAIN_ID.BSC]: \"0xb7499a92fc36e9053a4324aFfae59d333635D9c3\",\n    [exports.CHAIN_ID.AVAX]: \"0xb7499a92fc36e9053a4324aFfae59d333635D9c3\",\n};\nexports.GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0xbeC333EDE1A0687D2b9624F8C073a54c93ba9777\",\n    [exports.CHAIN_ID.GOERLI]: \"0xCf8EDB3333Fae73b23f689229F4De6Ac95d1f707\",\n};\nexports.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER = {\n    [exports.CHAIN_ID.MAINNET]: \"0x5fb00386558ccc219e51b69d8e963ef20b0c267a\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0x9c06ff386779cc2269d482bcecf2378a4ff5cb90\",\n    [exports.CHAIN_ID.GOERLI]: \"0x247A1306b6122ba28862b19a95004899db91f1b5\",\n    [exports.CHAIN_ID.MATIC]: \"0x0c2c2963a4353ffd839590f7cb1e783688378814\",\n    [exports.CHAIN_ID.FANTOM]: \"0x59e61b95f20e940ac777e88fa2dfa0a6a4c40fa0\",\n    [exports.CHAIN_ID.BSC]: \"0x64c7f3c2C19B41a6aD67bb5f4edc8EdbB3284F34\",\n    [exports.CHAIN_ID.AVAX]: \"0x64c7f3c2C19B41a6aD67bb5f4edc8EdbB3284F34\",\n};\nexports.NATIVE_TOKEN_TICKER = {\n    [exports.CHAIN_ID.MAINNET]: \"ETH\",\n    [exports.CHAIN_ID.ROPSTEN]: \"ETH\",\n    [exports.CHAIN_ID.GOERLI]: \"ETH\",\n    [exports.CHAIN_ID.MATIC]: \"MATIC\",\n    [exports.CHAIN_ID.FANTOM]: \"FTM\",\n    [exports.CHAIN_ID.BSC]: \"BNB\",\n    [exports.CHAIN_ID.AVAX]: \"AVAX\",\n};\nexports.NATIVE_WRAPPED_TOKEN_TICKER = {\n    [exports.CHAIN_ID.MAINNET]: \"WETH\",\n    [exports.CHAIN_ID.ROPSTEN]: \"WETH\",\n    [exports.CHAIN_ID.GOERLI]: \"WETH\",\n    [exports.CHAIN_ID.MATIC]: \"WMATIC\",\n    [exports.CHAIN_ID.FANTOM]: \"WFTM\",\n    [exports.CHAIN_ID.BSC]: \"WBNB\",\n    [exports.CHAIN_ID.AVAX]: \"WAVAX\",\n};\nexports.NATIVE_TOKEN_NAME = {\n    [exports.CHAIN_ID.MAINNET]: \"Ether\",\n    [exports.CHAIN_ID.ROPSTEN]: \"Ether\",\n    [exports.CHAIN_ID.GOERLI]: \"Ether\",\n    [exports.CHAIN_ID.MATIC]: \"Matic\",\n    [exports.CHAIN_ID.FANTOM]: \"Fantom\",\n    [exports.CHAIN_ID.BSC]: \"Bnb\",\n    [exports.CHAIN_ID.AVAX]: \"Avax\",\n};\nexports.NATIVE_WRAPPED_TOKEN_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0xc778417e063141139fce010982780140aa0cd5ab\",\n    [exports.CHAIN_ID.GOERLI]: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n    [exports.CHAIN_ID.MATIC]: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n    [exports.CHAIN_ID.FANTOM]: \"0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83\",\n    [exports.CHAIN_ID.BSC]: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n    [exports.CHAIN_ID.AVAX]: \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\",\n};\nexports.GENERIC_GAS_LIMIT_ORDER_EXECUTION = \"400000\";\nexports.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0x260aB0aCb931D7Da784fC35c7E96c3B13213Abf1\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0xDC41072F4aFE7e4a7ea0f21d13a92662Fe733C55\",\n    [exports.CHAIN_ID.MATIC]: \"0x81967ac4ce8e2d94f7e4b4cf3d2e760605079604\",\n    [exports.CHAIN_ID.BSC]: \"0xe912cd26c4a4cfffc175a297f1328ab23313a1a7\",\n    [exports.CHAIN_ID.FANTOM]: \"0xf437a1a98566872f734bd18addf4bb610d1f887b\",\n    [exports.CHAIN_ID.AVAX]: \"0xf437a1a98566872f734bd18addf4bb610d1f887b\",\n};\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC20OrderRouter__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"contract IGelatoPineCore\",\n                name: \"_gelatoPineCore\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"caller\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"module\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"inputToken\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"witness\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"data\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes32\",\n                name: \"secret\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"DepositToken\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_secret\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"depositToken\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"gelatoPineCore\",\n        outputs: [\n            {\n                internalType: \"contract IGelatoPineCore\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\nclass ERC20OrderRouter__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.ERC20OrderRouter__factory = ERC20OrderRouter__factory;\nERC20OrderRouter__factory.abi = _abi;\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC20__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_from\",\n                type: \"address\",\n            },\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"balance\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"fallback\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n];\nclass ERC20__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.ERC20__factory = ERC20__factory;\nERC20__factory.abi = _abi;\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GelatoLimitOrders__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_caller\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"DepositETH\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"OrderCancelled\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_auxData\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_bought\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"OrderExecuted\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"ETH_ADDRESS\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_auxData\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"canExecuteOrder\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"cancelOrder\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"decodeOrder\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"secret\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"depositEth\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_secret\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"encodeEthOrder\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_secret\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"encodeTokenOrder\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ethDeposits\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_signature\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_auxData\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"executeOrder\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"existOrder\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"keyOf\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"vaultOfOrder\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"receive\",\n    },\n];\nclass GelatoLimitOrders__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.GelatoLimitOrders__factory = GelatoLimitOrders__factory;\nGelatoLimitOrders__factory.abi = _abi;\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Multicall__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_factory\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_mainModule\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_imageHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_threshold\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_signers\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"RequiredConfig\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_signer\",\n                type: \"address\",\n            },\n        ],\n        name: \"RequiredSigner\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callBalanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callBlockNumber\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_i\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"callBlockhash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callChainId\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"id\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callCode\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"code\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callCodeHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"codeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callCodeSize\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"size\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callCoinbase\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callDifficulty\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callGasLeft\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callGasLimit\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callGasPrice\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callOrigin\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callTimestamp\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        name: \"lastSignerUpdate\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        name: \"lastWalletUpdate\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bool\",\n                        name: \"delegateCall\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"bool\",\n                        name: \"revertOnError\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"gasLimit\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"target\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"value\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"data\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct IModuleCalls.Transaction[]\",\n                name: \"_txs\",\n                type: \"tuple[]\",\n            },\n        ],\n        name: \"multiCall\",\n        outputs: [\n            {\n                internalType: \"bool[]\",\n                name: \"_successes\",\n                type: \"bool[]\",\n            },\n            {\n                internalType: \"bytes[]\",\n                name: \"_results\",\n                type: \"bytes[]\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_threshold\",\n                type: \"uint256\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"weight\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"signer\",\n                        type: \"address\",\n                    },\n                ],\n                internalType: \"struct RequireUtils.Member[]\",\n                name: \"_members\",\n                type: \"tuple[]\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_index\",\n                type: \"bool\",\n            },\n        ],\n        name: \"publishConfig\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_hash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_sizeMembers\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_signature\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_index\",\n                type: \"bool\",\n            },\n        ],\n        name: \"publishInitialSigners\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_nonce\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"requireMinNonce\",\n        outputs: [],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_expiration\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"requireNonExpired\",\n        outputs: [],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\nclass Multicall__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.Multicall__factory = Multicall__factory;\nMulticall__factory.abi = _abi;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Multicall__factory = exports.GelatoLimitOrders__factory = exports.ERC20OrderRouter__factory = exports.ERC20__factory = void 0;\nvar ERC20__factory_1 = require(\"./factories/ERC20__factory\");\nObject.defineProperty(exports, \"ERC20__factory\", { enumerable: true, get: function () { return ERC20__factory_1.ERC20__factory; } });\nvar ERC20OrderRouter__factory_1 = require(\"./factories/ERC20OrderRouter__factory\");\nObject.defineProperty(exports, \"ERC20OrderRouter__factory\", { enumerable: true, get: function () { return ERC20OrderRouter__factory_1.ERC20OrderRouter__factory; } });\nvar GelatoLimitOrders__factory_1 = require(\"./factories/GelatoLimitOrders__factory\");\nObject.defineProperty(exports, \"GelatoLimitOrders__factory\", { enumerable: true, get: function () { return GelatoLimitOrders__factory_1.GelatoLimitOrders__factory; } });\nvar Multicall__factory_1 = require(\"./factories/Multicall__factory\");\nObject.defineProperty(exports, \"Multicall__factory\", { enumerable: true, get: function () { return Multicall__factory_1.Multicall__factory; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constants = exports.utils = exports.isEthereumChain = exports.GelatoStopLimitOrders = exports.isValidChainIdAndHandler = exports.GelatoLimitOrders = void 0;\nconst tslib_1 = require(\"tslib\");\nvar limit_orders_1 = require(\"./limit-orders\");\nObject.defineProperty(exports, \"GelatoLimitOrders\", { enumerable: true, get: function () { return limit_orders_1.GelatoLimitOrders; } });\nObject.defineProperty(exports, \"isValidChainIdAndHandler\", { enumerable: true, get: function () { return limit_orders_1.isValidChainIdAndHandler; } });\nvar stoplimit_orders_1 = require(\"./stoplimit-orders\");\nObject.defineProperty(exports, \"GelatoStopLimitOrders\", { enumerable: true, get: function () { return stoplimit_orders_1.GelatoStopLimitOrders; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"isEthereumChain\", { enumerable: true, get: function () { return utils_1.isEthereumChain; } });\n(0, tslib_1.__exportStar)(require(\"./types\"), exports);\nexports.utils = (0, tslib_1.__importStar)(require(\"./utils\"));\nexports.constants = (0, tslib_1.__importStar)(require(\"./constants\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GelatoLimitOrders = exports.isFlashbotsCompatibleChainId = exports.isValidChainIdAndHandler = void 0;\nconst tslib_1 = require(\"tslib\");\nconst ethers_1 = require(\"ethers\");\nconst abstract_provider_1 = require(\"@ethersproject/abstract-provider\");\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nconst constants_1 = require(\"../constants\");\nconst types_1 = require(\"../contracts/types\");\nconst queries_1 = require(\"../utils/queries\");\nconst utils_1 = require(\"../utils\");\nconst isValidChainIdAndHandler = (chainId, handler) => {\n    return constants_1.NETWORK_HANDLERS[chainId].includes(handler);\n};\nexports.isValidChainIdAndHandler = isValidChainIdAndHandler;\nconst isFlashbotsCompatibleChainId = (chainId) => {\n    return chainId == constants_1.CHAIN_ID.MAINNET || chainId == constants_1.CHAIN_ID.GOERLI;\n};\nexports.isFlashbotsCompatibleChainId = isFlashbotsCompatibleChainId;\nclass GelatoLimitOrders {\n    constructor(chainId, signerOrProvider, handler, isFlashbotsProtected = false) {\n        var _a;\n        if (handler && !(0, exports.isValidChainIdAndHandler)(chainId, handler)) {\n            throw new Error(\"Invalid chainId and handler\");\n        }\n        else if (isFlashbotsProtected &&\n            (handler || !(0, exports.isFlashbotsCompatibleChainId)(chainId))) {\n            throw new Error(\"Invalid chainId or handler for Flashbots bundle submission. handler must be undefined, and chainId either 1 (mainnet) or 5 (goerli)\");\n        }\n        this._chainId = chainId;\n        this._gelatoFeeBPS = constants_1.BPS_GELATO_FEE[chainId];\n        this._slippageBPS = constants_1.LIMIT_ORDER_SLIPPAGE[chainId];\n        this._subgraphUrl = constants_1.SUBGRAPH_URL[chainId];\n        this._signer = abstract_signer_1.Signer.isSigner(signerOrProvider)\n            ? signerOrProvider\n            : undefined;\n        this._provider = abstract_provider_1.Provider.isProvider(signerOrProvider)\n            ? signerOrProvider\n            : abstract_signer_1.Signer.isSigner(signerOrProvider)\n                ? signerOrProvider.provider\n                : undefined;\n        this._gelatoLimitOrders = this._signer\n            ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._signer)\n            : this._provider\n                ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], types_1.GelatoLimitOrders__factory.createInterface());\n        this._moduleAddress = isFlashbotsProtected\n            ? constants_1.GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS[this._chainId]\n            : constants_1.GELATO_LIMIT_ORDERS_MODULE_ADDRESS[this._chainId];\n        this._handler = handler;\n        this._handlerAddress = handler\n            ? (_a = constants_1.HANDLERS_ADDRESSES[this._chainId][handler]) === null || _a === void 0 ? void 0 : _a.toLowerCase()\n            : undefined;\n        this._isFlashbotsProtected = isFlashbotsProtected;\n        this._abiEncoder = new ethers_1.utils.AbiCoder();\n        this._erc20OrderRouter = this._signer\n            ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._signer)\n            : this._provider\n                ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], types_1.ERC20OrderRouter__factory.createInterface());\n    }\n    get gelatoFeeBPS() {\n        return this._gelatoFeeBPS;\n    }\n    get slippageBPS() {\n        return this._slippageBPS;\n    }\n    get chainId() {\n        return this._chainId;\n    }\n    get signer() {\n        return this._signer;\n    }\n    get provider() {\n        return this._provider;\n    }\n    get subgraphUrl() {\n        return this._subgraphUrl;\n    }\n    get handler() {\n        return this._handler;\n    }\n    get handlerAddress() {\n        return this._handlerAddress;\n    }\n    get moduleAddress() {\n        return this._moduleAddress;\n    }\n    get contract() {\n        return this._gelatoLimitOrders;\n    }\n    get erc20OrderRouter() {\n        return this._erc20OrderRouter;\n    }\n    get isFlashbotsProtected() {\n        return this._isFlashbotsProtected;\n    }\n    encodeLimitOrderSubmission(inputToken, outputToken, inputAmount, minReturn, owner, checkAllowance = true) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const { payload } = yield this.encodeLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, minReturn, owner, checkAllowance);\n            return payload;\n        });\n    }\n    encodeLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, minReturnToBeParsed, owner, checkAllowance = true) {\n        var _a;\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const randomSecret = ethers_1.utils.hexlify(ethers_1.utils.randomBytes(19)).replace(\"0x\", \"\");\n            // 0x67656c61746f6e6574776f726b = gelatonetwork in hex\n            const fullSecret = `0x67656c61746f6e6574776f726b${randomSecret}`;\n            const { privateKey: secret, address: witness } = new ethers_1.Wallet(fullSecret);\n            const { minReturn } = this.getFeeAndSlippageAdjustedMinReturn(minReturnToBeParsed);\n            const payload = yield this._encodeSubmitData(inputToken, outputToken, owner, witness, inputAmount, minReturn, secret, checkAllowance);\n            const encodedData = this._handlerAddress\n                ? this._abiEncoder.encode([\"address\", \"uint256\", \"address\"], [outputToken, minReturn, this._handlerAddress])\n                : this._abiEncoder.encode([\"address\", \"uint256\"], [outputToken, minReturn]);\n            return {\n                payload,\n                secret,\n                witness,\n                order: {\n                    id: this._getKey({\n                        module: this._moduleAddress,\n                        inputToken,\n                        owner,\n                        witness,\n                        data: encodedData,\n                    }),\n                    module: this._moduleAddress.toLowerCase(),\n                    data: encodedData,\n                    inputToken: inputToken.toLowerCase(),\n                    outputToken: outputToken.toLowerCase(),\n                    owner: owner.toLowerCase(),\n                    witness: witness.toLowerCase(),\n                    inputAmount: inputAmount.toString(),\n                    minReturn: minReturn.toString(),\n                    adjustedMinReturn: minReturnToBeParsed.toString(),\n                    inputData: payload.data.toString(),\n                    secret: secret.toLowerCase(),\n                    handler: (_a = this._handlerAddress) !== null && _a !== void 0 ? _a : null,\n                },\n            };\n        });\n    }\n    submitLimitOrder(inputToken, outputToken, inputAmount, minReturn, checkAllowance = true, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            const owner = yield this._signer.getAddress();\n            const txData = yield this.encodeLimitOrderSubmission(inputToken, outputToken, inputAmount, minReturn, owner, checkAllowance);\n            return this._signer.sendTransaction(Object.assign(Object.assign({}, overrides), { to: txData.to, data: txData.data, value: ethers_1.BigNumber.from(txData.value) }));\n        });\n    }\n    encodeLimitOrderCancellation(order, checkIsActiveOrder) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._gelatoLimitOrders)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!order.owner)\n                throw new Error(\"No owner\");\n            if (!order.module)\n                throw new Error(\"No module in order\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const data = this._gelatoLimitOrders.interface.encodeFunctionData(\"cancelOrder\", [order.module, order.inputToken, order.owner, order.witness, order.data]);\n            return {\n                data,\n                to: this._gelatoLimitOrders.address,\n                value: ethers_1.constants.Zero,\n            };\n        });\n    }\n    cancelLimitOrder(order, checkIsActiveOrder, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            if (!this._gelatoLimitOrders)\n                throw new Error(\"No gelato limit orders contract\");\n            let _order = order;\n            if (order.id) {\n                try {\n                    const subgraphOrder = yield Promise.race([\n                        this.getOrder(order.id),\n                        new Promise((resolve) => setTimeout(resolve, 5000)).then(() => {\n                            throw new Error(\"Timeout\");\n                        }),\n                    ]);\n                    if (subgraphOrder) {\n                        if (subgraphOrder.status === \"cancelled\") {\n                            throw new Error(`Order status is not open. Current order status: ${subgraphOrder.status}. Cancellation transaction hash: ${subgraphOrder.cancelledTxHash}`);\n                        }\n                        if (subgraphOrder.status === \"executed\") {\n                            throw new Error(`Order status is not open. Current order status: ${subgraphOrder.status}. Execution transaction hash: ${subgraphOrder.executedTxHash}`);\n                        }\n                        _order = Object.assign(Object.assign({}, order), subgraphOrder);\n                    }\n                    // eslint-disable-next-line no-empty\n                }\n                catch (error) { }\n            }\n            if (!_order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!_order.witness)\n                throw new Error(\"No witness in order\");\n            if (!_order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!_order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!_order.data)\n                throw new Error(\"No data in order\");\n            if (!_order.module)\n                throw new Error(\"No module in order\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(_order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const owner = yield this._signer.getAddress();\n            if (owner.toLowerCase() !== order.owner.toLowerCase())\n                throw new Error(\"Owner and signer mismatch\");\n            return this._gelatoLimitOrders.cancelOrder(_order.module, _order.inputToken, _order.owner, _order.witness, _order.data, overrides !== null && overrides !== void 0 ? overrides : {\n                gasLimit: (0, utils_1.isEthereumChain)(this._chainId) ? 600000 : 2000000,\n            });\n        });\n    }\n    approveTokenAmount(inputToken, amount, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            return overrides\n                ? types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount, overrides)\n                : types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount);\n        });\n    }\n    isActiveOrder(order) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._provider)\n                throw new Error(\"No provider\");\n            if (!this._gelatoLimitOrders)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.module)\n                throw new Error(\"No module in order\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.owner)\n                throw new Error(\"No owner in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.data)\n                throw new Error(\"No data in order\");\n            return this._gelatoLimitOrders.existOrder(order.module, order.inputToken, order.owner, order.witness, order.data);\n        });\n    }\n    getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(18));\n        if (invert) {\n            return ethers_1.BigNumber.from(inputValue)\n                .mul(factor)\n                .div(outputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputValue)\n                .mul(factor)\n                .div(inputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .toString();\n        }\n    }\n    getFeeAndSlippageAdjustedMinReturn(outputAmount, extraSlippageBPS) {\n        if (extraSlippageBPS) {\n            if (!Number.isInteger(extraSlippageBPS))\n                throw new Error(\"Extra Slippage BPS must an unsigned integer\");\n        }\n        const gelatoFee = ethers_1.BigNumber.from(outputAmount)\n            .mul(this._gelatoFeeBPS)\n            .div(10000)\n            .gte(1)\n            ? ethers_1.BigNumber.from(outputAmount).mul(this._gelatoFeeBPS).div(10000)\n            : ethers_1.BigNumber.from(1);\n        const slippageBPS = extraSlippageBPS\n            ? this._slippageBPS + extraSlippageBPS\n            : this._slippageBPS;\n        const slippage = ethers_1.BigNumber.from(outputAmount).mul(slippageBPS).div(10000);\n        const minReturn = ethers_1.BigNumber.from(outputAmount).sub(gelatoFee).sub(slippage);\n        return {\n            minReturn: minReturn.toString(),\n            slippage: slippage.toString(),\n            gelatoFee: gelatoFee.toString(),\n        };\n    }\n    getAdjustedMinReturn(minReturn, extraSlippageBPS) {\n        const gelatoFee = ethers_1.BigNumber.from(this._gelatoFeeBPS);\n        const slippage = extraSlippageBPS\n            ? ethers_1.BigNumber.from(this._slippageBPS + extraSlippageBPS)\n            : ethers_1.BigNumber.from(this._slippageBPS);\n        const fees = gelatoFee.add(slippage);\n        const adjustedMinReturn = ethers_1.BigNumber.from(minReturn)\n            .mul(10000)\n            .div(ethers_1.BigNumber.from(10000).sub(fees));\n        return adjustedMinReturn.toString();\n    }\n    getExecutionPrice(inputAmount, inputDecimals, outputAmount, outputDecimals, isInverted = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(isInverted ? outputDecimals : inputDecimals));\n        if (isInverted) {\n            return ethers_1.BigNumber.from(inputAmount)\n                .mul(factor)\n                .div(outputAmount)\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputAmount)\n                .mul(factor)\n                .div(inputAmount)\n                .toString();\n        }\n    }\n    getOrder(orderId) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const order = yield (0, queries_1.queryOrder)(orderId, this._chainId);\n            if (order) {\n                return Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) });\n            }\n            else {\n                return null;\n            }\n        });\n    }\n    getOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getOpenOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryOpenOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getPastOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryPastOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getExecutedOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryExecutedOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getCancelledOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryCancelledOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    _getKey(order) {\n        return ethers_1.utils.keccak256(this._abiEncoder.encode([\"address\", \"address\", \"address\", \"address\", \"bytes\"], [order.module, order.inputToken, order.owner, order.witness, order.data]));\n    }\n    _encodeSubmitData(inputToken, outputToken, owner, witness, amount, minReturn, secret, checkAllowance) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._provider)\n                throw new Error(\"No provider\");\n            if (inputToken.toLowerCase() === outputToken.toLowerCase())\n                throw new Error(\"Input token and output token can not be equal\");\n            const encodedData = this._handlerAddress\n                ? this._abiEncoder.encode([\"address\", \"uint256\", \"address\"], [outputToken, minReturn, this._handlerAddress])\n                : this._abiEncoder.encode([\"address\", \"uint256\"], [outputToken, minReturn]);\n            let data, value, to;\n            if ((0, utils_1.isNetworkGasToken)(inputToken)) {\n                const encodedEthOrder = yield this._gelatoLimitOrders.encodeEthOrder(this._moduleAddress, constants_1.ETH_ADDRESS, // we also use ETH_ADDRESS if it's MATIC\n                owner, witness, encodedData, secret);\n                data = this._gelatoLimitOrders.interface.encodeFunctionData(\"depositEth\", [encodedEthOrder]);\n                value = amount;\n                to = this._gelatoLimitOrders.address;\n            }\n            else {\n                if (checkAllowance) {\n                    const allowance = yield types_1.ERC20__factory.connect(inputToken, this._provider).allowance(owner, this._erc20OrderRouter.address);\n                    if (allowance.lt(amount))\n                        throw new Error(\"Insufficient token allowance for placing order\");\n                }\n                data = this._erc20OrderRouter.interface.encodeFunctionData(\"depositToken\", [\n                    amount,\n                    this._moduleAddress,\n                    inputToken,\n                    owner,\n                    witness,\n                    encodedData,\n                    secret,\n                ]);\n                value = ethers_1.constants.Zero;\n                to = this._erc20OrderRouter.address;\n            }\n            return { data, value, to };\n        });\n    }\n}\nexports.GelatoLimitOrders = GelatoLimitOrders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GelatoBase = exports.isETHOrWETH = exports.isFlashbotsCompatibleChainId = exports.isValidChainIdAndHandler = void 0;\nconst tslib_1 = require(\"tslib\");\nconst ethers_1 = require(\"ethers\");\nconst abstract_provider_1 = require(\"@ethersproject/abstract-provider\");\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nconst constants_1 = require(\"../constants\");\nconst types_1 = require(\"../contracts/types\");\nconst utils_1 = require(\"../utils\");\nconst isValidChainIdAndHandler = (chainId, handler) => {\n    return constants_1.NETWORK_HANDLERS[chainId].includes(handler);\n};\nexports.isValidChainIdAndHandler = isValidChainIdAndHandler;\nconst isFlashbotsCompatibleChainId = (chainId) => {\n    return chainId == constants_1.CHAIN_ID.MAINNET || chainId == constants_1.CHAIN_ID.GOERLI;\n};\nexports.isFlashbotsCompatibleChainId = isFlashbotsCompatibleChainId;\nconst isETHOrWETH = (tokenAddress, chainID) => {\n    const WETH_ADDRESS = constants_1.NATIVE_WRAPPED_TOKEN_ADDRESS[chainID];\n    return (tokenAddress.toLowerCase() === constants_1.ETH_ADDRESS.toLowerCase() ||\n        tokenAddress.toLowerCase() === WETH_ADDRESS.toLowerCase());\n};\nexports.isETHOrWETH = isETHOrWETH;\nclass GelatoBase {\n    constructor(chainId, moduleAddress, signerOrProvider, handler, handlerAddress) {\n        if (handler && !(0, exports.isValidChainIdAndHandler)(chainId, handler)) {\n            throw new Error(\"Invalid chainId and handler\");\n        }\n        this._chainId = chainId;\n        this._gelatoFeeBPS = !(0, utils_1.isEthereumChain)(chainId)\n            ? constants_1.BPS_GELATO_FEE[chainId]\n            : 0;\n        this._slippageBPS = constants_1.STOP_LIMIT_SLIPPAGE_BPS[chainId];\n        this._subgraphUrl = constants_1.SUBGRAPH_URL[chainId];\n        this._signer = abstract_signer_1.Signer.isSigner(signerOrProvider)\n            ? signerOrProvider\n            : undefined;\n        this._provider = abstract_provider_1.Provider.isProvider(signerOrProvider)\n            ? signerOrProvider\n            : abstract_signer_1.Signer.isSigner(signerOrProvider)\n                ? signerOrProvider.provider\n                : undefined;\n        this._gelatoCore = this._signer\n            ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._signer)\n            : this._provider\n                ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], types_1.GelatoLimitOrders__factory.createInterface());\n        this._abiEncoder = new ethers_1.utils.AbiCoder();\n        this._erc20OrderRouter = this._signer\n            ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._signer)\n            : this._provider\n                ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], types_1.ERC20OrderRouter__factory.createInterface());\n        this._handler = handler;\n        this._handlerAddress = handlerAddress;\n        this._moduleAddress = moduleAddress;\n    }\n    get gelatoFeeBPS() {\n        return this._gelatoFeeBPS;\n    }\n    get slippageBPS() {\n        return this._slippageBPS;\n    }\n    get chainId() {\n        return this._chainId;\n    }\n    get signer() {\n        return this._signer;\n    }\n    get provider() {\n        return this._provider;\n    }\n    get subgraphUrl() {\n        return this._subgraphUrl;\n    }\n    get handler() {\n        return this._handler;\n    }\n    get handlerAddress() {\n        return this._handlerAddress;\n    }\n    get moduleAddress() {\n        return this._moduleAddress;\n    }\n    get contract() {\n        return this._gelatoCore;\n    }\n    get erc20OrderRouter() {\n        return this._erc20OrderRouter;\n    }\n    get abiEncoder() {\n        return this._abiEncoder;\n    }\n    encodeLimitOrderCancellation(order, checkIsActiveOrder) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._gelatoCore)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!order.owner)\n                throw new Error(\"No owner\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const data = this._gelatoCore.interface.encodeFunctionData(\"cancelOrder\", [\n                this._moduleAddress,\n                order.inputToken,\n                order.owner,\n                order.witness,\n                order.data,\n            ]);\n            return {\n                data,\n                to: this._gelatoCore.address,\n                value: ethers_1.constants.Zero,\n            };\n        });\n    }\n    cancelStopLimitOrder(order, checkIsActiveOrder, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            if (!this._gelatoCore)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!order.data)\n                throw new Error(\"No data in order\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const owner = yield this._signer.getAddress();\n            if (owner.toLowerCase() !== order.owner.toLowerCase())\n                throw new Error(\"Owner and signer mismatch\");\n            return this._gelatoCore.cancelOrder(this._moduleAddress, order.inputToken, order.owner, order.witness, order.data, overrides !== null && overrides !== void 0 ? overrides : {\n                gasLimit: (0, utils_1.isEthereumChain)(this._chainId) ? 500000 : 1500000,\n            });\n        });\n    }\n    approveTokenAmount(inputToken, amount, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            return overrides\n                ? types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount, overrides)\n                : types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount);\n        });\n    }\n    isActiveOrder(order) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._provider)\n                throw new Error(\"No provider\");\n            if (!this._gelatoCore)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.module)\n                throw new Error(\"No module in order\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.owner)\n                throw new Error(\"No owner in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.data)\n                throw new Error(\"No data in order\");\n            return this._gelatoCore.existOrder(order.module, order.inputToken, order.owner, order.witness, order.data);\n        });\n    }\n    getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(18));\n        if (invert) {\n            return ethers_1.BigNumber.from(inputValue)\n                .mul(factor)\n                .div(outputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputValue)\n                .mul(factor)\n                .div(inputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .toString();\n        }\n    }\n    getFeeAndSlippageAdjustedMinReturn(outputAmount, extraSlippageBPS) {\n        if (extraSlippageBPS) {\n            if (!Number.isInteger(extraSlippageBPS))\n                throw new Error(\"Extra Slippage BPS must an unsigned integer\");\n        }\n        const gelatoFee = (0, utils_1.isEthereumChain)(this._chainId)\n            ? 0\n            : ethers_1.BigNumber.from(outputAmount).mul(this._gelatoFeeBPS).div(10000).gte(1)\n                ? ethers_1.BigNumber.from(outputAmount).mul(this._gelatoFeeBPS).div(10000)\n                : ethers_1.BigNumber.from(1);\n        const slippageBPS = extraSlippageBPS ? extraSlippageBPS : this._slippageBPS;\n        const slippage = ethers_1.BigNumber.from(outputAmount).mul(slippageBPS).div(10000);\n        const minReturn = ethers_1.BigNumber.from(outputAmount).sub(gelatoFee).sub(slippage);\n        return {\n            minReturn: minReturn.toString(),\n            slippage: slippage.toString(),\n            gelatoFee: gelatoFee.toString(),\n        };\n    }\n    getAdjustedMinReturn(minReturn, extraSlippageBPS) {\n        if ((0, utils_1.isEthereumChain)(this._chainId))\n            throw new Error(\"Method not available for current chain.\");\n        const gelatoFee = ethers_1.BigNumber.from(this._gelatoFeeBPS);\n        const slippage = extraSlippageBPS\n            ? ethers_1.BigNumber.from(extraSlippageBPS)\n            : ethers_1.BigNumber.from(this._slippageBPS);\n        const fees = gelatoFee.add(slippage);\n        const adjustedMinReturn = ethers_1.BigNumber.from(minReturn)\n            .mul(10000)\n            .div(ethers_1.BigNumber.from(10000).sub(fees));\n        return adjustedMinReturn.toString();\n    }\n    getExecutionPrice(inputAmount, inputDecimals, outputAmount, outputDecimals, isInverted = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(isInverted ? outputDecimals : inputDecimals));\n        if (isInverted) {\n            return ethers_1.BigNumber.from(inputAmount)\n                .mul(factor)\n                .div(outputAmount)\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputAmount)\n                .mul(factor)\n                .div(inputAmount)\n                .toString();\n        }\n    }\n    _getKey(order) {\n        return ethers_1.utils.keccak256(this._abiEncoder.encode([\"address\", \"address\", \"address\", \"address\", \"bytes\"], [order.module, order.inputToken, order.owner, order.witness, order.data]));\n    }\n    _encodeSubmitData(inputToken, outputToken, owner, witness, amount, maxReturn, minReturn, secret, checkAllowance) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this.provider)\n                throw new Error(\"No provider\");\n            if (!this.handlerAddress)\n                throw new Error(\"No handlerAddress\");\n            if (inputToken.toLowerCase() === outputToken.toLowerCase())\n                throw new Error(\"Input token and output token can not be equal\");\n            const encodedData = this.abiEncoder.encode([\"address\", \"uint256\", \"address\", \"uint256\"], [outputToken, minReturn, this.handlerAddress, maxReturn]);\n            let data, value, to;\n            if ((0, utils_1.isNetworkGasToken)(inputToken)) {\n                const encodedEthOrder = yield this.contract.encodeEthOrder(this.moduleAddress, constants_1.ETH_ADDRESS, // we also use ETH_ADDRESS if it's MATIC\n                owner, witness, encodedData, secret);\n                data = this.contract.interface.encodeFunctionData(\"depositEth\", [\n                    encodedEthOrder,\n                ]);\n                value = amount;\n                to = this.contract.address;\n            }\n            else {\n                if (checkAllowance) {\n                    const allowance = yield types_1.ERC20__factory.connect(inputToken, this.provider).allowance(owner, this.erc20OrderRouter.address);\n                    if (allowance.lt(amount))\n                        throw new Error(\"Insufficient token allowance for placing order\");\n                }\n                data = this.erc20OrderRouter.interface.encodeFunctionData(\"depositToken\", [\n                    amount,\n                    this.moduleAddress,\n                    inputToken,\n                    owner,\n                    witness,\n                    encodedData,\n                    secret,\n                ]);\n                value = ethers_1.constants.Zero;\n                to = this.erc20OrderRouter.address;\n            }\n            return { data, value, to };\n        });\n    }\n}\nexports.GelatoBase = GelatoBase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GelatoStopLimitOrders = void 0;\nconst tslib_1 = require(\"tslib\");\nconst ethers_1 = require(\"ethers\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"./core\");\nconst stoplimit_1 = require(\"../utils/queries/stoplimit\");\nclass GelatoStopLimitOrders extends core_1.GelatoBase {\n    constructor(chainId, signerOrProvider, handler) {\n        var _a;\n        if (handler && !(0, core_1.isValidChainIdAndHandler)(chainId, handler)) {\n            throw new Error(\"Invalid chainId and handler\");\n        }\n        const sotplossHandlers = constants_1.NETWORK_STOP_LIMIT_HANDLERS[chainId];\n        if (!handler) {\n            throw new Error(\"No Handler defined\");\n        }\n        if (handler && !sotplossHandlers.includes(handler)) {\n            throw new Error(\"Handler not supported\");\n        }\n        const moduleAddress = constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId];\n        if (!moduleAddress)\n            throw new Error(\"Invalid chainId and handler\");\n        const handlerAddress = (_a = constants_1.HANDLERS_ADDRESSES[chainId][handler]) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n        super(chainId, moduleAddress, signerOrProvider, handler, handlerAddress);\n    }\n    submitStopLimitOrder(inputToken, outputToken, inputAmount, maxReturn, checkAllowance = true, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this.signer)\n                throw new Error(\"No signer\");\n            if (!maxReturn)\n                throw new Error(\"No StopLimit defined\");\n            const owner = yield this.signer.getAddress();\n            const txData = yield this.encodeStopLimitOrderSubmission(inputToken, outputToken, inputAmount, maxReturn, owner, checkAllowance);\n            return this.signer.sendTransaction(Object.assign(Object.assign({}, overrides), { to: txData.to, data: txData.data, value: ethers_1.BigNumber.from(txData.value) }));\n        });\n    }\n    encodeStopLimitOrderSubmission(inputToken, outputToken, inputAmount, maxReturn, owner, checkAllowance = true) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const { payload } = yield this.encodeStopLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, maxReturn, owner, checkAllowance);\n            return payload;\n        });\n    }\n    encodeStopLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, maxReturnToBeParsed, owner, checkAllowance = true) {\n        var _a;\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!maxReturnToBeParsed)\n                throw new Error(\"No StopLimit defined\");\n            if (!this.handlerAddress)\n                throw new Error(\"No handlerAddress\");\n            const randomSecret = ethers_1.utils.hexlify(ethers_1.utils.randomBytes(19)).replace(\"0x\", \"\");\n            // 0x67656c61746f6e6574776f726b = gelatonetwork in hex\n            const fullSecret = `0x67656c61746f6e6574776f726b${randomSecret}`;\n            const { privateKey: secret, address: witness } = new ethers_1.Wallet(fullSecret);\n            const { minReturn } = this.getFeeAndSlippageAdjustedMinReturn(maxReturnToBeParsed);\n            const payload = yield this._encodeSubmitData(inputToken, outputToken, owner, witness, inputAmount, maxReturnToBeParsed, minReturn, secret, checkAllowance);\n            const encodedData = this.abiEncoder.encode([\"address\", \"uint256\", \"address\", \"uint256\"], [outputToken, minReturn, this.handlerAddress, maxReturnToBeParsed]);\n            return {\n                payload,\n                secret,\n                witness,\n                order: {\n                    id: this._getKey({\n                        module: this.moduleAddress,\n                        inputToken,\n                        owner,\n                        witness,\n                        data: encodedData,\n                    }),\n                    module: this.moduleAddress.toLowerCase(),\n                    data: encodedData,\n                    inputToken: inputToken.toLowerCase(),\n                    outputToken: outputToken.toLowerCase(),\n                    owner: owner.toLowerCase(),\n                    witness: witness.toLowerCase(),\n                    inputAmount: inputAmount.toString(),\n                    minReturn: minReturn.toString(),\n                    maxReturn: maxReturnToBeParsed.toString(),\n                    adjustedMinReturn: maxReturnToBeParsed.toString(),\n                    inputData: payload.data.toString(),\n                    secret: secret.toLowerCase(),\n                    handler: (_a = this.handlerAddress) !== null && _a !== void 0 ? _a : null,\n                },\n            };\n        });\n    }\n    getOpenStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getExecutedStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitExecutedOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getCancelledStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitCancelledOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getPastStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryPastOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n}\nexports.GelatoStopLimitOrders = GelatoStopLimitOrders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEthereumChain = exports.isTransactionCostDependentChain = exports.isNetworkGasToken = exports.queries = void 0;\nconst tslib_1 = require(\"tslib\");\nconst constants_1 = require(\"../constants\");\nexports.queries = (0, tslib_1.__importStar)(require(\"./queries/constants\"));\nconst isNetworkGasToken = (token) => {\n    if (token.toLowerCase() === constants_1.ETH_ADDRESS.toLowerCase()) {\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nexports.isNetworkGasToken = isNetworkGasToken;\nconst isTransactionCostDependentChain = (chainId) => {\n    switch (chainId) {\n        case 1:\n            return true;\n        case 3:\n            return true;\n        case 5:\n            return true;\n        case 56:\n            return true;\n        case 250:\n            return true;\n        case 43114:\n            return true;\n        default:\n            return false;\n    }\n};\nexports.isTransactionCostDependentChain = isTransactionCostDependentChain;\nconst isEthereumChain = (chainId) => {\n    switch (chainId) {\n        case 1:\n            return true;\n        case 3:\n            return true;\n        case 5:\n            return true;\n        default:\n            return false;\n    }\n};\nexports.isEthereumChain = isEthereumChain;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER = exports.GET_ALL_CANCELLED_ORDERS_BY_OWNER = exports.GET_ALL_EXECUTED_ORDERS_BY_OWNER = exports.GET_ALL_PAST_ORDERS_BY_OWNER = exports.GET_ALL_OPEN_ORDERS_BY_OWNER = exports.GET_ALL_ORDERS_BY_OWNER = exports.GET_ORDER_BY_ID = void 0;\nconst graphql_request_1 = require(\"graphql-request\");\nexports.GET_ORDER_BY_ID = (0, graphql_request_1.gql) `\n  query getOrdersByOwner($id: String) {\n    orders(where: { id: $id }) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_OPEN_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getOpenOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status: open }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_PAST_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getPastOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status_not: open }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_EXECUTED_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getExecutedOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status: executed }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_CANCELLED_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getCancelledOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status: cancelled }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getOrdersByOwner($owner: String, $module: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, module: $module }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      maxReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.queryCancelledOrders = exports.queryExecutedOrders = exports.queryPastOrders = exports.queryOpenOrders = exports.queryOrders = exports.queryOrder = void 0;\nconst tslib_1 = require(\"tslib\");\nconst graphql_request_1 = require(\"graphql-request\");\nconst constants_1 = require(\"../../constants\");\nconst constants_2 = require(\"./constants\");\nconst stopLimitModule = (chainId) => constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase();\nconst queryOrder = (orderId, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    var _a;\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ORDER_BY_ID, {\n                id: orderId.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ORDER_BY_ID, {\n                id: orderId.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return (_a = _getUniqueOrdersWithExpiry(allOrders, chainId).pop()) !== null && _a !== void 0 ? _a : null;\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for all orders\");\n    }\n});\nexports.queryOrder = queryOrder;\nconst queryOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId);\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for all orders\");\n    }\n});\nexports.queryOrders = queryOrders;\nconst queryOpenOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status === \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for open orders\");\n    }\n});\nexports.queryOpenOrders = queryOpenOrders;\nconst queryPastOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status !== \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for past orders\");\n    }\n});\nexports.queryPastOrders = queryPastOrders;\nconst queryExecutedOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status === \"executed\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for executed orders\");\n    }\n});\nexports.queryExecutedOrders = queryExecutedOrders;\nconst queryCancelledOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status === \"cancelled\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for cancelled orders\");\n    }\n});\nexports.queryCancelledOrders = queryCancelledOrders;\nconst _getUniqueOrdersWithExpiry = (allOrders, chainId) => \n// create Map and asign order id to order (key:value) to avoid having duplicated orders form multiple subgraphs\n[...new Map(allOrders.map((order) => [order.id, order])).values()]\n    // sort by `updatedAt` asc so that the most recent one will be used\n    .sort((a, b) => parseFloat(a.updatedAt) - parseFloat(b.updatedAt))\n    // filter out stop limit module\n    .filter((order) => order.module !== stopLimitModule(chainId))\n    // add expiry to order obj\n    .map((order) => {\n    const isExpired = Date.now() >\n        (parseInt(order.createdAt) + constants_1.MAX_LIFETIME_IN_SECONDS) * 1000;\n    return Object.assign(Object.assign({}, order), { isExpired });\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._getUniqueOrdersWithExpiry = exports.queryPastOrders = exports.queryStopLimitCancelledOrders = exports.queryStopLimitExecutedOrders = exports.queryOpenStopLimitOrders = exports.queryStopLimitOrders = void 0;\nconst tslib_1 = require(\"tslib\");\nconst graphql_request_1 = require(\"graphql-request\");\nconst constants_1 = require(\"../../constants\");\nconst constants_2 = require(\"./constants\");\nconst queryStopLimitOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders);\n    }\n    catch (error) {\n        console.error(error);\n        throw new Error(\"Could not query subgraph for all orders\");\n    }\n});\nexports.queryStopLimitOrders = queryStopLimitOrders;\nconst queryOpenStopLimitOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status === \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for open orders\");\n    }\n});\nexports.queryOpenStopLimitOrders = queryOpenStopLimitOrders;\nconst queryStopLimitExecutedOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status === \"executed\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for executed orders\");\n    }\n});\nexports.queryStopLimitExecutedOrders = queryStopLimitExecutedOrders;\nconst queryStopLimitCancelledOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status === \"cancelled\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for cancelled orders\");\n    }\n});\nexports.queryStopLimitCancelledOrders = queryStopLimitCancelledOrders;\nconst queryPastOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status !== \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for past orders\");\n    }\n});\nexports.queryPastOrders = queryPastOrders;\nconst _getUniqueOrdersWithExpiry = (allOrders) => [...new Map(allOrders.map((order) => [order.id, order])).values()]\n    // sort by `updatedAt` asc so that the most recent one will be used\n    .sort((a, b) => parseFloat(a.updatedAt) - parseFloat(b.updatedAt))\n    // add expiry to order obj\n    .map((order) => {\n    const isExpired = Date.now() >\n        (parseInt(order.createdAt) + constants_1.MAX_LIFETIME_IN_SECONDS) * 1000;\n    return Object.assign(Object.assign({}, order), { isExpired });\n});\nexports._getUniqueOrdersWithExpiry = _getUniqueOrdersWithExpiry;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extract_files_1 = require(\"extract-files\");\nvar form_data_1 = __importDefault(require(\"form-data\"));\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nvar isExtractableFileEnhanced = function (value) {\n    return extract_files_1.isExtractableFile(value) ||\n        (value !== null && typeof value === 'object' && typeof value.pipe === 'function');\n};\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nfunction createRequestBody(query, variables, operationName) {\n    var _a = extract_files_1.extractFiles({ query: query, variables: variables, operationName: operationName }, '', isExtractableFileEnhanced), clone = _a.clone, files = _a.files;\n    if (files.size === 0) {\n        if (!Array.isArray(query)) {\n            return JSON.stringify(clone);\n        }\n        if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n            throw new Error('Cannot create request body with given variable type, array expected');\n        }\n        // Batch support\n        var payload = query.reduce(function (accu, currentQuery, index) {\n            accu.push({ query: currentQuery, variables: variables ? variables[index] : undefined });\n            return accu;\n        }, []);\n        return JSON.stringify(payload);\n    }\n    var Form = typeof FormData === 'undefined' ? form_data_1.default : FormData;\n    var form = new Form();\n    form.append('operations', JSON.stringify(clone));\n    var map = {};\n    var i = 0;\n    files.forEach(function (paths) {\n        map[++i] = paths;\n    });\n    form.append('map', JSON.stringify(map));\n    i = 0;\n    files.forEach(function (paths, file) {\n        form.append(\"\" + ++i, file);\n    });\n    return form;\n}\nexports.default = createRequestBody;\n//# sourceMappingURL=createRequestBody.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gql = exports.batchRequests = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")), CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", { enumerable: true, get: function () { return types_1.ClientError; } });\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n    var oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== 'undefined' && headers instanceof Headers) ||\n            headers instanceof CrossFetch.Headers) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (_a) {\n                var name = _a[0], value = _a[1];\n                oHeaders[name] = value;\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n *\n * @param {string} str GraphQL query\n * @returns {string} Cleaned query\n */\nvar queryCleanner = function (str) { return str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim(); };\n/**\n * Create query string for GraphQL request\n *\n * @param {object} param0 -\n *\n * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request\n * @param {string|undefined} param0.operationName the GraphQL operation name\n * @param {any|any[]} param0.variables the GraphQL variables to use\n */\nvar buildGetQueryParams = function (_a) {\n    var query = _a.query, variables = _a.variables, operationName = _a.operationName;\n    if (!Array.isArray(query)) {\n        var search = [\"query=\" + encodeURIComponent(queryCleanner(query))];\n        if (variables) {\n            search.push(\"variables=\" + encodeURIComponent(JSON.stringify(variables)));\n        }\n        if (operationName) {\n            search.push(\"operationName=\" + encodeURIComponent(operationName));\n        }\n        return search.join('&');\n    }\n    if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n        throw new Error('Cannot create query with given variable type, array expected');\n    }\n    // Batch support\n    var payload = query.reduce(function (accu, currentQuery, index) {\n        accu.push({\n            query: queryCleanner(currentQuery),\n            variables: variables ? JSON.stringify(variables[index]) : undefined,\n        });\n        return accu;\n    }, []);\n    return \"query=\" + encodeURIComponent(JSON.stringify(payload));\n};\n/**\n * Fetch data using POST method\n */\nvar post = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var body;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    body = createRequestBody_1.default(query, variables, operationName);\n                    return [4 /*yield*/, fetch(url, __assign({ method: 'POST', headers: __assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), headers), body: body }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * Fetch data using GET method\n */\nvar get = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var queryParams;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    queryParams = buildGetQueryParams({\n                        query: query,\n                        variables: variables,\n                        operationName: operationName,\n                    });\n                    return [4 /*yield*/, fetch(url + \"?\" + queryParams, __assign({ method: 'GET', headers: headers }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n        var _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n        var url = this.url;\n        return makeRequest({\n            url: url,\n            query: query,\n            variables: variables,\n            headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n            operationName: undefined,\n            fetch: fetch,\n            method: method,\n            fetchOptions: fetchOptions,\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, fetch, _c, method, fetchOptions, url, _d, query, operationName, data;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n                        url = this.url;\n                        _d = resolveRequestDocument(document), query = _d.query, operationName = _d.operationName;\n                        return [4 /*yield*/, makeRequest({\n                                url: url,\n                                query: query,\n                                variables: variables,\n                                headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n                                operationName: operationName,\n                                fetch: fetch,\n                                method: method,\n                                fetchOptions: fetchOptions,\n                            })];\n                    case 1:\n                        data = (_e.sent()).data;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.batchRequests = function (documents, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, fetch, _c, method, fetchOptions, url, queries, variables, data;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n                        url = this.url;\n                        queries = documents.map(function (_a) {\n                            var document = _a.document;\n                            return resolveRequestDocument(document).query;\n                        });\n                        variables = documents.map(function (_a) {\n                            var variables = _a.variables;\n                            return variables;\n                        });\n                        return [4 /*yield*/, makeRequest({\n                                url: url,\n                                query: queries,\n                                variables: variables,\n                                headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n                                operationName: undefined,\n                                fetch: fetch,\n                                method: method,\n                                fetchOptions: fetchOptions,\n                            })];\n                    case 1:\n                        data = (_d.sent()).data;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var _a;\n        var headers = this.options.headers;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n    };\n    /**\n     * Change the client endpoint. All subsequent requests will send to this endpoint.\n     */\n    GraphQLClient.prototype.setEndpoint = function (value) {\n        this.url = value;\n        return this;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\nfunction makeRequest(_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, headers = _a.headers, operationName = _a.operationName, fetch = _a.fetch, _b = _a.method, method = _b === void 0 ? 'POST' : _b, fetchOptions = _a.fetchOptions;\n    return __awaiter(this, void 0, void 0, function () {\n        var fetcher, isBathchingQuery, response, result, successfullyReceivedData, headers_1, status_1, errorResult;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    fetcher = method.toUpperCase() === 'POST' ? post : get;\n                    isBathchingQuery = Array.isArray(query);\n                    return [4 /*yield*/, fetcher({\n                            url: url,\n                            query: query,\n                            variables: variables,\n                            operationName: operationName,\n                            headers: headers,\n                            fetch: fetch,\n                            fetchOptions: fetchOptions,\n                        })];\n                case 1:\n                    response = _c.sent();\n                    return [4 /*yield*/, getResult(response)];\n                case 2:\n                    result = _c.sent();\n                    successfullyReceivedData = isBathchingQuery && Array.isArray(result) ? !result.some(function (_a) {\n                        var data = _a.data;\n                        return !data;\n                    }) : !!result.data;\n                    if (response.ok && !result.errors && successfullyReceivedData) {\n                        headers_1 = response.headers, status_1 = response.status;\n                        return [2 /*return*/, __assign(__assign({}, (isBathchingQuery ? { data: result } : result)), { headers: headers_1, status: status_1 })];\n                    }\n                    else {\n                        errorResult = typeof result === 'string' ? { error: result } : result;\n                        throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status, headers: response.headers }), { query: query, variables: variables });\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * todo\n */\nfunction rawRequest(url, query, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables, requestHeaders)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(document, variables, requestHeaders)];\n        });\n    });\n}\nexports.request = request;\n/**\n * Send a batch of GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nfunction batchRequests(url, documents, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.batchRequests(documents, requestHeaders)];\n        });\n    });\n}\nexports.batchRequests = batchRequests;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n    var contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.startsWith('application/json')) {\n        return response.json();\n    }\n    else {\n        return response.text();\n    }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n    var _a;\n    if (typeof document === 'string')\n        return { query: document };\n    var operationName = undefined;\n    var operationDefinitions = document.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; });\n    if (operationDefinitions.length === 1) {\n        operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    return { query: printer_1.print(document), operationName: operationName };\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    return chunks.reduce(function (accumulator, chunk, index) { return \"\" + accumulator + chunk + (index in variables ? variables[index] : ''); }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n    var o = {};\n    headers.forEach(function (v, k) {\n        o[k] = v;\n    });\n    return o;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientError = void 0;\nvar ClientError = /** @class */ (function (_super) {\n    __extends(ClientError, _super);\n    function ClientError(response, request) {\n        var _this = this;\n        var message = ClientError.extractMessage(response) + \": \" + JSON.stringify({\n            response: response,\n            request: request,\n        });\n        _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, ClientError.prototype);\n        _this.response = response;\n        _this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ClientError);\n        }\n        return _this;\n    }\n    ClientError.extractMessage = function (response) {\n        try {\n            return response.errors[0].message;\n        }\n        catch (e) {\n            return \"GraphQL Error (Code: \" + response.status + \")\";\n        }\n    };\n    return ClientError;\n}(Error));\nexports.ClientError = ClientError;\n//# sourceMappingURL=types.js.map","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nexport function getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[4273],{\n\n/***/ 87033:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS = exports.GENERIC_GAS_LIMIT_ORDER_EXECUTION = exports.NATIVE_WRAPPED_TOKEN_ADDRESS = exports.NATIVE_TOKEN_NAME = exports.NATIVE_WRAPPED_TOKEN_TICKER = exports.NATIVE_TOKEN_TICKER = exports.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER = exports.GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS = exports.GELATO_LIMIT_ORDERS_MODULE_ADDRESS = exports.GELATO_LIMIT_ORDERS_ADDRESS = exports.SUBGRAPH_URL = exports.OLD_SUBGRAPH_URL = exports.NETWORK_STOP_LIMIT_HANDLERS = exports.NETWORK_HANDLERS = exports.NETWORK_NAME = exports.HANDLERS_ADDRESSES = exports.LIMIT_ORDER_SLIPPAGE = exports.STOP_LIMIT_SLIPPAGE_BPS = exports.BPS_GELATO_FEE = exports.CHAIN_ID = exports.MAX_LIFETIME_IN_SECONDS = exports.SLIPPAGE_BPS = exports.ETH_ADDRESS = void 0;\nexports.ETH_ADDRESS = \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\nexports.SLIPPAGE_BPS = 40; // 0.4%\nexports.MAX_LIFETIME_IN_SECONDS = 7889238; // 3 months in seconds\nexports.CHAIN_ID = {\n    MAINNET: 1,\n    ROPSTEN: 3,\n    GOERLI: 5,\n    BSC: 56,\n    MATIC: 137,\n    FANTOM: 250,\n    AVAX: 43114,\n};\nexports.BPS_GELATO_FEE = {\n    [exports.CHAIN_ID.MAINNET]: 10,\n    [exports.CHAIN_ID.MATIC]: 10,\n    [exports.CHAIN_ID.FANTOM]: 10,\n    [exports.CHAIN_ID.BSC]: 10,\n    [exports.CHAIN_ID.AVAX]: 10,\n};\nexports.STOP_LIMIT_SLIPPAGE_BPS = {\n    [exports.CHAIN_ID.MAINNET]: 500,\n    [exports.CHAIN_ID.ROPSTEN]: 500,\n    [exports.CHAIN_ID.MATIC]: 500,\n    [exports.CHAIN_ID.FANTOM]: 500,\n    [exports.CHAIN_ID.BSC]: 500,\n    [exports.CHAIN_ID.AVAX]: 500,\n};\nexports.LIMIT_ORDER_SLIPPAGE = {\n    [exports.CHAIN_ID.MAINNET]: 40,\n    [exports.CHAIN_ID.ROPSTEN]: 40,\n    [exports.CHAIN_ID.MATIC]: 40,\n    [exports.CHAIN_ID.FANTOM]: 40,\n    [exports.CHAIN_ID.BSC]: 40,\n    [exports.CHAIN_ID.AVAX]: 40,\n};\nexports.HANDLERS_ADDRESSES = {\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.MAINNET]: {\n        [\"uniswap\"]: \"0x837c03414fb86861f28ca7e91e5fd770fda0f52d\",\n        [\"uniswap_stoplimit\"]: \"0xf437a1a98566872f734bd18addf4bb610d1f887b\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.ROPSTEN]: {\n        [\"uniswap\"]: \"0x1f397f95d31eb20183b69d685a5060cfdefd508b\",\n        [\"quickswap_stoplimit\"]: \"0x87bE4Eb9dFb2DefcEA035D3010f33584Fc8ddDB5\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.MATIC]: {\n        [\"quickswap\"]: \"0xaccbd2c6ad75ad3394dc5f4b1f606bf111e4eae3\",\n        [\"polydex\"]: \"0x00fc86d360162e4672ec6B427E12ed36F39f1f53\",\n        [\"cafeswap\"]: \"0xd167afcee4e9a89e69646fd3c27e58b61d1b7f97\",\n        [\"quickswap_stoplimit\"]: \"0x51cc226648f8de65513de7cdfd3e7b116156234e\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.FANTOM]: {\n        [\"spiritswap\"]: \"0x5fb00386558ccc219e51b69d8e963ef20b0c267a\",\n        [\"spookyswap\"]: \"0x228ffd7122d202c0cd24330892881c47b0817c7a\",\n        [\"bombswap\"]: \"0x87C4Fbd67f6DD8a1B5EFD9879956c728C97afeFe\",\n        [\"defyswap\"]: \"0x3d401587320522a5e0bb973d10a852430a8edbbd\",\n        [\"spiritswap_stoplimit\"]: \"0x6ea82c72732389c5149326e048a46be9f8bec8e8\",\n        [\"spookyswap_stoplimit\"]: \"0xe912cd26c4a4cfffc175a297f1328ab23313a1a7\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.BSC]: {\n        [\"pancakeswap\"]: \"0x88f8CCC064bA2D39cF08D57B6e7504a7B6bE8E4e\",\n        [\"pancakeswap_stoplimit\"]: \"0x84b826bcd26f1bc0cd5fbbdef7f5b8965d6bbb38\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.AVAX]: {\n        [\"traderjoe\"]: \"0x88f8CCC064bA2D39cF08D57B6e7504a7B6bE8E4e\",\n        [\"pangolin\"]: \"0x8b206547cfe6f35a77ddab2d6d97260765a349ef\",\n        [\"pangolin_stoplimit\"]: \"0xb4c53e2e32caf977d61a8a776bdc44837a5d0d91\",\n        [\"traderjoe_stoplimit\"]: \"0xcf497830e43836738bdd0c3d7e09b599ddf081b2\",\n    },\n};\nexports.NETWORK_NAME = {\n    [exports.CHAIN_ID.MAINNET]: \"Ethereum\",\n    [exports.CHAIN_ID.ROPSTEN]: \"Ropsten\",\n    [exports.CHAIN_ID.GOERLI]: \"Goerli\",\n    [exports.CHAIN_ID.MATIC]: \"Polygon (Matic)\",\n    [exports.CHAIN_ID.FANTOM]: \"FANTOM\",\n    [exports.CHAIN_ID.BSC]: \"BSC\",\n    [exports.CHAIN_ID.AVAX]: \"AVAX\",\n};\nexports.NETWORK_HANDLERS = {\n    [exports.CHAIN_ID.MAINNET]: [\"uniswap\", \"uniswap_stoplimit\"],\n    [exports.CHAIN_ID.ROPSTEN]: [\"uniswap\", \"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.MATIC]: [\"quickswap\", \"polydex\", \"cafeswap\", \"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.FANTOM]: [\n        \"spiritswap\",\n        \"spookyswap\",\n        \"bombswap\",\n        \"defyswap\",\n        \"spiritswap_stoplimit\",\n        \"spookyswap_stoplimit\",\n    ],\n    [exports.CHAIN_ID.BSC]: [\"pancakeswap\", \"pancakeswap_stoplimit\"],\n    [exports.CHAIN_ID.AVAX]: [\n        \"traderjoe\",\n        \"pangolin\",\n        \"pangolin_stoplimit\",\n        \"traderjoe_stoplimit\",\n    ],\n};\nexports.NETWORK_STOP_LIMIT_HANDLERS = {\n    [exports.CHAIN_ID.MAINNET]: [\"uniswap_stoplimit\"],\n    [exports.CHAIN_ID.ROPSTEN]: [\"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.MATIC]: [\"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.BSC]: [\"pancakeswap_stoplimit\"],\n    [exports.CHAIN_ID.FANTOM]: [\"spookyswap_stoplimit\", \"spiritswap_stoplimit\"],\n    [exports.CHAIN_ID.AVAX]: [\"traderjoe_stoplimit\", \"pangolin_stoplimit\"],\n};\nexports.OLD_SUBGRAPH_URL = {\n    [exports.CHAIN_ID.MAINNET]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders\",\n    [exports.CHAIN_ID.ROPSTEN]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-ropsten\",\n    [exports.CHAIN_ID.MATIC]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-polygon\",\n    [exports.CHAIN_ID.FANTOM]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-fantom\",\n};\nexports.SUBGRAPH_URL = {\n    [exports.CHAIN_ID.MAINNET]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-ii\",\n    [exports.CHAIN_ID.MATIC]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-polygon-ii\",\n    [exports.CHAIN_ID.FANTOM]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-fantom-ii\",\n    [exports.CHAIN_ID.BSC]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-bsc\",\n    [exports.CHAIN_ID.AVAX]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-avax\",\n};\nexports.GELATO_LIMIT_ORDERS_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0x36049D479A97CdE1fC6E2a5D2caE30B666Ebf92B\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0x0e5096D201Fe2985f5C26432A76f145D6e5D1453\",\n    [exports.CHAIN_ID.GOERLI]: \"0xa0453c6ab71fe3da89640ee2503326bd0899a589\",\n    [exports.CHAIN_ID.MATIC]: \"0x38c4092b28dAB7F3d98eE6524549571c283cdfA5\",\n    [exports.CHAIN_ID.FANTOM]: \"0x05Ad1094Eb6Cde564d732196F6754Ee464896031\",\n    [exports.CHAIN_ID.BSC]: \"0x0c30D3d66bc7C73A83fdA929888c34dcb24FD599\",\n    [exports.CHAIN_ID.AVAX]: \"0x0c30D3d66bc7C73A83fdA929888c34dcb24FD599\",\n};\nexports.GELATO_LIMIT_ORDERS_MODULE_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0x037fc8e71445910e1E0bBb2a0896d5e9A7485318\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0x3f3C13b09B601fb6074124fF8D779d2964caBf8B\",\n    [exports.CHAIN_ID.GOERLI]: \"0xCf8EDB3333Fae73b23f689229F4De6Ac95d1f707\",\n    [exports.CHAIN_ID.MATIC]: \"0x5A36178E38864F5E724A2DaF5f9cD9bA473f7903\",\n    [exports.CHAIN_ID.FANTOM]: \"0xf2253BF9a0BD002300cFe6f4E630d755669f6DCa\",\n    [exports.CHAIN_ID.BSC]: \"0xb7499a92fc36e9053a4324aFfae59d333635D9c3\",\n    [exports.CHAIN_ID.AVAX]: \"0xb7499a92fc36e9053a4324aFfae59d333635D9c3\",\n};\nexports.GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0xbeC333EDE1A0687D2b9624F8C073a54c93ba9777\",\n    [exports.CHAIN_ID.GOERLI]: \"0xCf8EDB3333Fae73b23f689229F4De6Ac95d1f707\",\n};\nexports.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER = {\n    [exports.CHAIN_ID.MAINNET]: \"0x5fb00386558ccc219e51b69d8e963ef20b0c267a\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0x9c06ff386779cc2269d482bcecf2378a4ff5cb90\",\n    [exports.CHAIN_ID.GOERLI]: \"0x247A1306b6122ba28862b19a95004899db91f1b5\",\n    [exports.CHAIN_ID.MATIC]: \"0x0c2c2963a4353ffd839590f7cb1e783688378814\",\n    [exports.CHAIN_ID.FANTOM]: \"0x59e61b95f20e940ac777e88fa2dfa0a6a4c40fa0\",\n    [exports.CHAIN_ID.BSC]: \"0x64c7f3c2C19B41a6aD67bb5f4edc8EdbB3284F34\",\n    [exports.CHAIN_ID.AVAX]: \"0x64c7f3c2C19B41a6aD67bb5f4edc8EdbB3284F34\",\n};\nexports.NATIVE_TOKEN_TICKER = {\n    [exports.CHAIN_ID.MAINNET]: \"ETH\",\n    [exports.CHAIN_ID.ROPSTEN]: \"ETH\",\n    [exports.CHAIN_ID.GOERLI]: \"ETH\",\n    [exports.CHAIN_ID.MATIC]: \"MATIC\",\n    [exports.CHAIN_ID.FANTOM]: \"FTM\",\n    [exports.CHAIN_ID.BSC]: \"BNB\",\n    [exports.CHAIN_ID.AVAX]: \"AVAX\",\n};\nexports.NATIVE_WRAPPED_TOKEN_TICKER = {\n    [exports.CHAIN_ID.MAINNET]: \"WETH\",\n    [exports.CHAIN_ID.ROPSTEN]: \"WETH\",\n    [exports.CHAIN_ID.GOERLI]: \"WETH\",\n    [exports.CHAIN_ID.MATIC]: \"WMATIC\",\n    [exports.CHAIN_ID.FANTOM]: \"WFTM\",\n    [exports.CHAIN_ID.BSC]: \"WBNB\",\n    [exports.CHAIN_ID.AVAX]: \"WAVAX\",\n};\nexports.NATIVE_TOKEN_NAME = {\n    [exports.CHAIN_ID.MAINNET]: \"Ether\",\n    [exports.CHAIN_ID.ROPSTEN]: \"Ether\",\n    [exports.CHAIN_ID.GOERLI]: \"Ether\",\n    [exports.CHAIN_ID.MATIC]: \"Matic\",\n    [exports.CHAIN_ID.FANTOM]: \"Fantom\",\n    [exports.CHAIN_ID.BSC]: \"Bnb\",\n    [exports.CHAIN_ID.AVAX]: \"Avax\",\n};\nexports.NATIVE_WRAPPED_TOKEN_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0xc778417e063141139fce010982780140aa0cd5ab\",\n    [exports.CHAIN_ID.GOERLI]: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n    [exports.CHAIN_ID.MATIC]: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n    [exports.CHAIN_ID.FANTOM]: \"0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83\",\n    [exports.CHAIN_ID.BSC]: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n    [exports.CHAIN_ID.AVAX]: \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\",\n};\nexports.GENERIC_GAS_LIMIT_ORDER_EXECUTION = \"400000\";\nexports.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0x260aB0aCb931D7Da784fC35c7E96c3B13213Abf1\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0xDC41072F4aFE7e4a7ea0f21d13a92662Fe733C55\",\n    [exports.CHAIN_ID.MATIC]: \"0x81967ac4ce8e2d94f7e4b4cf3d2e760605079604\",\n    [exports.CHAIN_ID.BSC]: \"0xe912cd26c4a4cfffc175a297f1328ab23313a1a7\",\n    [exports.CHAIN_ID.FANTOM]: \"0xf437a1a98566872f734bd18addf4bb610d1f887b\",\n    [exports.CHAIN_ID.AVAX]: \"0xf437a1a98566872f734bd18addf4bb610d1f887b\",\n};\n\n\n/***/ }),\n\n/***/ 14131:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ERC20OrderRouter__factory = void 0;\nconst ethers_1 = __webpack_require__(14015);\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"contract IGelatoPineCore\",\n                name: \"_gelatoPineCore\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"caller\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"module\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"inputToken\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"witness\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"data\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes32\",\n                name: \"secret\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"DepositToken\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_secret\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"depositToken\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"gelatoPineCore\",\n        outputs: [\n            {\n                internalType: \"contract IGelatoPineCore\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\nclass ERC20OrderRouter__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.ERC20OrderRouter__factory = ERC20OrderRouter__factory;\nERC20OrderRouter__factory.abi = _abi;\n\n\n/***/ }),\n\n/***/ 83565:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ERC20__factory = void 0;\nconst ethers_1 = __webpack_require__(14015);\nconst _abi = [\n    {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_from\",\n                type: \"address\",\n            },\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"balance\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"fallback\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n];\nclass ERC20__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.ERC20__factory = ERC20__factory;\nERC20__factory.abi = _abi;\n\n\n/***/ }),\n\n/***/ 26103:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GelatoLimitOrders__factory = void 0;\nconst ethers_1 = __webpack_require__(14015);\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_caller\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"DepositETH\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"OrderCancelled\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_auxData\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_bought\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"OrderExecuted\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"ETH_ADDRESS\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_auxData\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"canExecuteOrder\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"cancelOrder\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"decodeOrder\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"secret\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"depositEth\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_secret\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"encodeEthOrder\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_secret\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"encodeTokenOrder\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ethDeposits\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_signature\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_auxData\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"executeOrder\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"existOrder\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"keyOf\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"vaultOfOrder\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"receive\",\n    },\n];\nclass GelatoLimitOrders__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.GelatoLimitOrders__factory = GelatoLimitOrders__factory;\nGelatoLimitOrders__factory.abi = _abi;\n\n\n/***/ }),\n\n/***/ 61478:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Multicall__factory = void 0;\nconst ethers_1 = __webpack_require__(14015);\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_factory\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_mainModule\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_imageHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_threshold\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_signers\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"RequiredConfig\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_signer\",\n                type: \"address\",\n            },\n        ],\n        name: \"RequiredSigner\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callBalanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callBlockNumber\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_i\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"callBlockhash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callChainId\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"id\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callCode\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"code\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callCodeHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"codeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callCodeSize\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"size\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callCoinbase\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callDifficulty\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callGasLeft\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callGasLimit\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callGasPrice\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callOrigin\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callTimestamp\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        name: \"lastSignerUpdate\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        name: \"lastWalletUpdate\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bool\",\n                        name: \"delegateCall\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"bool\",\n                        name: \"revertOnError\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"gasLimit\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"target\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"value\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"data\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct IModuleCalls.Transaction[]\",\n                name: \"_txs\",\n                type: \"tuple[]\",\n            },\n        ],\n        name: \"multiCall\",\n        outputs: [\n            {\n                internalType: \"bool[]\",\n                name: \"_successes\",\n                type: \"bool[]\",\n            },\n            {\n                internalType: \"bytes[]\",\n                name: \"_results\",\n                type: \"bytes[]\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_threshold\",\n                type: \"uint256\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"weight\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"signer\",\n                        type: \"address\",\n                    },\n                ],\n                internalType: \"struct RequireUtils.Member[]\",\n                name: \"_members\",\n                type: \"tuple[]\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_index\",\n                type: \"bool\",\n            },\n        ],\n        name: \"publishConfig\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_hash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_sizeMembers\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_signature\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_index\",\n                type: \"bool\",\n            },\n        ],\n        name: \"publishInitialSigners\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_nonce\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"requireMinNonce\",\n        outputs: [],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_expiration\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"requireNonExpired\",\n        outputs: [],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\nclass Multicall__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.Multicall__factory = Multicall__factory;\nMulticall__factory.abi = _abi;\n\n\n/***/ }),\n\n/***/ 16321:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Multicall__factory = exports.GelatoLimitOrders__factory = exports.ERC20OrderRouter__factory = exports.ERC20__factory = void 0;\nvar ERC20__factory_1 = __webpack_require__(83565);\nObject.defineProperty(exports, \"ERC20__factory\", ({ enumerable: true, get: function () { return ERC20__factory_1.ERC20__factory; } }));\nvar ERC20OrderRouter__factory_1 = __webpack_require__(14131);\nObject.defineProperty(exports, \"ERC20OrderRouter__factory\", ({ enumerable: true, get: function () { return ERC20OrderRouter__factory_1.ERC20OrderRouter__factory; } }));\nvar GelatoLimitOrders__factory_1 = __webpack_require__(26103);\nObject.defineProperty(exports, \"GelatoLimitOrders__factory\", ({ enumerable: true, get: function () { return GelatoLimitOrders__factory_1.GelatoLimitOrders__factory; } }));\nvar Multicall__factory_1 = __webpack_require__(61478);\nObject.defineProperty(exports, \"Multicall__factory\", ({ enumerable: true, get: function () { return Multicall__factory_1.Multicall__factory; } }));\n\n\n/***/ }),\n\n/***/ 24273:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.constants = exports.utils = exports.isEthereumChain = exports.GelatoStopLimitOrders = exports.isValidChainIdAndHandler = exports.GelatoLimitOrders = void 0;\nconst tslib_1 = __webpack_require__(5163);\nvar limit_orders_1 = __webpack_require__(27587);\nObject.defineProperty(exports, \"GelatoLimitOrders\", ({ enumerable: true, get: function () { return limit_orders_1.GelatoLimitOrders; } }));\nObject.defineProperty(exports, \"isValidChainIdAndHandler\", ({ enumerable: true, get: function () { return limit_orders_1.isValidChainIdAndHandler; } }));\nvar stoplimit_orders_1 = __webpack_require__(66798);\nObject.defineProperty(exports, \"GelatoStopLimitOrders\", ({ enumerable: true, get: function () { return stoplimit_orders_1.GelatoStopLimitOrders; } }));\nvar utils_1 = __webpack_require__(6090);\nObject.defineProperty(exports, \"isEthereumChain\", ({ enumerable: true, get: function () { return utils_1.isEthereumChain; } }));\n(0, tslib_1.__exportStar)(__webpack_require__(83593), exports);\nexports.utils = (0, tslib_1.__importStar)(__webpack_require__(6090));\nexports.constants = (0, tslib_1.__importStar)(__webpack_require__(87033));\n\n\n/***/ }),\n\n/***/ 27587:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GelatoLimitOrders = exports.isFlashbotsCompatibleChainId = exports.isValidChainIdAndHandler = void 0;\nconst tslib_1 = __webpack_require__(5163);\nconst ethers_1 = __webpack_require__(14015);\nconst abstract_provider_1 = __webpack_require__(35239);\nconst abstract_signer_1 = __webpack_require__(28612);\nconst constants_1 = __webpack_require__(87033);\nconst types_1 = __webpack_require__(16321);\nconst queries_1 = __webpack_require__(59200);\nconst utils_1 = __webpack_require__(6090);\nconst isValidChainIdAndHandler = (chainId, handler) => {\n    return constants_1.NETWORK_HANDLERS[chainId].includes(handler);\n};\nexports.isValidChainIdAndHandler = isValidChainIdAndHandler;\nconst isFlashbotsCompatibleChainId = (chainId) => {\n    return chainId == constants_1.CHAIN_ID.MAINNET || chainId == constants_1.CHAIN_ID.GOERLI;\n};\nexports.isFlashbotsCompatibleChainId = isFlashbotsCompatibleChainId;\nclass GelatoLimitOrders {\n    constructor(chainId, signerOrProvider, handler, isFlashbotsProtected = false) {\n        var _a;\n        if (handler && !(0, exports.isValidChainIdAndHandler)(chainId, handler)) {\n            throw new Error(\"Invalid chainId and handler\");\n        }\n        else if (isFlashbotsProtected &&\n            (handler || !(0, exports.isFlashbotsCompatibleChainId)(chainId))) {\n            throw new Error(\"Invalid chainId or handler for Flashbots bundle submission. handler must be undefined, and chainId either 1 (mainnet) or 5 (goerli)\");\n        }\n        this._chainId = chainId;\n        this._gelatoFeeBPS = constants_1.BPS_GELATO_FEE[chainId];\n        this._slippageBPS = constants_1.LIMIT_ORDER_SLIPPAGE[chainId];\n        this._subgraphUrl = constants_1.SUBGRAPH_URL[chainId];\n        this._signer = abstract_signer_1.Signer.isSigner(signerOrProvider)\n            ? signerOrProvider\n            : undefined;\n        this._provider = abstract_provider_1.Provider.isProvider(signerOrProvider)\n            ? signerOrProvider\n            : abstract_signer_1.Signer.isSigner(signerOrProvider)\n                ? signerOrProvider.provider\n                : undefined;\n        this._gelatoLimitOrders = this._signer\n            ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._signer)\n            : this._provider\n                ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], types_1.GelatoLimitOrders__factory.createInterface());\n        this._moduleAddress = isFlashbotsProtected\n            ? constants_1.GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS[this._chainId]\n            : constants_1.GELATO_LIMIT_ORDERS_MODULE_ADDRESS[this._chainId];\n        this._handler = handler;\n        this._handlerAddress = handler\n            ? (_a = constants_1.HANDLERS_ADDRESSES[this._chainId][handler]) === null || _a === void 0 ? void 0 : _a.toLowerCase()\n            : undefined;\n        this._isFlashbotsProtected = isFlashbotsProtected;\n        this._abiEncoder = new ethers_1.utils.AbiCoder();\n        this._erc20OrderRouter = this._signer\n            ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._signer)\n            : this._provider\n                ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], types_1.ERC20OrderRouter__factory.createInterface());\n    }\n    get gelatoFeeBPS() {\n        return this._gelatoFeeBPS;\n    }\n    get slippageBPS() {\n        return this._slippageBPS;\n    }\n    get chainId() {\n        return this._chainId;\n    }\n    get signer() {\n        return this._signer;\n    }\n    get provider() {\n        return this._provider;\n    }\n    get subgraphUrl() {\n        return this._subgraphUrl;\n    }\n    get handler() {\n        return this._handler;\n    }\n    get handlerAddress() {\n        return this._handlerAddress;\n    }\n    get moduleAddress() {\n        return this._moduleAddress;\n    }\n    get contract() {\n        return this._gelatoLimitOrders;\n    }\n    get erc20OrderRouter() {\n        return this._erc20OrderRouter;\n    }\n    get isFlashbotsProtected() {\n        return this._isFlashbotsProtected;\n    }\n    encodeLimitOrderSubmission(inputToken, outputToken, inputAmount, minReturn, owner, checkAllowance = true) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const { payload } = yield this.encodeLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, minReturn, owner, checkAllowance);\n            return payload;\n        });\n    }\n    encodeLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, minReturnToBeParsed, owner, checkAllowance = true) {\n        var _a;\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const randomSecret = ethers_1.utils.hexlify(ethers_1.utils.randomBytes(19)).replace(\"0x\", \"\");\n            // 0x67656c61746f6e6574776f726b = gelatonetwork in hex\n            const fullSecret = `0x67656c61746f6e6574776f726b${randomSecret}`;\n            const { privateKey: secret, address: witness } = new ethers_1.Wallet(fullSecret);\n            const { minReturn } = this.getFeeAndSlippageAdjustedMinReturn(minReturnToBeParsed);\n            const payload = yield this._encodeSubmitData(inputToken, outputToken, owner, witness, inputAmount, minReturn, secret, checkAllowance);\n            const encodedData = this._handlerAddress\n                ? this._abiEncoder.encode([\"address\", \"uint256\", \"address\"], [outputToken, minReturn, this._handlerAddress])\n                : this._abiEncoder.encode([\"address\", \"uint256\"], [outputToken, minReturn]);\n            return {\n                payload,\n                secret,\n                witness,\n                order: {\n                    id: this._getKey({\n                        module: this._moduleAddress,\n                        inputToken,\n                        owner,\n                        witness,\n                        data: encodedData,\n                    }),\n                    module: this._moduleAddress.toLowerCase(),\n                    data: encodedData,\n                    inputToken: inputToken.toLowerCase(),\n                    outputToken: outputToken.toLowerCase(),\n                    owner: owner.toLowerCase(),\n                    witness: witness.toLowerCase(),\n                    inputAmount: inputAmount.toString(),\n                    minReturn: minReturn.toString(),\n                    adjustedMinReturn: minReturnToBeParsed.toString(),\n                    inputData: payload.data.toString(),\n                    secret: secret.toLowerCase(),\n                    handler: (_a = this._handlerAddress) !== null && _a !== void 0 ? _a : null,\n                },\n            };\n        });\n    }\n    submitLimitOrder(inputToken, outputToken, inputAmount, minReturn, checkAllowance = true, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            const owner = yield this._signer.getAddress();\n            const txData = yield this.encodeLimitOrderSubmission(inputToken, outputToken, inputAmount, minReturn, owner, checkAllowance);\n            return this._signer.sendTransaction(Object.assign(Object.assign({}, overrides), { to: txData.to, data: txData.data, value: ethers_1.BigNumber.from(txData.value) }));\n        });\n    }\n    encodeLimitOrderCancellation(order, checkIsActiveOrder) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._gelatoLimitOrders)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!order.owner)\n                throw new Error(\"No owner\");\n            if (!order.module)\n                throw new Error(\"No module in order\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const data = this._gelatoLimitOrders.interface.encodeFunctionData(\"cancelOrder\", [order.module, order.inputToken, order.owner, order.witness, order.data]);\n            return {\n                data,\n                to: this._gelatoLimitOrders.address,\n                value: ethers_1.constants.Zero,\n            };\n        });\n    }\n    cancelLimitOrder(order, checkIsActiveOrder, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            if (!this._gelatoLimitOrders)\n                throw new Error(\"No gelato limit orders contract\");\n            let _order = order;\n            if (order.id) {\n                try {\n                    const subgraphOrder = yield Promise.race([\n                        this.getOrder(order.id),\n                        new Promise((resolve) => setTimeout(resolve, 5000)).then(() => {\n                            throw new Error(\"Timeout\");\n                        }),\n                    ]);\n                    if (subgraphOrder) {\n                        if (subgraphOrder.status === \"cancelled\") {\n                            throw new Error(`Order status is not open. Current order status: ${subgraphOrder.status}. Cancellation transaction hash: ${subgraphOrder.cancelledTxHash}`);\n                        }\n                        if (subgraphOrder.status === \"executed\") {\n                            throw new Error(`Order status is not open. Current order status: ${subgraphOrder.status}. Execution transaction hash: ${subgraphOrder.executedTxHash}`);\n                        }\n                        _order = Object.assign(Object.assign({}, order), subgraphOrder);\n                    }\n                    // eslint-disable-next-line no-empty\n                }\n                catch (error) { }\n            }\n            if (!_order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!_order.witness)\n                throw new Error(\"No witness in order\");\n            if (!_order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!_order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!_order.data)\n                throw new Error(\"No data in order\");\n            if (!_order.module)\n                throw new Error(\"No module in order\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(_order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const owner = yield this._signer.getAddress();\n            if (owner.toLowerCase() !== order.owner.toLowerCase())\n                throw new Error(\"Owner and signer mismatch\");\n            return this._gelatoLimitOrders.cancelOrder(_order.module, _order.inputToken, _order.owner, _order.witness, _order.data, overrides !== null && overrides !== void 0 ? overrides : {\n                gasLimit: (0, utils_1.isEthereumChain)(this._chainId) ? 600000 : 2000000,\n            });\n        });\n    }\n    approveTokenAmount(inputToken, amount, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            return overrides\n                ? types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount, overrides)\n                : types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount);\n        });\n    }\n    isActiveOrder(order) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._provider)\n                throw new Error(\"No provider\");\n            if (!this._gelatoLimitOrders)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.module)\n                throw new Error(\"No module in order\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.owner)\n                throw new Error(\"No owner in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.data)\n                throw new Error(\"No data in order\");\n            return this._gelatoLimitOrders.existOrder(order.module, order.inputToken, order.owner, order.witness, order.data);\n        });\n    }\n    getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(18));\n        if (invert) {\n            return ethers_1.BigNumber.from(inputValue)\n                .mul(factor)\n                .div(outputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputValue)\n                .mul(factor)\n                .div(inputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .toString();\n        }\n    }\n    getFeeAndSlippageAdjustedMinReturn(outputAmount, extraSlippageBPS) {\n        if (extraSlippageBPS) {\n            if (!Number.isInteger(extraSlippageBPS))\n                throw new Error(\"Extra Slippage BPS must an unsigned integer\");\n        }\n        const gelatoFee = ethers_1.BigNumber.from(outputAmount)\n            .mul(this._gelatoFeeBPS)\n            .div(10000)\n            .gte(1)\n            ? ethers_1.BigNumber.from(outputAmount).mul(this._gelatoFeeBPS).div(10000)\n            : ethers_1.BigNumber.from(1);\n        const slippageBPS = extraSlippageBPS\n            ? this._slippageBPS + extraSlippageBPS\n            : this._slippageBPS;\n        const slippage = ethers_1.BigNumber.from(outputAmount).mul(slippageBPS).div(10000);\n        const minReturn = ethers_1.BigNumber.from(outputAmount).sub(gelatoFee).sub(slippage);\n        return {\n            minReturn: minReturn.toString(),\n            slippage: slippage.toString(),\n            gelatoFee: gelatoFee.toString(),\n        };\n    }\n    getAdjustedMinReturn(minReturn, extraSlippageBPS) {\n        const gelatoFee = ethers_1.BigNumber.from(this._gelatoFeeBPS);\n        const slippage = extraSlippageBPS\n            ? ethers_1.BigNumber.from(this._slippageBPS + extraSlippageBPS)\n            : ethers_1.BigNumber.from(this._slippageBPS);\n        const fees = gelatoFee.add(slippage);\n        const adjustedMinReturn = ethers_1.BigNumber.from(minReturn)\n            .mul(10000)\n            .div(ethers_1.BigNumber.from(10000).sub(fees));\n        return adjustedMinReturn.toString();\n    }\n    getExecutionPrice(inputAmount, inputDecimals, outputAmount, outputDecimals, isInverted = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(isInverted ? outputDecimals : inputDecimals));\n        if (isInverted) {\n            return ethers_1.BigNumber.from(inputAmount)\n                .mul(factor)\n                .div(outputAmount)\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputAmount)\n                .mul(factor)\n                .div(inputAmount)\n                .toString();\n        }\n    }\n    getOrder(orderId) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const order = yield (0, queries_1.queryOrder)(orderId, this._chainId);\n            if (order) {\n                return Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) });\n            }\n            else {\n                return null;\n            }\n        });\n    }\n    getOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getOpenOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryOpenOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getPastOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryPastOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getExecutedOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryExecutedOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getCancelledOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryCancelledOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    _getKey(order) {\n        return ethers_1.utils.keccak256(this._abiEncoder.encode([\"address\", \"address\", \"address\", \"address\", \"bytes\"], [order.module, order.inputToken, order.owner, order.witness, order.data]));\n    }\n    _encodeSubmitData(inputToken, outputToken, owner, witness, amount, minReturn, secret, checkAllowance) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._provider)\n                throw new Error(\"No provider\");\n            if (inputToken.toLowerCase() === outputToken.toLowerCase())\n                throw new Error(\"Input token and output token can not be equal\");\n            const encodedData = this._handlerAddress\n                ? this._abiEncoder.encode([\"address\", \"uint256\", \"address\"], [outputToken, minReturn, this._handlerAddress])\n                : this._abiEncoder.encode([\"address\", \"uint256\"], [outputToken, minReturn]);\n            let data, value, to;\n            if ((0, utils_1.isNetworkGasToken)(inputToken)) {\n                const encodedEthOrder = yield this._gelatoLimitOrders.encodeEthOrder(this._moduleAddress, constants_1.ETH_ADDRESS, // we also use ETH_ADDRESS if it's MATIC\n                owner, witness, encodedData, secret);\n                data = this._gelatoLimitOrders.interface.encodeFunctionData(\"depositEth\", [encodedEthOrder]);\n                value = amount;\n                to = this._gelatoLimitOrders.address;\n            }\n            else {\n                if (checkAllowance) {\n                    const allowance = yield types_1.ERC20__factory.connect(inputToken, this._provider).allowance(owner, this._erc20OrderRouter.address);\n                    if (allowance.lt(amount))\n                        throw new Error(\"Insufficient token allowance for placing order\");\n                }\n                data = this._erc20OrderRouter.interface.encodeFunctionData(\"depositToken\", [\n                    amount,\n                    this._moduleAddress,\n                    inputToken,\n                    owner,\n                    witness,\n                    encodedData,\n                    secret,\n                ]);\n                value = ethers_1.constants.Zero;\n                to = this._erc20OrderRouter.address;\n            }\n            return { data, value, to };\n        });\n    }\n}\nexports.GelatoLimitOrders = GelatoLimitOrders;\n\n\n/***/ }),\n\n/***/ 11660:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GelatoBase = exports.isETHOrWETH = exports.isFlashbotsCompatibleChainId = exports.isValidChainIdAndHandler = void 0;\nconst tslib_1 = __webpack_require__(5163);\nconst ethers_1 = __webpack_require__(14015);\nconst abstract_provider_1 = __webpack_require__(35239);\nconst abstract_signer_1 = __webpack_require__(28612);\nconst constants_1 = __webpack_require__(87033);\nconst types_1 = __webpack_require__(16321);\nconst utils_1 = __webpack_require__(6090);\nconst isValidChainIdAndHandler = (chainId, handler) => {\n    return constants_1.NETWORK_HANDLERS[chainId].includes(handler);\n};\nexports.isValidChainIdAndHandler = isValidChainIdAndHandler;\nconst isFlashbotsCompatibleChainId = (chainId) => {\n    return chainId == constants_1.CHAIN_ID.MAINNET || chainId == constants_1.CHAIN_ID.GOERLI;\n};\nexports.isFlashbotsCompatibleChainId = isFlashbotsCompatibleChainId;\nconst isETHOrWETH = (tokenAddress, chainID) => {\n    const WETH_ADDRESS = constants_1.NATIVE_WRAPPED_TOKEN_ADDRESS[chainID];\n    return (tokenAddress.toLowerCase() === constants_1.ETH_ADDRESS.toLowerCase() ||\n        tokenAddress.toLowerCase() === WETH_ADDRESS.toLowerCase());\n};\nexports.isETHOrWETH = isETHOrWETH;\nclass GelatoBase {\n    constructor(chainId, moduleAddress, signerOrProvider, handler, handlerAddress) {\n        if (handler && !(0, exports.isValidChainIdAndHandler)(chainId, handler)) {\n            throw new Error(\"Invalid chainId and handler\");\n        }\n        this._chainId = chainId;\n        this._gelatoFeeBPS = !(0, utils_1.isEthereumChain)(chainId)\n            ? constants_1.BPS_GELATO_FEE[chainId]\n            : 0;\n        this._slippageBPS = constants_1.STOP_LIMIT_SLIPPAGE_BPS[chainId];\n        this._subgraphUrl = constants_1.SUBGRAPH_URL[chainId];\n        this._signer = abstract_signer_1.Signer.isSigner(signerOrProvider)\n            ? signerOrProvider\n            : undefined;\n        this._provider = abstract_provider_1.Provider.isProvider(signerOrProvider)\n            ? signerOrProvider\n            : abstract_signer_1.Signer.isSigner(signerOrProvider)\n                ? signerOrProvider.provider\n                : undefined;\n        this._gelatoCore = this._signer\n            ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._signer)\n            : this._provider\n                ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], types_1.GelatoLimitOrders__factory.createInterface());\n        this._abiEncoder = new ethers_1.utils.AbiCoder();\n        this._erc20OrderRouter = this._signer\n            ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._signer)\n            : this._provider\n                ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], types_1.ERC20OrderRouter__factory.createInterface());\n        this._handler = handler;\n        this._handlerAddress = handlerAddress;\n        this._moduleAddress = moduleAddress;\n    }\n    get gelatoFeeBPS() {\n        return this._gelatoFeeBPS;\n    }\n    get slippageBPS() {\n        return this._slippageBPS;\n    }\n    get chainId() {\n        return this._chainId;\n    }\n    get signer() {\n        return this._signer;\n    }\n    get provider() {\n        return this._provider;\n    }\n    get subgraphUrl() {\n        return this._subgraphUrl;\n    }\n    get handler() {\n        return this._handler;\n    }\n    get handlerAddress() {\n        return this._handlerAddress;\n    }\n    get moduleAddress() {\n        return this._moduleAddress;\n    }\n    get contract() {\n        return this._gelatoCore;\n    }\n    get erc20OrderRouter() {\n        return this._erc20OrderRouter;\n    }\n    get abiEncoder() {\n        return this._abiEncoder;\n    }\n    encodeLimitOrderCancellation(order, checkIsActiveOrder) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._gelatoCore)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!order.owner)\n                throw new Error(\"No owner\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const data = this._gelatoCore.interface.encodeFunctionData(\"cancelOrder\", [\n                this._moduleAddress,\n                order.inputToken,\n                order.owner,\n                order.witness,\n                order.data,\n            ]);\n            return {\n                data,\n                to: this._gelatoCore.address,\n                value: ethers_1.constants.Zero,\n            };\n        });\n    }\n    cancelStopLimitOrder(order, checkIsActiveOrder, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            if (!this._gelatoCore)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!order.data)\n                throw new Error(\"No data in order\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const owner = yield this._signer.getAddress();\n            if (owner.toLowerCase() !== order.owner.toLowerCase())\n                throw new Error(\"Owner and signer mismatch\");\n            return this._gelatoCore.cancelOrder(this._moduleAddress, order.inputToken, order.owner, order.witness, order.data, overrides !== null && overrides !== void 0 ? overrides : {\n                gasLimit: (0, utils_1.isEthereumChain)(this._chainId) ? 500000 : 1500000,\n            });\n        });\n    }\n    approveTokenAmount(inputToken, amount, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            return overrides\n                ? types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount, overrides)\n                : types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount);\n        });\n    }\n    isActiveOrder(order) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._provider)\n                throw new Error(\"No provider\");\n            if (!this._gelatoCore)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.module)\n                throw new Error(\"No module in order\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.owner)\n                throw new Error(\"No owner in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.data)\n                throw new Error(\"No data in order\");\n            return this._gelatoCore.existOrder(order.module, order.inputToken, order.owner, order.witness, order.data);\n        });\n    }\n    getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(18));\n        if (invert) {\n            return ethers_1.BigNumber.from(inputValue)\n                .mul(factor)\n                .div(outputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputValue)\n                .mul(factor)\n                .div(inputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .toString();\n        }\n    }\n    getFeeAndSlippageAdjustedMinReturn(outputAmount, extraSlippageBPS) {\n        if (extraSlippageBPS) {\n            if (!Number.isInteger(extraSlippageBPS))\n                throw new Error(\"Extra Slippage BPS must an unsigned integer\");\n        }\n        const gelatoFee = (0, utils_1.isEthereumChain)(this._chainId)\n            ? 0\n            : ethers_1.BigNumber.from(outputAmount).mul(this._gelatoFeeBPS).div(10000).gte(1)\n                ? ethers_1.BigNumber.from(outputAmount).mul(this._gelatoFeeBPS).div(10000)\n                : ethers_1.BigNumber.from(1);\n        const slippageBPS = extraSlippageBPS ? extraSlippageBPS : this._slippageBPS;\n        const slippage = ethers_1.BigNumber.from(outputAmount).mul(slippageBPS).div(10000);\n        const minReturn = ethers_1.BigNumber.from(outputAmount).sub(gelatoFee).sub(slippage);\n        return {\n            minReturn: minReturn.toString(),\n            slippage: slippage.toString(),\n            gelatoFee: gelatoFee.toString(),\n        };\n    }\n    getAdjustedMinReturn(minReturn, extraSlippageBPS) {\n        if ((0, utils_1.isEthereumChain)(this._chainId))\n            throw new Error(\"Method not available for current chain.\");\n        const gelatoFee = ethers_1.BigNumber.from(this._gelatoFeeBPS);\n        const slippage = extraSlippageBPS\n            ? ethers_1.BigNumber.from(extraSlippageBPS)\n            : ethers_1.BigNumber.from(this._slippageBPS);\n        const fees = gelatoFee.add(slippage);\n        const adjustedMinReturn = ethers_1.BigNumber.from(minReturn)\n            .mul(10000)\n            .div(ethers_1.BigNumber.from(10000).sub(fees));\n        return adjustedMinReturn.toString();\n    }\n    getExecutionPrice(inputAmount, inputDecimals, outputAmount, outputDecimals, isInverted = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(isInverted ? outputDecimals : inputDecimals));\n        if (isInverted) {\n            return ethers_1.BigNumber.from(inputAmount)\n                .mul(factor)\n                .div(outputAmount)\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputAmount)\n                .mul(factor)\n                .div(inputAmount)\n                .toString();\n        }\n    }\n    _getKey(order) {\n        return ethers_1.utils.keccak256(this._abiEncoder.encode([\"address\", \"address\", \"address\", \"address\", \"bytes\"], [order.module, order.inputToken, order.owner, order.witness, order.data]));\n    }\n    _encodeSubmitData(inputToken, outputToken, owner, witness, amount, maxReturn, minReturn, secret, checkAllowance) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this.provider)\n                throw new Error(\"No provider\");\n            if (!this.handlerAddress)\n                throw new Error(\"No handlerAddress\");\n            if (inputToken.toLowerCase() === outputToken.toLowerCase())\n                throw new Error(\"Input token and output token can not be equal\");\n            const encodedData = this.abiEncoder.encode([\"address\", \"uint256\", \"address\", \"uint256\"], [outputToken, minReturn, this.handlerAddress, maxReturn]);\n            let data, value, to;\n            if ((0, utils_1.isNetworkGasToken)(inputToken)) {\n                const encodedEthOrder = yield this.contract.encodeEthOrder(this.moduleAddress, constants_1.ETH_ADDRESS, // we also use ETH_ADDRESS if it's MATIC\n                owner, witness, encodedData, secret);\n                data = this.contract.interface.encodeFunctionData(\"depositEth\", [\n                    encodedEthOrder,\n                ]);\n                value = amount;\n                to = this.contract.address;\n            }\n            else {\n                if (checkAllowance) {\n                    const allowance = yield types_1.ERC20__factory.connect(inputToken, this.provider).allowance(owner, this.erc20OrderRouter.address);\n                    if (allowance.lt(amount))\n                        throw new Error(\"Insufficient token allowance for placing order\");\n                }\n                data = this.erc20OrderRouter.interface.encodeFunctionData(\"depositToken\", [\n                    amount,\n                    this.moduleAddress,\n                    inputToken,\n                    owner,\n                    witness,\n                    encodedData,\n                    secret,\n                ]);\n                value = ethers_1.constants.Zero;\n                to = this.erc20OrderRouter.address;\n            }\n            return { data, value, to };\n        });\n    }\n}\nexports.GelatoBase = GelatoBase;\n\n\n/***/ }),\n\n/***/ 66798:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GelatoStopLimitOrders = void 0;\nconst tslib_1 = __webpack_require__(5163);\nconst ethers_1 = __webpack_require__(14015);\nconst constants_1 = __webpack_require__(87033);\nconst core_1 = __webpack_require__(11660);\nconst stoplimit_1 = __webpack_require__(54967);\nclass GelatoStopLimitOrders extends core_1.GelatoBase {\n    constructor(chainId, signerOrProvider, handler) {\n        var _a;\n        if (handler && !(0, core_1.isValidChainIdAndHandler)(chainId, handler)) {\n            throw new Error(\"Invalid chainId and handler\");\n        }\n        const sotplossHandlers = constants_1.NETWORK_STOP_LIMIT_HANDLERS[chainId];\n        if (!handler) {\n            throw new Error(\"No Handler defined\");\n        }\n        if (handler && !sotplossHandlers.includes(handler)) {\n            throw new Error(\"Handler not supported\");\n        }\n        const moduleAddress = constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId];\n        if (!moduleAddress)\n            throw new Error(\"Invalid chainId and handler\");\n        const handlerAddress = (_a = constants_1.HANDLERS_ADDRESSES[chainId][handler]) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n        super(chainId, moduleAddress, signerOrProvider, handler, handlerAddress);\n    }\n    submitStopLimitOrder(inputToken, outputToken, inputAmount, maxReturn, checkAllowance = true, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this.signer)\n                throw new Error(\"No signer\");\n            if (!maxReturn)\n                throw new Error(\"No StopLimit defined\");\n            const owner = yield this.signer.getAddress();\n            const txData = yield this.encodeStopLimitOrderSubmission(inputToken, outputToken, inputAmount, maxReturn, owner, checkAllowance);\n            return this.signer.sendTransaction(Object.assign(Object.assign({}, overrides), { to: txData.to, data: txData.data, value: ethers_1.BigNumber.from(txData.value) }));\n        });\n    }\n    encodeStopLimitOrderSubmission(inputToken, outputToken, inputAmount, maxReturn, owner, checkAllowance = true) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const { payload } = yield this.encodeStopLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, maxReturn, owner, checkAllowance);\n            return payload;\n        });\n    }\n    encodeStopLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, maxReturnToBeParsed, owner, checkAllowance = true) {\n        var _a;\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!maxReturnToBeParsed)\n                throw new Error(\"No StopLimit defined\");\n            if (!this.handlerAddress)\n                throw new Error(\"No handlerAddress\");\n            const randomSecret = ethers_1.utils.hexlify(ethers_1.utils.randomBytes(19)).replace(\"0x\", \"\");\n            // 0x67656c61746f6e6574776f726b = gelatonetwork in hex\n            const fullSecret = `0x67656c61746f6e6574776f726b${randomSecret}`;\n            const { privateKey: secret, address: witness } = new ethers_1.Wallet(fullSecret);\n            const { minReturn } = this.getFeeAndSlippageAdjustedMinReturn(maxReturnToBeParsed);\n            const payload = yield this._encodeSubmitData(inputToken, outputToken, owner, witness, inputAmount, maxReturnToBeParsed, minReturn, secret, checkAllowance);\n            const encodedData = this.abiEncoder.encode([\"address\", \"uint256\", \"address\", \"uint256\"], [outputToken, minReturn, this.handlerAddress, maxReturnToBeParsed]);\n            return {\n                payload,\n                secret,\n                witness,\n                order: {\n                    id: this._getKey({\n                        module: this.moduleAddress,\n                        inputToken,\n                        owner,\n                        witness,\n                        data: encodedData,\n                    }),\n                    module: this.moduleAddress.toLowerCase(),\n                    data: encodedData,\n                    inputToken: inputToken.toLowerCase(),\n                    outputToken: outputToken.toLowerCase(),\n                    owner: owner.toLowerCase(),\n                    witness: witness.toLowerCase(),\n                    inputAmount: inputAmount.toString(),\n                    minReturn: minReturn.toString(),\n                    maxReturn: maxReturnToBeParsed.toString(),\n                    adjustedMinReturn: maxReturnToBeParsed.toString(),\n                    inputData: payload.data.toString(),\n                    secret: secret.toLowerCase(),\n                    handler: (_a = this.handlerAddress) !== null && _a !== void 0 ? _a : null,\n                },\n            };\n        });\n    }\n    getOpenStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getExecutedStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitExecutedOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getCancelledStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitCancelledOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getPastStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryPastOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n}\nexports.GelatoStopLimitOrders = GelatoStopLimitOrders;\n\n\n/***/ }),\n\n/***/ 83593:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n/***/ }),\n\n/***/ 6090:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isEthereumChain = exports.isTransactionCostDependentChain = exports.isNetworkGasToken = exports.queries = void 0;\nconst tslib_1 = __webpack_require__(5163);\nconst constants_1 = __webpack_require__(87033);\nexports.queries = (0, tslib_1.__importStar)(__webpack_require__(86619));\nconst isNetworkGasToken = (token) => {\n    if (token.toLowerCase() === constants_1.ETH_ADDRESS.toLowerCase()) {\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nexports.isNetworkGasToken = isNetworkGasToken;\nconst isTransactionCostDependentChain = (chainId) => {\n    switch (chainId) {\n        case 1:\n            return true;\n        case 3:\n            return true;\n        case 5:\n            return true;\n        case 56:\n            return true;\n        case 250:\n            return true;\n        case 43114:\n            return true;\n        default:\n            return false;\n    }\n};\nexports.isTransactionCostDependentChain = isTransactionCostDependentChain;\nconst isEthereumChain = (chainId) => {\n    switch (chainId) {\n        case 1:\n            return true;\n        case 3:\n            return true;\n        case 5:\n            return true;\n        default:\n            return false;\n    }\n};\nexports.isEthereumChain = isEthereumChain;\n\n\n/***/ }),\n\n/***/ 86619:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER = exports.GET_ALL_CANCELLED_ORDERS_BY_OWNER = exports.GET_ALL_EXECUTED_ORDERS_BY_OWNER = exports.GET_ALL_PAST_ORDERS_BY_OWNER = exports.GET_ALL_OPEN_ORDERS_BY_OWNER = exports.GET_ALL_ORDERS_BY_OWNER = exports.GET_ORDER_BY_ID = void 0;\nconst graphql_request_1 = __webpack_require__(40604);\nexports.GET_ORDER_BY_ID = (0, graphql_request_1.gql) `\n  query getOrdersByOwner($id: String) {\n    orders(where: { id: $id }) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_OPEN_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getOpenOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status: open }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_PAST_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getPastOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status_not: open }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_EXECUTED_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getExecutedOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status: executed }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_CANCELLED_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getCancelledOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status: cancelled }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getOrdersByOwner($owner: String, $module: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, module: $module }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      maxReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\n\n\n/***/ }),\n\n/***/ 59200:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.queryCancelledOrders = exports.queryExecutedOrders = exports.queryPastOrders = exports.queryOpenOrders = exports.queryOrders = exports.queryOrder = void 0;\nconst tslib_1 = __webpack_require__(5163);\nconst graphql_request_1 = __webpack_require__(40604);\nconst constants_1 = __webpack_require__(87033);\nconst constants_2 = __webpack_require__(86619);\nconst stopLimitModule = (chainId) => constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase();\nconst queryOrder = (orderId, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    var _a;\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ORDER_BY_ID, {\n                id: orderId.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ORDER_BY_ID, {\n                id: orderId.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return (_a = _getUniqueOrdersWithExpiry(allOrders, chainId).pop()) !== null && _a !== void 0 ? _a : null;\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for all orders\");\n    }\n});\nexports.queryOrder = queryOrder;\nconst queryOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId);\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for all orders\");\n    }\n});\nexports.queryOrders = queryOrders;\nconst queryOpenOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status === \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for open orders\");\n    }\n});\nexports.queryOpenOrders = queryOpenOrders;\nconst queryPastOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status !== \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for past orders\");\n    }\n});\nexports.queryPastOrders = queryPastOrders;\nconst queryExecutedOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status === \"executed\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for executed orders\");\n    }\n});\nexports.queryExecutedOrders = queryExecutedOrders;\nconst queryCancelledOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status === \"cancelled\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for cancelled orders\");\n    }\n});\nexports.queryCancelledOrders = queryCancelledOrders;\nconst _getUniqueOrdersWithExpiry = (allOrders, chainId) => \n// create Map and asign order id to order (key:value) to avoid having duplicated orders form multiple subgraphs\n[...new Map(allOrders.map((order) => [order.id, order])).values()]\n    // sort by `updatedAt` asc so that the most recent one will be used\n    .sort((a, b) => parseFloat(a.updatedAt) - parseFloat(b.updatedAt))\n    // filter out stop limit module\n    .filter((order) => order.module !== stopLimitModule(chainId))\n    // add expiry to order obj\n    .map((order) => {\n    const isExpired = Date.now() >\n        (parseInt(order.createdAt) + constants_1.MAX_LIFETIME_IN_SECONDS) * 1000;\n    return Object.assign(Object.assign({}, order), { isExpired });\n});\n\n\n/***/ }),\n\n/***/ 54967:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports._getUniqueOrdersWithExpiry = exports.queryPastOrders = exports.queryStopLimitCancelledOrders = exports.queryStopLimitExecutedOrders = exports.queryOpenStopLimitOrders = exports.queryStopLimitOrders = void 0;\nconst tslib_1 = __webpack_require__(5163);\nconst graphql_request_1 = __webpack_require__(40604);\nconst constants_1 = __webpack_require__(87033);\nconst constants_2 = __webpack_require__(86619);\nconst queryStopLimitOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders);\n    }\n    catch (error) {\n        console.error(error);\n        throw new Error(\"Could not query subgraph for all orders\");\n    }\n});\nexports.queryStopLimitOrders = queryStopLimitOrders;\nconst queryOpenStopLimitOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status === \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for open orders\");\n    }\n});\nexports.queryOpenStopLimitOrders = queryOpenStopLimitOrders;\nconst queryStopLimitExecutedOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status === \"executed\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for executed orders\");\n    }\n});\nexports.queryStopLimitExecutedOrders = queryStopLimitExecutedOrders;\nconst queryStopLimitCancelledOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status === \"cancelled\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for cancelled orders\");\n    }\n});\nexports.queryStopLimitCancelledOrders = queryStopLimitCancelledOrders;\nconst queryPastOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status !== \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for past orders\");\n    }\n});\nexports.queryPastOrders = queryPastOrders;\nconst _getUniqueOrdersWithExpiry = (allOrders) => [...new Map(allOrders.map((order) => [order.id, order])).values()]\n    // sort by `updatedAt` asc so that the most recent one will be used\n    .sort((a, b) => parseFloat(a.updatedAt) - parseFloat(b.updatedAt))\n    // add expiry to order obj\n    .map((order) => {\n    const isExpired = Date.now() >\n        (parseInt(order.createdAt) + constants_1.MAX_LIFETIME_IN_SECONDS) * 1000;\n    return Object.assign(Object.assign({}, order), { isExpired });\n});\nexports._getUniqueOrdersWithExpiry = _getUniqueOrdersWithExpiry;\n\n\n/***/ }),\n\n/***/ 77699:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar extract_files_1 = __webpack_require__(39384);\nvar form_data_1 = __importDefault(__webpack_require__(61688));\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nvar isExtractableFileEnhanced = function (value) {\n    return extract_files_1.isExtractableFile(value) ||\n        (value !== null && typeof value === 'object' && typeof value.pipe === 'function');\n};\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nfunction createRequestBody(query, variables, operationName) {\n    var _a = extract_files_1.extractFiles({ query: query, variables: variables, operationName: operationName }, '', isExtractableFileEnhanced), clone = _a.clone, files = _a.files;\n    if (files.size === 0) {\n        if (!Array.isArray(query)) {\n            return JSON.stringify(clone);\n        }\n        if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n            throw new Error('Cannot create request body with given variable type, array expected');\n        }\n        // Batch support\n        var payload = query.reduce(function (accu, currentQuery, index) {\n            accu.push({ query: currentQuery, variables: variables ? variables[index] : undefined });\n            return accu;\n        }, []);\n        return JSON.stringify(payload);\n    }\n    var Form = typeof FormData === 'undefined' ? form_data_1.default : FormData;\n    var form = new Form();\n    form.append('operations', JSON.stringify(clone));\n    var map = {};\n    var i = 0;\n    files.forEach(function (paths) {\n        map[++i] = paths;\n    });\n    form.append('map', JSON.stringify(map));\n    i = 0;\n    files.forEach(function (paths, file) {\n        form.append(\"\" + ++i, file);\n    });\n    return form;\n}\nexports[\"default\"] = createRequestBody;\n//# sourceMappingURL=createRequestBody.js.map\n\n/***/ }),\n\n/***/ 40604:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.gql = exports.batchRequests = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(__webpack_require__(96279)), CrossFetch = cross_fetch_1;\nvar printer_1 = __webpack_require__(90504);\nvar createRequestBody_1 = __importDefault(__webpack_require__(77699));\nvar types_1 = __webpack_require__(710);\nObject.defineProperty(exports, \"ClientError\", ({ enumerable: true, get: function () { return types_1.ClientError; } }));\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n    var oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== 'undefined' && headers instanceof Headers) ||\n            headers instanceof CrossFetch.Headers) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (_a) {\n                var name = _a[0], value = _a[1];\n                oHeaders[name] = value;\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n *\n * @param {string} str GraphQL query\n * @returns {string} Cleaned query\n */\nvar queryCleanner = function (str) { return str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim(); };\n/**\n * Create query string for GraphQL request\n *\n * @param {object} param0 -\n *\n * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request\n * @param {string|undefined} param0.operationName the GraphQL operation name\n * @param {any|any[]} param0.variables the GraphQL variables to use\n */\nvar buildGetQueryParams = function (_a) {\n    var query = _a.query, variables = _a.variables, operationName = _a.operationName;\n    if (!Array.isArray(query)) {\n        var search = [\"query=\" + encodeURIComponent(queryCleanner(query))];\n        if (variables) {\n            search.push(\"variables=\" + encodeURIComponent(JSON.stringify(variables)));\n        }\n        if (operationName) {\n            search.push(\"operationName=\" + encodeURIComponent(operationName));\n        }\n        return search.join('&');\n    }\n    if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n        throw new Error('Cannot create query with given variable type, array expected');\n    }\n    // Batch support\n    var payload = query.reduce(function (accu, currentQuery, index) {\n        accu.push({\n            query: queryCleanner(currentQuery),\n            variables: variables ? JSON.stringify(variables[index]) : undefined,\n        });\n        return accu;\n    }, []);\n    return \"query=\" + encodeURIComponent(JSON.stringify(payload));\n};\n/**\n * Fetch data using POST method\n */\nvar post = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var body;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    body = createRequestBody_1.default(query, variables, operationName);\n                    return [4 /*yield*/, fetch(url, __assign({ method: 'POST', headers: __assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), headers), body: body }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * Fetch data using GET method\n */\nvar get = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var queryParams;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    queryParams = buildGetQueryParams({\n                        query: query,\n                        variables: variables,\n                        operationName: operationName,\n                    });\n                    return [4 /*yield*/, fetch(url + \"?\" + queryParams, __assign({ method: 'GET', headers: headers }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n        var _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n        var url = this.url;\n        return makeRequest({\n            url: url,\n            query: query,\n            variables: variables,\n            headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n            operationName: undefined,\n            fetch: fetch,\n            method: method,\n            fetchOptions: fetchOptions,\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, fetch, _c, method, fetchOptions, url, _d, query, operationName, data;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n                        url = this.url;\n                        _d = resolveRequestDocument(document), query = _d.query, operationName = _d.operationName;\n                        return [4 /*yield*/, makeRequest({\n                                url: url,\n                                query: query,\n                                variables: variables,\n                                headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n                                operationName: operationName,\n                                fetch: fetch,\n                                method: method,\n                                fetchOptions: fetchOptions,\n                            })];\n                    case 1:\n                        data = (_e.sent()).data;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.batchRequests = function (documents, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, fetch, _c, method, fetchOptions, url, queries, variables, data;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n                        url = this.url;\n                        queries = documents.map(function (_a) {\n                            var document = _a.document;\n                            return resolveRequestDocument(document).query;\n                        });\n                        variables = documents.map(function (_a) {\n                            var variables = _a.variables;\n                            return variables;\n                        });\n                        return [4 /*yield*/, makeRequest({\n                                url: url,\n                                query: queries,\n                                variables: variables,\n                                headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n                                operationName: undefined,\n                                fetch: fetch,\n                                method: method,\n                                fetchOptions: fetchOptions,\n                            })];\n                    case 1:\n                        data = (_d.sent()).data;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var _a;\n        var headers = this.options.headers;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n    };\n    /**\n     * Change the client endpoint. All subsequent requests will send to this endpoint.\n     */\n    GraphQLClient.prototype.setEndpoint = function (value) {\n        this.url = value;\n        return this;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\nfunction makeRequest(_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, headers = _a.headers, operationName = _a.operationName, fetch = _a.fetch, _b = _a.method, method = _b === void 0 ? 'POST' : _b, fetchOptions = _a.fetchOptions;\n    return __awaiter(this, void 0, void 0, function () {\n        var fetcher, isBathchingQuery, response, result, successfullyReceivedData, headers_1, status_1, errorResult;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    fetcher = method.toUpperCase() === 'POST' ? post : get;\n                    isBathchingQuery = Array.isArray(query);\n                    return [4 /*yield*/, fetcher({\n                            url: url,\n                            query: query,\n                            variables: variables,\n                            operationName: operationName,\n                            headers: headers,\n                            fetch: fetch,\n                            fetchOptions: fetchOptions,\n                        })];\n                case 1:\n                    response = _c.sent();\n                    return [4 /*yield*/, getResult(response)];\n                case 2:\n                    result = _c.sent();\n                    successfullyReceivedData = isBathchingQuery && Array.isArray(result) ? !result.some(function (_a) {\n                        var data = _a.data;\n                        return !data;\n                    }) : !!result.data;\n                    if (response.ok && !result.errors && successfullyReceivedData) {\n                        headers_1 = response.headers, status_1 = response.status;\n                        return [2 /*return*/, __assign(__assign({}, (isBathchingQuery ? { data: result } : result)), { headers: headers_1, status: status_1 })];\n                    }\n                    else {\n                        errorResult = typeof result === 'string' ? { error: result } : result;\n                        throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status, headers: response.headers }), { query: query, variables: variables });\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * todo\n */\nfunction rawRequest(url, query, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables, requestHeaders)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(document, variables, requestHeaders)];\n        });\n    });\n}\nexports.request = request;\n/**\n * Send a batch of GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nfunction batchRequests(url, documents, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.batchRequests(documents, requestHeaders)];\n        });\n    });\n}\nexports.batchRequests = batchRequests;\nexports[\"default\"] = request;\n/**\n * todo\n */\nfunction getResult(response) {\n    var contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.startsWith('application/json')) {\n        return response.json();\n    }\n    else {\n        return response.text();\n    }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n    var _a;\n    if (typeof document === 'string')\n        return { query: document };\n    var operationName = undefined;\n    var operationDefinitions = document.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; });\n    if (operationDefinitions.length === 1) {\n        operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    return { query: printer_1.print(document), operationName: operationName };\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    return chunks.reduce(function (accumulator, chunk, index) { return \"\" + accumulator + chunk + (index in variables ? variables[index] : ''); }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n    var o = {};\n    headers.forEach(function (v, k) {\n        o[k] = v;\n    });\n    return o;\n}\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 710:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ClientError = void 0;\nvar ClientError = /** @class */ (function (_super) {\n    __extends(ClientError, _super);\n    function ClientError(response, request) {\n        var _this = this;\n        var message = ClientError.extractMessage(response) + \": \" + JSON.stringify({\n            response: response,\n            request: request,\n        });\n        _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, ClientError.prototype);\n        _this.response = response;\n        _this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ClientError);\n        }\n        return _this;\n    }\n    ClientError.extractMessage = function (response) {\n        try {\n            return response.errors[0].message;\n        }\n        catch (e) {\n            return \"GraphQL Error (Code: \" + response.status + \")\";\n        }\n    };\n    return ClientError;\n}(Error));\nexports.ClientError = ClientError;\n//# sourceMappingURL=types.js.map\n\n/***/ }),\n\n/***/ 90504:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"print\": function() { return /* binding */ print; }\n});\n\n;// CONCATENATED MODULE: ../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\n/* harmony default export */ var jsutils_nodejsCustomInspectSymbol = (nodejsCustomInspectSymbol);\n\n;// CONCATENATED MODULE: ../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/inspect.mjs\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\n\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(jsutils_nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n\n;// CONCATENATED MODULE: ../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/invariant.mjs\nfunction invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n\n;// CONCATENATED MODULE: ../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/defineInspect.mjs\n\n\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nfunction defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (jsutils_nodejsCustomInspectSymbol) {\n    classObject.prototype[jsutils_nodejsCustomInspectSymbol] = fn;\n  }\n}\n\n;// CONCATENATED MODULE: ../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/ast.mjs\n\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nvar Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nvar Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n\n;// CONCATENATED MODULE: ../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/visitor.mjs\n\n\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nvar QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nvar BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n\n;// CONCATENATED MODULE: ../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/blockString.mjs\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nfunction dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nfunction getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nfunction printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n\n;// CONCATENATED MODULE: ../../node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/printer.mjs\n\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nfunction print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","exports","Object","defineProperty","value","GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS","GENERIC_GAS_LIMIT_ORDER_EXECUTION","NATIVE_WRAPPED_TOKEN_ADDRESS","NATIVE_TOKEN_NAME","NATIVE_WRAPPED_TOKEN_TICKER","NATIVE_TOKEN_TICKER","GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER","GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS","GELATO_LIMIT_ORDERS_MODULE_ADDRESS","GELATO_LIMIT_ORDERS_ADDRESS","SUBGRAPH_URL","OLD_SUBGRAPH_URL","NETWORK_STOP_LIMIT_HANDLERS","NETWORK_HANDLERS","NETWORK_NAME","HANDLERS_ADDRESSES","LIMIT_ORDER_SLIPPAGE","STOP_LIMIT_SLIPPAGE_BPS","BPS_GELATO_FEE","CHAIN_ID","MAX_LIFETIME_IN_SECONDS","SLIPPAGE_BPS","ETH_ADDRESS","MAINNET","ROPSTEN","GOERLI","BSC","MATIC","FANTOM","AVAX","__webpack_require__","ERC20OrderRouter__factory","ethers_1","_abi","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","createInterface","utils","Interface","connect","address","signerOrProvider","Contract","abi","ERC20__factory","constant","payable","GelatoLimitOrders__factory","Multicall__factory","components","ERC20__factory_1","enumerable","get","ERC20OrderRouter__factory_1","GelatoLimitOrders__factory_1","Multicall__factory_1","constants","isEthereumChain","GelatoStopLimitOrders","isValidChainIdAndHandler","GelatoLimitOrders","tslib_1","limit_orders_1","stoplimit_orders_1","utils_1","__exportStar","__importStar","isFlashbotsCompatibleChainId","abstract_provider_1","abstract_signer_1","constants_1","types_1","queries_1","chainId","handler","includes","constructor","isFlashbotsProtected","_a","_chainId","_gelatoFeeBPS","_slippageBPS","_subgraphUrl","_signer","Signer","isSigner","undefined","_provider","Provider","isProvider","provider","_gelatoLimitOrders","_moduleAddress","_handler","_handlerAddress","toLowerCase","_isFlashbotsProtected","_abiEncoder","AbiCoder","_erc20OrderRouter","gelatoFeeBPS","slippageBPS","signer","subgraphUrl","handlerAddress","moduleAddress","contract","erc20OrderRouter","encodeLimitOrderSubmission","inputToken","outputToken","inputAmount","minReturn","owner","checkAllowance","__awaiter","payload","encodeLimitOrderSubmissionWithSecret","minReturnToBeParsed","randomSecret","hexlify","randomBytes","replace","fullSecret","privateKey","secret","witness","Wallet","getFeeAndSlippageAdjustedMinReturn","_encodeSubmitData","encodedData","encode","order","id","_getKey","module","data","toString","adjustedMinReturn","inputData","submitLimitOrder","overrides","getAddress","txData","sendTransaction","assign","to","BigNumber","from","encodeLimitOrderCancellation","checkIsActiveOrder","isActiveOrder","interface","encodeFunctionData","Zero","cancelLimitOrder","_order","subgraphOrder","Promise","race","getOrder","setTimeout","resolve","then","status","cancelledTxHash","executedTxHash","error","cancelOrder","gasLimit","approveTokenAmount","amount","approve","existOrder","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","mul","div","outputAmount","extraSlippageBPS","Number","isInteger","gelatoFee","gte","slippage","sub","getAdjustedMinReturn","fees","add","getExecutionPrice","isInverted","orderId","queryOrder","getOrders","includeOrdersWithNullHandler","orders","queryOrders","map","filter","getOpenOrders","queryOpenOrders","getPastOrders","queryPastOrders","getExecutedOrders","queryExecutedOrders","getCancelledOrders","queryCancelledOrders","keccak256","isNetworkGasToken","encodedEthOrder","encodeEthOrder","allowance","lt","GelatoBase","isETHOrWETH","tokenAddress","chainID","WETH_ADDRESS","_gelatoCore","abiEncoder","cancelStopLimitOrder","maxReturn","core_1","stoplimit_1","sotplossHandlers","submitStopLimitOrder","encodeStopLimitOrderSubmission","encodeStopLimitOrderSubmissionWithSecret","maxReturnToBeParsed","getOpenStopLimitOrders","queryStopLimitOrders","getStopLimitOrders","getExecutedStopLimitOrders","queryStopLimitExecutedOrders","getCancelledStopLimitOrders","queryStopLimitCancelledOrders","getPastStopLimitOrders","isTransactionCostDependentChain","queries","token","GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER","GET_ALL_CANCELLED_ORDERS_BY_OWNER","GET_ALL_EXECUTED_ORDERS_BY_OWNER","GET_ALL_PAST_ORDERS_BY_OWNER","GET_ALL_OPEN_ORDERS_BY_OWNER","GET_ALL_ORDERS_BY_OWNER","GET_ORDER_BY_ID","graphql_request_1","gql","constants_2","stopLimitModule","dataFromOldSubgraph","request","dataFromNewSubgraph","allOrders","_getUniqueOrdersWithExpiry","pop","Map","values","sort","a","b","parseFloat","updatedAt","isExpired","Date","now","parseInt","createdAt","queryOpenStopLimitOrders","dataStopLimitSubgraph","console","__importDefault","mod","__esModule","extract_files_1","form_data_1","isExtractableFileEnhanced","isExtractableFile","pipe","query","variables","operationName","extractFiles","clone","files","size","Array","isArray","JSON","stringify","reduce","accu","currentQuery","index","form","FormData","default","append","i","forEach","paths","file","__assign","t","s","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__createBinding","create","o","m","k","k2","__setModuleDefault","v","result","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","done","adopt","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","op","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","batchRequests","rawRequest","GraphQLClient","ClientError","cross_fetch_1","printer_1","createRequestBody_1","resolveHeaders","headers","oHeaders","Headers","CrossFetch","queryCleanner","str","trim","buildGetQueryParams","search","encodeURIComponent","join","post","url","fetch","fetchOptions","_b","method","queryParams","options","requestHeaders","_c","makeRequest","document","_d","_e","resolveRequestDocument","documents","setHeaders","setHeader","key","setEndpoint","fetcher","isBathchingQuery","response","successfullyReceivedData","headers_1","status_1","errorResult","toUpperCase","contentType","startsWith","json","text","some","ok","errors","client","operationDefinitions","definitions","definition","kind","print","chunks","_i","accumulator","chunk","extendStatics","__extends","d","setPrototypeOf","__proto__","String","__","_super","_this","message","extractMessage","Error","captureStackTrace","__unused_webpack___webpack_module__","__webpack_exports__","r","nodejsCustomInspectSymbol","for","_typeof","obj","inspect","formatValue","seenValues","concat","formatObjectValue","previouslySeenValues","object","keys","customInspectFn","customValue","formatArray","array","len","Math","min","remaining","items","getObjectTag","tag","properties","defineInspect","classObject","fn","toJSON","invariant","condition","Boolean","isNode","maybeNode","Location","startToken","endToken","source","start","end","_proto","Token","line","column","prev","_proto2","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","freeze","getVisitFn","visitor","isLeaving","kindVisitor","kindSpecificVisitor","leave","enter","specificVisitor","specificKindVisitor","ast","visit","root","visitorKeys","stack","inArray","edits","node","parent","path","ancestors","newRoot","_visitorKeys$node$kin","isEdited","slice","_i2","_Object$keys2","editOffset","ii","editKey","editValue","splice","visitFn","printDocASTReducer","operation","varDefs","wrap","variableDefinitions","directives","selectionSet","_ref","variable","defaultValue","_ref2","block","selections","_ref3","alias","args","prefix","argsLine","indent","_ref4","_ref5","_ref6","typeCondition","_ref7","_ref8","_ref9","_ref10","isBlockString","printBlockString","indentation","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","hasTrailingSlash","printAsMultipleLines","_ref11","_ref12","_ref13","_ref14","fields","_ref15","_ref16","_ref17","_ref18","_ref19","addDescription","_ref20","operationTypes","_ref21","_ref22","_ref23","interfaces","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","types","_ref28","_ref29","_ref30","_ref31","repeatable","locations","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","cb","description","maybeArray","_maybeArray$filter$jo","separator","x","maybeString","isMultiline"],"sourceRoot":""}