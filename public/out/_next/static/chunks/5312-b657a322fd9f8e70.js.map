{"version":3,"file":"static/chunks/5312-b657a322fd9f8e70.js","mappings":"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","sources":["webpack://_N_E/./src/views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/StakingApy.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","webpack://_N_E/./src/views/Pools/components/LockedPool/Common/LockedActions.tsx","webpack://_N_E/./src/views/Pools/components/LockedPool/Common/IfoCakeRow.tsx","webpack://_N_E/./src/views/Pools/components/LockedPool/LockedStakingApy.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/index.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardFooter/index.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Pool/PoolCardHeader.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Pool/StyledCard.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { Token } from '@pancakeswap/sdk'\nimport { TooltipText, useTooltip, Balance, Pool } from '@pancakeswap/uikit'\nimport AutoEarningsBreakdown from '../AutoEarningsBreakdown'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  pool: Pool.DeserializedPool<Token>\n  account: string\n}\n\nconst RecentCakeProfitBalance: React.FC<React.PropsWithChildren<RecentCakeProfitBalanceProps>> = ({\n  cakeToDisplay,\n  pool,\n  account,\n}) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<AutoEarningsBreakdown pool={pool} account={account} />, {\n    placement: 'bottom-end',\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import { Flex, Pool, Text } from '@pancakeswap/uikit'\nimport { useAccount } from 'wagmi'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { VaultKey, DeserializedLockedVaultUser } from 'state/types'\nimport { Token } from '@pancakeswap/sdk'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = ({ pool }: { pool: Pool.DeserializedPool<Token> }) => {\n  const { t } = useTranslation()\n  const { address: account } = useAccount()\n  const { pricePerFullShare, userData } = useVaultPoolByKey(pool.vaultKey)\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay } = getCakeVaultEarnings(\n    account,\n    userData.cakeAtLastUserAction,\n    userData.userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n    pool.vaultKey === VaultKey.CakeVault\n      ? (userData as DeserializedLockedVaultUser).currentPerformanceFee.plus(\n          (userData as DeserializedLockedVaultUser).currentOverdueFee,\n        )\n      : null,\n  )\n\n  if (!(userData.userShares.gt(0) && account)) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && <RecentCakeProfitBalance cakeToDisplay={autoCakeToDisplay} pool={pool} account={account} />}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import { Flex, Text, Skeleton, useModal, Button, CalculateIcon, FlexGap, Balance, Pool } from '@pancakeswap/uikit'\nimport { LightGreyCard } from 'components/Card'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useVaultApy } from 'hooks/useVaultApy'\nimport { memo } from 'react'\nimport { VaultKey } from 'state/types'\nimport styled from 'styled-components'\nimport { Token } from '@pancakeswap/sdk'\nimport { VaultRoiCalculatorModal } from '../Vault/VaultRoiCalculatorModal'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nexport const StakingApy = memo(({ pool }: { pool: Pool.DeserializedPool<Token> }) => {\n  const { t } = useTranslation()\n\n  const { flexibleApy, lockedApy } = useVaultApy()\n\n  const [onPresentFlexibleApyModal] = useModal(<VaultRoiCalculatorModal pool={pool} />)\n\n  const [onPresentLockedApyModal] = useModal(<VaultRoiCalculatorModal pool={pool} initialView={1} />)\n\n  return (\n    <LightGreyCard>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n          {t('Flexible')} APY:\n        </Text>\n        {flexibleApy ? (\n          <AprLabelContainer alignItems=\"center\" justifyContent=\"flex-start\">\n            <Balance fontSize=\"16px\" value={parseFloat(flexibleApy)} decimals={2} unit=\"%\" bold />\n            <Button\n              onClick={(e) => {\n                e.stopPropagation()\n                onPresentFlexibleApyModal()\n              }}\n              variant=\"text\"\n              width=\"20px\"\n              height=\"20px\"\n              padding=\"0px\"\n              marginLeft=\"4px\"\n            >\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          </AprLabelContainer>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </Flex>\n      {pool.vaultKey === VaultKey.CakeVault && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {t('Locked')} APY:\n          </Text>\n          {lockedApy ? (\n            <FlexGap gap=\"4px\" flexWrap=\"wrap\" justifyContent=\"flex-end\">\n              <Text style={{ whiteSpace: 'nowrap' }} bold>\n                {t('Up to')}\n              </Text>\n              <AprLabelContainer alignItems=\"center\">\n                <Balance fontSize=\"16px\" value={parseFloat(lockedApy)} decimals={2} unit=\"%\" bold />\n                <Button\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onPresentLockedApyModal()\n                  }}\n                  variant=\"text\"\n                  width=\"20px\"\n                  height=\"20px\"\n                  padding=\"0px\"\n                  marginLeft=\"4px\"\n                >\n                  <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n                </Button>\n              </AprLabelContainer>\n            </FlexGap>\n          ) : (\n            <Skeleton width=\"80px\" height=\"16px\" />\n          )}\n        </Flex>\n      )}\n    </LightGreyCard>\n  )\n})\n","import { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { VaultKey } from 'state/types'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  vaultKey: VaultKey\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<React.PropsWithChildren<ApprovalActionProps>> = ({\n  vaultKey,\n  isLoading = false,\n  setLastUpdated,\n}) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, pendingTx } = useVaultApprove(vaultKey, setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={pendingTx}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton, Box, Balance, Pool } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { VaultKey } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { Token } from '@pancakeswap/sdk'\nimport NotEnoughTokensModal from '../../Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport ConvertToLock from '../../LockedPool/Common/ConvertToLock'\n\ninterface HasStakeActionProps {\n  pool: Pool.DeserializedPool<Token>\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<React.PropsWithChildren<HasStakeActionProps>> = ({\n  pool,\n  stakingTokenBalance,\n  performanceFee,\n}) => {\n  const {\n    userData: {\n      balance: { cakeAsBigNumber, cakeAsNumberBalance },\n    },\n  } = useVaultPoolByKey(pool.vaultKey)\n\n  const { stakingToken } = pool\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(\n    <VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />,\n    true,\n    true,\n    `withdraw-vault-${pool.sousId}-${pool.vaultKey}`,\n  )\n\n  return (\n    <>\n      <Flex mb=\"16px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n          <Text as={Flex} fontSize=\"12px\" color=\"textSubtle\" flexWrap=\"wrap\">\n            {cakePriceBusd.gt(0) ? (\n              <Balance\n                value={stakedDollarValue}\n                fontSize=\"12px\"\n                color=\"textSubtle\"\n                decimals={2}\n                prefix=\"~\"\n                unit=\" USD\"\n              />\n            ) : (\n              <Skeleton mt=\"1px\" height={16} width={64} />\n            )}\n          </Text>\n        </Flex>\n        <Flex>\n          <IconButton\n            variant=\"secondary\"\n            onClick={() => {\n              onPresentUnstake()\n            }}\n            mr=\"6px\"\n          >\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n            <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n          </IconButton>\n        </Flex>\n      </Flex>\n      {pool.vaultKey === VaultKey.CakeVault && (\n        <Box mb=\"16px\">\n          <ConvertToLock stakingToken={stakingToken} currentStakedAmount={cakeAsNumberBalance} />\n        </Box>\n      )}\n    </>\n  )\n}\n\nexport default HasSharesActions\n","import { Flex, Skeleton, useModal, Pool } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { VaultKey } from 'state/types'\nimport { Token } from '@pancakeswap/sdk'\nimport NotEnoughTokensModal from '../../Modals/NotEnoughTokensModal'\nimport { VaultStakeButtonGroup } from '../../Vault/VaultStakeButtonGroup'\nimport VaultStakeModal from '../VaultStakeModal'\nimport LockedStakeModal from '../../LockedPool/Modals/LockedStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool.DeserializedPool<Token>\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n}\n\nconst VaultStakeActions: React.FC<React.PropsWithChildren<VaultStakeActionsProps>> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n}) => {\n  const { stakingToken, userDataLoaded } = pool\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n  const [openPresentLockedStakeModal] = useModal(\n    <LockedStakeModal\n      currentBalance={stakingTokenBalance}\n      stakingToken={stakingToken}\n      stakingTokenBalance={stakingTokenBalance}\n    />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <VaultStakeButtonGroup\n        onFlexibleClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n        onLockedClick={pool.vaultKey === VaultKey.CakeVault ? openPresentLockedStakeModal : null}\n      />\n    )\n  }\n\n  return (\n    <Flex flexDirection=\"column\">{userDataLoaded ? renderStakeAction() : <Skeleton width=\"100%\" height=\"52px\" />}</Flex>\n  )\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\n\nimport styled from 'styled-components'\nimport { Flex, Text, Box, Pool } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { Token } from '@pancakeswap/sdk'\n\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<\n  React.PropsWithChildren<{\n    pool: Pool.DeserializedPool<Token>\n    accountHasSharesStaked: boolean\n    isLoading: boolean\n    performanceFee: number\n  }>\n> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus(pool.vaultKey)\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction vaultKey={pool.vaultKey} isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import { useMemo } from 'react'\nimport { Flex, Box } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getVaultPosition, VaultPosition } from 'utils/cakePool'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport AddCakeButton from '../Buttons/AddCakeButton'\nimport ExtendButton from '../Buttons/ExtendDurationButton'\nimport AfterLockedActions from './AfterLockedActions'\nimport { LockedActionsPropsType } from '../types'\n\nconst LockedActions: React.FC<React.PropsWithChildren<LockedActionsPropsType>> = ({\n  userShares,\n  locked,\n  lockEndTime,\n  lockStartTime,\n  stakingToken,\n  stakingTokenBalance,\n  lockedAmount,\n}) => {\n  const position = useMemo(\n    () =>\n      getVaultPosition({\n        userShares,\n        locked,\n        lockEndTime,\n      }),\n    [userShares, locked, lockEndTime],\n  )\n  const { t } = useTranslation()\n  const lockedAmountAsNumber = getBalanceNumber(lockedAmount)\n\n  const currentBalance = useMemo(\n    () => (stakingTokenBalance ? new BigNumber(stakingTokenBalance) : BIG_ZERO),\n    [stakingTokenBalance],\n  )\n\n  if (position === VaultPosition.Locked) {\n    return (\n      <Flex>\n        <Box width=\"100%\" mr=\"4px\">\n          <AddCakeButton\n            lockEndTime={lockEndTime}\n            lockStartTime={lockStartTime}\n            currentLockedAmount={lockedAmount}\n            stakingToken={stakingToken}\n            currentBalance={currentBalance}\n            stakingTokenBalance={stakingTokenBalance}\n          />\n        </Box>\n        <Box width=\"100%\" ml=\"4px\">\n          <ExtendButton\n            lockEndTime={lockEndTime}\n            lockStartTime={lockStartTime}\n            stakingToken={stakingToken}\n            currentBalance={currentBalance}\n            currentLockedAmount={lockedAmountAsNumber}\n          >\n            {t('Extend')}\n          </ExtendButton>\n        </Box>\n      </Flex>\n    )\n  }\n\n  return (\n    <AfterLockedActions\n      lockEndTime={lockEndTime}\n      lockStartTime={lockStartTime}\n      position={position}\n      currentLockedAmount={lockedAmountAsNumber}\n      stakingToken={stakingToken}\n    />\n  )\n}\n\nexport default LockedActions\n","import styled from 'styled-components'\nimport { Flex, Text, TooltipText, useTooltip, Box, Link, BalanceWithLoading } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useIfoCredit, useIfoCeiling } from 'state/pools/hooks'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { getICakeWeekDisplay } from 'views/Pools/helpers'\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst IfoCakeRow: React.FC<React.PropsWithChildren> = () => {\n  const { t } = useTranslation()\n  const credit = useIfoCredit()\n  const ceiling = useIfoCeiling()\n  const weeksDisplay = getICakeWeekDisplay(ceiling)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <Box>\n      <Text>\n        {t(\n          'The number of iCAKE equals the locked staking amount if the staking duration is longer than %weeks% weeks. If the staking duration is less than %weeks% weeks, it will linearly decrease based on the staking duration.',\n          {\n            weeks: weeksDisplay,\n          },\n        )}\n      </Text>\n      <InlineLink external href=\"https://docs.pancakeswap.finance/products/ifo-initial-farm-offering/icake\">\n        {t('Learn more about iCAKE')}\n      </InlineLink>\n    </Box>,\n    {\n      placement: 'bottom-start',\n    },\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText>\n        <Text ref={targetRef} color=\"textSubtle\" bold fontSize=\"12px\">\n          {t('iCAKE')}\n        </Text>\n      </TooltipText>\n      <BalanceWithLoading color=\"text\" bold fontSize=\"16px\" decimals={3} value={getBalanceNumber(credit)} />\n    </Flex>\n  )\n}\n\nexport default IfoCakeRow\n","import { useMemo, memo } from 'react'\nimport { getVaultPosition, VaultPosition } from 'utils/cakePool'\n\nimport { Flex, Text, Box, TooltipText, useTooltip, HelpIcon, BalanceWithLoading } from '@pancakeswap/uikit'\nimport { LightGreyCard } from 'components/Card'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useVaultApy } from 'hooks/useVaultApy'\nimport Divider from 'components/Divider'\nimport { useBUSDCakeAmount } from 'hooks/useBUSDPrice'\nimport isUndefinedOrNull from '@pancakeswap/utils/isUndefinedOrNull'\nimport { getBalanceNumber, getFullDisplayBalance } from '@pancakeswap/utils/formatBalance'\nimport BurningCountDown from './Common/BurningCountDown'\nimport LockedActions from './Common/LockedActions'\nimport YieldBoostRow from './Common/YieldBoostRow'\nimport LockDurationRow from './Common/LockDurationRow'\nimport IfoCakeRow from './Common/IfoCakeRow'\nimport useUserDataInVaultPresenter from './hooks/useUserDataInVaultPresenter'\nimport { LockedStakingApyPropsType } from './types'\n\ninterface LockedStakingApyProps extends LockedStakingApyPropsType {\n  showICake?: boolean\n}\n\nconst LockedStakingApy: React.FC<React.PropsWithChildren<LockedStakingApyProps>> = ({\n  stakingToken,\n  stakingTokenBalance,\n  userData,\n  showICake,\n}) => {\n  const { t } = useTranslation()\n  const position = useMemo(\n    () =>\n      getVaultPosition({\n        userShares: userData?.userShares,\n        locked: userData?.locked,\n        lockEndTime: userData?.lockEndTime,\n      }),\n    [userData],\n  )\n\n  const currentLockedAmountAsBigNumber = useMemo(() => {\n    return userData?.balance?.cakeAsBigNumber\n  }, [userData?.balance?.cakeAsBigNumber])\n\n  const currentLockedAmount = getBalanceNumber(currentLockedAmountAsBigNumber)\n\n  const usdValueStaked = useBUSDCakeAmount(currentLockedAmount)\n\n  const { weekDuration, lockEndDate, secondDuration, remainingTime, burnStartTime } = useUserDataInVaultPresenter({\n    lockStartTime: userData?.lockStartTime,\n    lockEndTime: userData?.lockEndTime,\n    burnStartTime: userData?.burnStartTime,\n  })\n\n  const { lockedApy } = useVaultApy({ duration: secondDuration })\n\n  // earningTokenBalance includes overdue fee if any\n  const earningTokenBalance = useMemo(() => {\n    return getBalanceNumber(currentLockedAmountAsBigNumber.minus(userData?.cakeAtLastUserAction))\n  }, [currentLockedAmountAsBigNumber, userData?.cakeAtLastUserAction])\n\n  const tooltipContent = t(\n    'Calculated based on current rates and subject to change based on pool conditions. It is an estimate provided for your convenience only, and by no means represents guaranteed returns.',\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const tooltipContentOfBurn = t(\n    'After Burning starts at %burnStartTime%. You need to renew your fix-term position, to initiate a new lock or convert your staking position to flexible before it starts. Otherwise all the rewards will be burned within the next 90 days.',\n    { burnStartTime },\n  )\n  const {\n    targetRef: tagTargetRefOfBurn,\n    tooltip: tagTooltipOfBurn,\n    tooltipVisible: tagTooltipVisibleOfBurn,\n  } = useTooltip(tooltipContentOfBurn, {\n    placement: 'bottom',\n  })\n\n  return (\n    <LightGreyCard>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Box>\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {t('CAKE locked')}\n          </Text>\n          <BalanceWithLoading color=\"text\" bold fontSize=\"16px\" value={currentLockedAmount} decimals={5} />\n          <BalanceWithLoading\n            value={usdValueStaked}\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            prefix=\"~\"\n            unit=\" USD\"\n          />\n        </Box>\n        <Box>\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {t('Unlocks In')}\n          </Text>\n          <Text color={position >= VaultPosition.LockedEnd ? '#D67E0A' : 'text'} bold fontSize=\"16px\">\n            {position >= VaultPosition.LockedEnd ? t('Unlocked') : remainingTime}\n            {tagTooltipVisibleOfBurn && tagTooltipOfBurn}\n            <span ref={tagTargetRefOfBurn}>\n              <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n            </span>\n          </Text>\n          <Text color={position >= VaultPosition.LockedEnd ? '#D67E0A' : 'text'} fontSize=\"12px\">\n            {t('On %date%', { date: lockEndDate })}\n          </Text>\n        </Box>\n      </Flex>\n      <Box mb=\"16px\">\n        <LockedActions\n          userShares={userData?.userShares}\n          locked={userData?.locked}\n          lockEndTime={userData?.lockEndTime}\n          lockStartTime={userData?.lockStartTime}\n          stakingToken={stakingToken}\n          stakingTokenBalance={stakingTokenBalance}\n          lockedAmount={currentLockedAmountAsBigNumber}\n        />\n      </Box>\n      <Divider />\n      {![VaultPosition.LockedEnd, VaultPosition.AfterBurning].includes(position) && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          {tooltipVisible && tooltip}\n          <TooltipText>\n            <Text ref={targetRef} color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n              {t('APY')}\n            </Text>\n          </TooltipText>\n          <BalanceWithLoading color=\"text\" bold fontSize=\"16px\" value={parseFloat(lockedApy)} decimals={2} unit=\"%\" />\n        </Flex>\n      )}\n      <LockDurationRow weekDuration={weekDuration} />\n      {![VaultPosition.LockedEnd, VaultPosition.AfterBurning].includes(position) && (\n        <YieldBoostRow secondDuration={secondDuration} />\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n          {t('Recent CAKE profit')}\n        </Text>\n        <BalanceWithLoading color=\"text\" bold fontSize=\"16px\" value={earningTokenBalance} decimals={5} />\n      </Flex>\n      {position === VaultPosition.LockedEnd && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {t('After Burning In')}\n          </Text>\n          <Text color=\"failure\" bold>\n            <BurningCountDown lockEndTime={userData?.lockEndTime} />\n          </Text>\n        </Flex>\n      )}\n      {position === VaultPosition.AfterBurning && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {t('After burning')}\n          </Text>\n          <Text color=\"failure\" bold>\n            {isUndefinedOrNull(userData?.currentOverdueFee)\n              ? '-'\n              : t('%amount% Burned', { amount: getFullDisplayBalance(userData?.currentOverdueFee, 18, 5) })}\n          </Text>\n        </Flex>\n      )}\n      {showICake && <IfoCakeRow />}\n    </LightGreyCard>\n  )\n}\n\nexport default memo(LockedStakingApy)\n","import { Box, CardBody, CardProps, Flex, Text, TokenPairImage, FlexGap, Skeleton, Pool } from '@pancakeswap/uikit'\nimport { useAccount } from 'wagmi'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { vaultPoolConfig } from 'config/constants/pools'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useVaultPoolByKey } from 'state/pools/hooks'\nimport { VaultKey, DeserializedLockedCakeVault, DeserializedCakeVault } from 'state/types'\nimport styled from 'styled-components'\nimport { Token } from '@pancakeswap/sdk'\n\nimport CardFooter from '../PoolCard/CardFooter'\nimport { VaultPositionTagWithLabel } from '../Vault/VaultPositionTag'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\nimport { StakingApy } from './StakingApy'\nimport VaultCardActions from './VaultCardActions'\nimport LockedStakingApy from '../LockedPool/LockedStakingApy'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps extends CardProps {\n  pool: Pool.DeserializedPool<Token>\n  showStakedOnly: boolean\n  defaultFooterExpanded?: boolean\n  showICake?: boolean\n  showSkeleton?: boolean\n}\n\ninterface CakeVaultDetailProps {\n  isLoading?: boolean\n  account: string\n  pool: Pool.DeserializedPool<Token>\n  vaultPool: DeserializedCakeVault\n  accountHasSharesStaked: boolean\n  defaultFooterExpanded?: boolean\n  showICake?: boolean\n  performanceFeeAsDecimal: number\n}\n\nexport const CakeVaultDetail: React.FC<React.PropsWithChildren<CakeVaultDetailProps>> = ({\n  isLoading = false,\n  account,\n  pool,\n  vaultPool,\n  accountHasSharesStaked,\n  showICake,\n  performanceFeeAsDecimal,\n  defaultFooterExpanded,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <StyledCardBody isLoading={isLoading}>\n        {account && pool.vaultKey === VaultKey.CakeVault && (\n          <VaultPositionTagWithLabel userData={(vaultPool as DeserializedLockedCakeVault).userData} />\n        )}\n        {account &&\n        pool.vaultKey === VaultKey.CakeVault &&\n        (vaultPool as DeserializedLockedCakeVault).userData.locked ? (\n          <LockedStakingApy\n            userData={(vaultPool as DeserializedLockedCakeVault).userData}\n            stakingToken={pool?.stakingToken}\n            stakingTokenBalance={pool?.userData?.stakingTokenBalance}\n            showICake={showICake}\n          />\n        ) : (\n          <>\n            <StakingApy pool={pool} />\n            <FlexGap mt=\"16px\" gap=\"24px\" flexDirection={accountHasSharesStaked ? 'column-reverse' : 'column'}>\n              <Box>\n                {account && (\n                  <Box mb=\"8px\">\n                    <UnstakingFeeCountdownRow vaultKey={pool.vaultKey} />\n                  </Box>\n                )}\n                <RecentCakeProfitRow pool={pool} />\n              </Box>\n              <Flex flexDirection=\"column\">\n                {account ? (\n                  <VaultCardActions\n                    pool={pool}\n                    accountHasSharesStaked={accountHasSharesStaked}\n                    isLoading={isLoading}\n                    performanceFee={performanceFeeAsDecimal}\n                  />\n                ) : (\n                  <>\n                    <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                      {t('Start earning')}\n                    </Text>\n                    <ConnectWalletButton />\n                  </>\n                )}\n              </Flex>\n            </FlexGap>\n          </>\n        )}\n      </StyledCardBody>\n      <CardFooter defaultExpanded={defaultFooterExpanded} pool={pool} account={account} />\n    </>\n  )\n}\n\nconst CakeVaultCard: React.FC<React.PropsWithChildren<CakeVaultProps>> = ({\n  pool,\n  showStakedOnly,\n  defaultFooterExpanded,\n  showICake = false,\n  showSkeleton = true,\n  ...props\n}) => {\n  const { address: account } = useAccount()\n\n  const vaultPool = useVaultPoolByKey(pool.vaultKey)\n  const { totalStaked } = pool\n\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFeeAsDecimal },\n  } = vaultPool\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <Pool.StyledCard isActive {...props}>\n      <Pool.PoolCardHeader isStaking={accountHasSharesStaked}>\n        {!showSkeleton || (totalStaked && totalStaked.gte(0)) ? (\n          <>\n            <Pool.PoolCardHeaderTitle\n              title={vaultPoolConfig[pool.vaultKey].name}\n              subTitle={vaultPoolConfig[pool.vaultKey].description}\n            />\n            <TokenPairImage {...vaultPoolConfig[pool.vaultKey].tokenImage} width={64} height={64} />\n          </>\n        ) : (\n          <Flex width=\"100%\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\">\n              <Skeleton width={100} height={26} mb=\"4px\" />\n              <Skeleton width={65} height={20} />\n            </Flex>\n            <Skeleton width={58} height={58} variant=\"circle\" />\n          </Flex>\n        )}\n      </Pool.PoolCardHeader>\n      <CakeVaultDetail\n        isLoading={isLoading}\n        account={account}\n        pool={pool}\n        vaultPool={vaultPool}\n        accountHasSharesStaked={accountHasSharesStaked}\n        showICake={showICake}\n        performanceFeeAsDecimal={performanceFeeAsDecimal}\n        defaultFooterExpanded={defaultFooterExpanded}\n      />\n    </Pool.StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip, Farm as FarmUI, Pool } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport PoolStatsInfo from '../../PoolStatsInfo'\n\nconst { CompoundingPoolTag, ManualPoolTag } = FarmUI.Tags\n\ninterface FooterProps {\n  pool: Pool.DeserializedPool<Token>\n  account: string\n  totalCakeInVault?: BigNumber\n  defaultExpanded?: boolean\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst Footer: React.FC<React.PropsWithChildren<FooterProps>> = ({ pool, account, defaultExpanded, children }) => {\n  const { vaultKey } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(defaultExpanded || false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Rewards are distributed and included into your staking balance automatically. There’s no need to manually compound your rewards.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(vaultKey ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {vaultKey ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && (\n        <ExpandedWrapper flexDirection=\"column\">\n          {children || <PoolStatsInfo pool={pool} account={account} />}\n        </ExpandedWrapper>\n      )}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport getThemeValue from \"../../util/getThemeValue\";\nimport { CardHeader, Flex, Heading, Text } from \"../../components\";\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : getThemeValue(theme, `colors.${background}`)};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`;\n\nexport const PoolCardHeader: React.FC<\n  React.PropsWithChildren<{\n    isFinished?: boolean;\n    isStaking?: boolean;\n  }>\n> = ({ isFinished = false, isStaking = false, children }) => {\n  const background = isStaking ? \"gradientBubblegum\" : \"gradientCardHeader\";\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        {children}\n      </Flex>\n    </Wrapper>\n  );\n};\n\nexport const PoolCardHeaderTitle: React.FC<\n  React.PropsWithChildren<{ isFinished?: boolean; title: ReactNode; subTitle: ReactNode }>\n> = ({ isFinished, title, subTitle }) => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Heading color={isFinished ? \"textDisabled\" : \"body\"} scale=\"lg\">\n        {title}\n      </Heading>\n      <Text fontSize=\"14px\" color={isFinished ? \"textDisabled\" : \"textSubtle\"}>\n        {subTitle}\n      </Text>\n    </Flex>\n  );\n};\n","import styled from \"styled-components\";\nimport { Card } from \"../../components\";\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  min-width: 280px;\n  max-width: 100%;\n  margin: 0 0 24px 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? \"textDisabled\" : \"secondary\"]};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 350px;\n    margin: 0 12px 46px;\n  }\n`;\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[5312],{\n\n/***/ 5312:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"_\": function() { return /* binding */ CakeVaultDetail; },\n  \"Z\": function() { return /* binding */ components_CakeVaultCard; }\n});\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(70865);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(96670);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_without_properties.mjs + 1 modules\nvar _object_without_properties = __webpack_require__(26297);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(92228);\n// EXTERNAL MODULE: ../../node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(52322);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Card/CardBody.tsx\nvar CardBody = __webpack_require__(95134);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Layouts/FlexGap.tsx\nvar FlexGap = __webpack_require__(59482);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Box.tsx\nvar Box = __webpack_require__(13670);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Flex.tsx\nvar Flex = __webpack_require__(76903);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(89495);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/StyledCard.tsx\nvar StyledCard = __webpack_require__(89718);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Pool/PoolCardHeader.tsx\nvar PoolCardHeader = __webpack_require__(76554);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Image/TokenPairImage.tsx + 2 modules\nvar TokenPairImage = __webpack_require__(94854);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Skeleton/Skeleton.tsx + 1 modules\nvar Skeleton = __webpack_require__(74009);\n// EXTERNAL MODULE: ../../node_modules/wagmi/dist/wagmi.esm.js + 25 modules\nvar wagmi_esm = __webpack_require__(51523);\n// EXTERNAL MODULE: ./src/components/ConnectWalletButton.tsx\nvar ConnectWalletButton = __webpack_require__(39480);\n// EXTERNAL MODULE: ./src/config/constants/pools.tsx\nvar pools = __webpack_require__(73486);\n// EXTERNAL MODULE: ../../packages/localization/src/index.tsx + 6 modules\nvar src = __webpack_require__(65957);\n// EXTERNAL MODULE: ./src/state/pools/hooks.ts + 1 modules\nvar hooks = __webpack_require__(99225);\n// EXTERNAL MODULE: ./src/state/types.ts\nvar types = __webpack_require__(93638);\n// EXTERNAL MODULE: ../../node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(3411);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/CardFooter/index.tsx\nvar CardFooter = __webpack_require__(45249);\n// EXTERNAL MODULE: ./src/views/Pools/components/Vault/VaultPositionTag.tsx\nvar VaultPositionTag = __webpack_require__(63992);\n// EXTERNAL MODULE: ./src/views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx + 1 modules\nvar UnstakingFeeCountdownRow = __webpack_require__(26786);\n// EXTERNAL MODULE: ./src/state/farms/hooks.ts + 1 modules\nvar farms_hooks = __webpack_require__(8919);\n// EXTERNAL MODULE: ./src/views/Pools/helpers.tsx\nvar helpers = __webpack_require__(9681);\n// EXTERNAL MODULE: ../../packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 2 modules\nvar useTooltip = __webpack_require__(69689);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Text/TooltipText.tsx\nvar TooltipText = __webpack_require__(83931);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Balance/Balance.tsx\nvar Balance = __webpack_require__(64343);\n// EXTERNAL MODULE: ./src/views/Pools/components/AutoEarningsBreakdown.tsx\nvar AutoEarningsBreakdown = __webpack_require__(55440);\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx\n\n\n\nvar RecentCakeProfitBalance = function(param) {\n    var cakeToDisplay = param.cakeToDisplay, pool = param.pool, account = param.account;\n    var ref = (0,useTooltip/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(AutoEarningsBreakdown/* default */.Z, {\n        pool: pool,\n        account: account\n    }), {\n        placement: \"bottom-end\"\n    }), targetRef = ref.targetRef, tooltip = ref.tooltip, tooltipVisible = ref.tooltipVisible;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            tooltipVisible && tooltip,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                ref: targetRef,\n                small: true,\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                    fontSize: \"14px\",\n                    value: cakeToDisplay\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ var CakeVaultCard_RecentCakeProfitBalance = (RecentCakeProfitBalance);\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx\n\n\n\n\n\n\n\n\n\nvar RecentCakeProfitCountdownRow = function(param) {\n    var pool = param.pool;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var ref = (0,wagmi_esm/* useAccount */.mA)(), account = ref.address;\n    var ref1 = (0,hooks/* useVaultPoolByKey */.eB)(pool.vaultKey), pricePerFullShare = ref1.pricePerFullShare, userData = ref1.userData;\n    var cakePriceBusd = (0,farms_hooks/* usePriceCakeBusd */.Iu)();\n    var ref2 = (0,helpers/* getCakeVaultEarnings */.UN)(account, userData.cakeAtLastUserAction, userData.userShares, pricePerFullShare, cakePriceBusd.toNumber(), pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault ? userData.currentPerformanceFee.plus(userData.currentOverdueFee) : null), hasAutoEarnings = ref2.hasAutoEarnings, autoCakeToDisplay = ref2.autoCakeToDisplay;\n    if (!(userData.userShares.gt(0) && account)) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                fontSize: \"14px\",\n                children: \"\".concat(t(\"Recent CAKE profit\"), \":\")\n            }),\n            hasAutoEarnings && /*#__PURE__*/ (0,jsx_runtime.jsx)(CakeVaultCard_RecentCakeProfitBalance, {\n                cakeToDisplay: autoCakeToDisplay,\n                pool: pool,\n                account: account\n            })\n        ]\n    });\n};\n/* harmony default export */ var RecentCakeProfitRow = (RecentCakeProfitCountdownRow);\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(87394);\n// EXTERNAL MODULE: ../../packages/uikit/src/widgets/Modal/useModal.ts\nvar useModal = __webpack_require__(11298);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Button/Button.tsx + 2 modules\nvar Button = __webpack_require__(48608);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Calculate.tsx\nvar Calculate = __webpack_require__(3188);\n// EXTERNAL MODULE: ./src/components/Card/index.tsx\nvar Card = __webpack_require__(27156);\n// EXTERNAL MODULE: ./src/hooks/useVaultApy.ts\nvar useVaultApy = __webpack_require__(53887);\n// EXTERNAL MODULE: ../../node_modules/react/index.js\nvar react = __webpack_require__(2784);\n// EXTERNAL MODULE: ./src/views/Pools/components/Vault/VaultRoiCalculatorModal.tsx\nvar VaultRoiCalculatorModal = __webpack_require__(18666);\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/StakingApy.tsx\n\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  &:hover {\\n    opacity: 0.5;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\nvar AprLabelContainer = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-7c0f09ab-0\"\n})(_templateObject());\nvar StakingApy = /*#__PURE__*/ (0,react.memo)(function(param) {\n    var pool = param.pool;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var ref = (0,useVaultApy/* useVaultApy */.o)(), flexibleApy = ref.flexibleApy, lockedApy = ref.lockedApy;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultRoiCalculatorModal/* VaultRoiCalculatorModal */.E, {\n        pool: pool\n    })), 1), onPresentFlexibleApyModal = ref1[0];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultRoiCalculatorModal/* VaultRoiCalculatorModal */.E, {\n        pool: pool,\n        initialView: 1\n    })), 1), onPresentLockedApyModal = ref2[0];\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Card/* LightGreyCard */.m5, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: [\n                            t(\"Flexible\"),\n                            \" APY:\"\n                        ]\n                    }),\n                    flexibleApy ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(AprLabelContainer, {\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                fontSize: \"16px\",\n                                value: parseFloat(flexibleApy),\n                                decimals: 2,\n                                unit: \"%\",\n                                bold: true\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                onClick: function(e) {\n                                    e.stopPropagation();\n                                    onPresentFlexibleApyModal();\n                                },\n                                variant: \"text\",\n                                width: \"20px\",\n                                height: \"20px\",\n                                padding: \"0px\",\n                                marginLeft: \"4px\",\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Calculate/* default */.Z, {\n                                    color: \"textSubtle\",\n                                    width: \"20px\"\n                                })\n                            })\n                        ]\n                    }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                        width: \"80px\",\n                        height: \"16px\"\n                    })\n                ]\n            }),\n            pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: [\n                            t(\"Locked\"),\n                            \" APY:\"\n                        ]\n                    }),\n                    lockedApy ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(FlexGap/* default */.Z, {\n                        gap: \"4px\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"flex-end\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                style: {\n                                    whiteSpace: \"nowrap\"\n                                },\n                                bold: true,\n                                children: t(\"Up to\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(AprLabelContainer, {\n                                alignItems: \"center\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                        fontSize: \"16px\",\n                                        value: parseFloat(lockedApy),\n                                        decimals: 2,\n                                        unit: \"%\",\n                                        bold: true\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                        onClick: function(e) {\n                                            e.stopPropagation();\n                                            onPresentLockedApyModal();\n                                        },\n                                        variant: \"text\",\n                                        width: \"20px\",\n                                        height: \"20px\",\n                                        padding: \"0px\",\n                                        marginLeft: \"4px\",\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Calculate/* default */.Z, {\n                                            color: \"textSubtle\",\n                                            width: \"20px\"\n                                        })\n                                    })\n                                ]\n                            })\n                        ]\n                    }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                        width: \"80px\",\n                        height: \"16px\"\n                    })\n                ]\n            })\n        ]\n    });\n});\n\n// EXTERNAL MODULE: ../../node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__(6391);\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n// EXTERNAL MODULE: ../../packages/utils/bigNumber.ts\nvar bigNumber = __webpack_require__(81834);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/AutoRenew.tsx\nvar AutoRenew = __webpack_require__(73685);\n// EXTERNAL MODULE: ./src/views/Pools/hooks/useApprove.tsx + 1 modules\nvar useApprove = __webpack_require__(33431);\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx\n\n\n\n\nvar VaultApprovalAction = function(param) {\n    var vaultKey = param.vaultKey, _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading, setLastUpdated = param.setLastUpdated;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var ref = (0,useApprove/* useVaultApprove */.Le)(vaultKey, setLastUpdated), handleApprove = ref.handleApprove, pendingTx = ref.pendingTx;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n        children: isLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n            width: \"100%\",\n            height: \"52px\"\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            isLoading: pendingTx,\n            endIcon: pendingTx ? /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoRenew/* default */.Z, {\n                spin: true,\n                color: \"currentColor\"\n            }) : null,\n            disabled: pendingTx,\n            onClick: handleApprove,\n            width: \"100%\",\n            children: t(\"Enable\")\n        })\n    });\n};\n/* harmony default export */ var VaultCardActions_VaultApprovalAction = (VaultApprovalAction);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/Modals/NotEnoughTokensModal.tsx\nvar NotEnoughTokensModal = __webpack_require__(69688);\n// EXTERNAL MODULE: ./src/views/Pools/components/Vault/VaultStakeButtonGroup.tsx\nvar VaultStakeButtonGroup = __webpack_require__(68528);\n// EXTERNAL MODULE: ./src/views/Pools/components/CakeVaultCard/VaultStakeModal.tsx + 1 modules\nvar VaultStakeModal = __webpack_require__(18353);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Modals/LockedStakeModal.tsx\nvar LockedStakeModal = __webpack_require__(26595);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Button/IconButton.tsx\nvar IconButton = __webpack_require__(93058);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Minus.tsx\nvar Minus = __webpack_require__(99269);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Add.tsx\nvar Add = __webpack_require__(29420);\n// EXTERNAL MODULE: ../../packages/utils/formatBalance.ts\nvar formatBalance = __webpack_require__(18426);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/ConvertToLock.tsx\nvar ConvertToLock = __webpack_require__(85074);\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx\n\n\n\n\n\n\n\n\n\n\nvar HasSharesActions = function(param) {\n    var pool = param.pool, stakingTokenBalance = param.stakingTokenBalance, performanceFee = param.performanceFee;\n    var ref = (0,hooks/* useVaultPoolByKey */.eB)(pool.vaultKey), _userData = ref.userData, _balance = _userData.balance, cakeAsBigNumber = _balance.cakeAsBigNumber, cakeAsNumberBalance = _balance.cakeAsNumberBalance;\n    var stakingToken = pool.stakingToken;\n    var cakePriceBusd = (0,farms_hooks/* usePriceCakeBusd */.Iu)();\n    var stakedDollarValue = cakePriceBusd.gt(0) ? (0,formatBalance/* getBalanceNumber */.mW)(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals) : 0;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(NotEnoughTokensModal/* default */.Z, {\n        tokenSymbol: stakingToken.symbol\n    })), 1), onPresentTokenRequired = ref1[0];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultStakeModal/* default */.Z, {\n        stakingMax: stakingTokenBalance,\n        performanceFee: performanceFee,\n        pool: pool\n    })), 1), onPresentStake = ref2[0];\n    var ref3 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultStakeModal/* default */.Z, {\n        stakingMax: cakeAsBigNumber,\n        pool: pool,\n        isRemovingStake: true\n    }), true, true, \"withdraw-vault-\".concat(pool.sousId, \"-\").concat(pool.vaultKey)), 1), onPresentUnstake = ref3[0];\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                mb: \"16px\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        flexDirection: \"column\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                fontSize: \"20px\",\n                                bold: true,\n                                value: cakeAsNumberBalance,\n                                decimals: 5\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                as: Flex/* default */.Z,\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                flexWrap: \"wrap\",\n                                children: cakePriceBusd.gt(0) ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    value: stakedDollarValue,\n                                    fontSize: \"12px\",\n                                    color: \"textSubtle\",\n                                    decimals: 2,\n                                    prefix: \"~\",\n                                    unit: \" USD\"\n                                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                                    mt: \"1px\",\n                                    height: 16,\n                                    width: 64\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                                variant: \"secondary\",\n                                onClick: function() {\n                                    onPresentUnstake();\n                                },\n                                mr: \"6px\",\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Minus/* default */.Z, {\n                                    color: \"primary\",\n                                    width: \"24px\"\n                                })\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                                variant: \"secondary\",\n                                onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                    color: \"primary\",\n                                    width: \"24px\",\n                                    height: \"24px\"\n                                })\n                            })\n                        ]\n                    })\n                ]\n            }),\n            pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                mb: \"16px\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ConvertToLock/* default */.Z, {\n                    stakingToken: stakingToken,\n                    currentStakedAmount: cakeAsNumberBalance\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ var VaultCardActions_HasSharesActions = (HasSharesActions);\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx\n\n\n\n\n\n\n\n\n\nvar VaultStakeActions = function(param) {\n    var pool = param.pool, stakingTokenBalance = param.stakingTokenBalance, accountHasSharesStaked = param.accountHasSharesStaked, performanceFee = param.performanceFee;\n    var stakingToken = pool.stakingToken, userDataLoaded = pool.userDataLoaded;\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(NotEnoughTokensModal/* default */.Z, {\n        tokenSymbol: stakingToken.symbol\n    })), 1), onPresentTokenRequired = ref[0];\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultStakeModal/* default */.Z, {\n        stakingMax: stakingTokenBalance,\n        pool: pool,\n        performanceFee: performanceFee\n    })), 1), onPresentStake = ref1[0];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(LockedStakeModal/* default */.Z, {\n        currentBalance: stakingTokenBalance,\n        stakingToken: stakingToken,\n        stakingTokenBalance: stakingTokenBalance\n    })), 1), openPresentLockedStakeModal = ref2[0];\n    var renderStakeAction = function() {\n        return accountHasSharesStaked ? /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultCardActions_HasSharesActions, {\n            pool: pool,\n            stakingTokenBalance: stakingTokenBalance,\n            performanceFee: performanceFee\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultStakeButtonGroup/* VaultStakeButtonGroup */.w, {\n            onFlexibleClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n            onLockedClick: pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault ? openPresentLockedStakeModal : null\n        });\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n        flexDirection: \"column\",\n        children: userDataLoaded ? renderStakeAction() : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n            width: \"100%\",\n            height: \"52px\"\n        })\n    });\n};\n/* harmony default export */ var VaultCardActions_VaultStakeActions = (VaultStakeActions);\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx\n\nfunction VaultCardActions_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: inline;\\n\"\n    ]);\n    VaultCardActions_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\nvar InlineText = (0,styled_components_browser_esm/* default */.ZP)(Text/* default */.Z).withConfig({\n    componentId: \"sc-4a96a4b0-0\"\n})(VaultCardActions_templateObject());\nvar CakeVaultCardActions = function(param) {\n    var pool = param.pool, accountHasSharesStaked = param.accountHasSharesStaked, isLoading = param.isLoading, performanceFee = param.performanceFee;\n    var stakingToken = pool.stakingToken, userData = pool.userData;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var stakingTokenBalance = (userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) ? new (bignumber_default())(userData.stakingTokenBalance) : bigNumber/* BIG_ZERO */.HW;\n    var ref = (0,useApprove/* useCheckVaultApprovalStatus */.dI)(pool.vaultKey), isVaultApproved = ref.isVaultApproved, setLastUpdated = ref.setLastUpdated;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n        flexDirection: \"column\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n            flexDirection: \"column\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                    display: \"inline\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(InlineText, {\n                            color: accountHasSharesStaked ? \"secondary\" : \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: [\n                                accountHasSharesStaked ? stakingToken.symbol : t(\"Stake\"),\n                                \" \"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                            color: accountHasSharesStaked ? \"textSubtle\" : \"secondary\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: accountHasSharesStaked ? t(\"Staked\") : \"\".concat(stakingToken.symbol)\n                        })\n                    ]\n                }),\n                isVaultApproved ? /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultCardActions_VaultStakeActions, {\n                    pool: pool,\n                    stakingTokenBalance: stakingTokenBalance,\n                    accountHasSharesStaked: accountHasSharesStaked,\n                    performanceFee: performanceFee\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultCardActions_VaultApprovalAction, {\n                    vaultKey: pool.vaultKey,\n                    isLoading: isLoading,\n                    setLastUpdated: setLastUpdated\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var VaultCardActions = (CakeVaultCardActions);\n\n// EXTERNAL MODULE: ./src/utils/cakePool.ts\nvar cakePool = __webpack_require__(27240);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Balance/BalanceWithLoading.tsx\nvar BalanceWithLoading = __webpack_require__(84102);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Help.tsx\nvar Help = __webpack_require__(78933);\n// EXTERNAL MODULE: ./src/components/Divider/index.tsx\nvar Divider = __webpack_require__(22868);\n// EXTERNAL MODULE: ./src/hooks/useBUSDPrice.ts\nvar useBUSDPrice = __webpack_require__(36695);\n// EXTERNAL MODULE: ../../packages/utils/isUndefinedOrNull.ts\nvar isUndefinedOrNull = __webpack_require__(16844);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/BurningCountDown.tsx\nvar BurningCountDown = __webpack_require__(30344);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Buttons/AddCakeButton.tsx + 1 modules\nvar AddCakeButton = __webpack_require__(99420);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Buttons/ExtendDurationButton.tsx + 2 modules\nvar ExtendDurationButton = __webpack_require__(62164);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/AfterLockedActions.tsx + 1 modules\nvar AfterLockedActions = __webpack_require__(56897);\n;// CONCATENATED MODULE: ./src/views/Pools/components/LockedPool/Common/LockedActions.tsx\n\n\n\n\n\n\n\n\n\n\n\nvar LockedActions = function(param) {\n    var userShares = param.userShares, locked = param.locked, lockEndTime = param.lockEndTime, lockStartTime = param.lockStartTime, stakingToken = param.stakingToken, stakingTokenBalance = param.stakingTokenBalance, lockedAmount = param.lockedAmount;\n    var position = (0,react.useMemo)(function() {\n        return (0,cakePool/* getVaultPosition */.cP)({\n            userShares: userShares,\n            locked: locked,\n            lockEndTime: lockEndTime\n        });\n    }, [\n        userShares,\n        locked,\n        lockEndTime\n    ]);\n    var t = (0,src/* useTranslation */.$G)().t;\n    var lockedAmountAsNumber = (0,formatBalance/* getBalanceNumber */.mW)(lockedAmount);\n    var currentBalance = (0,react.useMemo)(function() {\n        return stakingTokenBalance ? new (bignumber_default())(stakingTokenBalance) : bigNumber/* BIG_ZERO */.HW;\n    }, [\n        stakingTokenBalance\n    ]);\n    if (position === cakePool/* VaultPosition.Locked */.PS.Locked) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                    width: \"100%\",\n                    mr: \"4px\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(AddCakeButton/* default */.Z, {\n                        lockEndTime: lockEndTime,\n                        lockStartTime: lockStartTime,\n                        currentLockedAmount: lockedAmount,\n                        stakingToken: stakingToken,\n                        currentBalance: currentBalance,\n                        stakingTokenBalance: stakingTokenBalance\n                    })\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                    width: \"100%\",\n                    ml: \"4px\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ExtendDurationButton/* default */.Z, {\n                        lockEndTime: lockEndTime,\n                        lockStartTime: lockStartTime,\n                        stakingToken: stakingToken,\n                        currentBalance: currentBalance,\n                        currentLockedAmount: lockedAmountAsNumber,\n                        children: t(\"Extend\")\n                    })\n                })\n            ]\n        });\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(AfterLockedActions/* default */.Z, {\n        lockEndTime: lockEndTime,\n        lockStartTime: lockStartTime,\n        position: position,\n        currentLockedAmount: lockedAmountAsNumber,\n        stakingToken: stakingToken\n    });\n};\n/* harmony default export */ var Common_LockedActions = (LockedActions);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/YieldBoostRow.tsx\nvar YieldBoostRow = __webpack_require__(53331);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/LockDurationRow.tsx\nvar LockDurationRow = __webpack_require__(28274);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Link/Link.tsx\nvar Link = __webpack_require__(73697);\n;// CONCATENATED MODULE: ./src/views/Pools/components/LockedPool/Common/IfoCakeRow.tsx\n\nfunction IfoCakeRow_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: inline;\\n\"\n    ]);\n    IfoCakeRow_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\nvar InlineLink = (0,styled_components_browser_esm/* default */.ZP)(Link/* default */.Z).withConfig({\n    componentId: \"sc-dfdf4783-0\"\n})(IfoCakeRow_templateObject());\nvar IfoCakeRow = function() {\n    var t = (0,src/* useTranslation */.$G)().t;\n    var credit = (0,hooks/* useIfoCredit */.cq)();\n    var ceiling = (0,hooks/* useIfoCeiling */.dd)();\n    var weeksDisplay = (0,helpers/* getICakeWeekDisplay */.XW)(ceiling);\n    var ref = (0,useTooltip/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                children: t(\"The number of iCAKE equals the locked staking amount if the staking duration is longer than %weeks% weeks. If the staking duration is less than %weeks% weeks, it will linearly decrease based on the staking duration.\", {\n                    weeks: weeksDisplay\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineLink, {\n                external: true,\n                href: \"https://docs.pancakeswap.finance/products/ifo-initial-farm-offering/icake\",\n                children: t(\"Learn more about iCAKE\")\n            })\n        ]\n    }), {\n        placement: \"bottom-start\"\n    }), targetRef = ref.targetRef, tooltip = ref.tooltip, tooltipVisible = ref.tooltipVisible;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [\n            tooltipVisible && tooltip,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    ref: targetRef,\n                    color: \"textSubtle\",\n                    bold: true,\n                    fontSize: \"12px\",\n                    children: t(\"iCAKE\")\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(BalanceWithLoading/* default */.Z, {\n                color: \"text\",\n                bold: true,\n                fontSize: \"16px\",\n                decimals: 3,\n                value: (0,formatBalance/* getBalanceNumber */.mW)(credit)\n            })\n        ]\n    });\n};\n/* harmony default export */ var Common_IfoCakeRow = (IfoCakeRow);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/hooks/useUserDataInVaultPresenter.ts\nvar useUserDataInVaultPresenter = __webpack_require__(8810);\n;// CONCATENATED MODULE: ./src/views/Pools/components/LockedPool/LockedStakingApy.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LockedStakingApy = function(param) {\n    var stakingToken = param.stakingToken, stakingTokenBalance = param.stakingTokenBalance, userData = param.userData, showICake = param.showICake;\n    var ref;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var position = (0,react.useMemo)(function() {\n        return (0,cakePool/* getVaultPosition */.cP)({\n            userShares: userData === null || userData === void 0 ? void 0 : userData.userShares,\n            locked: userData === null || userData === void 0 ? void 0 : userData.locked,\n            lockEndTime: userData === null || userData === void 0 ? void 0 : userData.lockEndTime\n        });\n    }, [\n        userData\n    ]);\n    var currentLockedAmountAsBigNumber = (0,react.useMemo)(function() {\n        var ref;\n        return userData === null || userData === void 0 ? void 0 : (ref = userData.balance) === null || ref === void 0 ? void 0 : ref.cakeAsBigNumber;\n    }, [\n        userData === null || userData === void 0 ? void 0 : (ref = userData.balance) === null || ref === void 0 ? void 0 : ref.cakeAsBigNumber\n    ]);\n    var currentLockedAmount = (0,formatBalance/* getBalanceNumber */.mW)(currentLockedAmountAsBigNumber);\n    var usdValueStaked = (0,useBUSDPrice/* useBUSDCakeAmount */.Tx)(currentLockedAmount);\n    var ref1 = (0,useUserDataInVaultPresenter/* default */.Z)({\n        lockStartTime: userData === null || userData === void 0 ? void 0 : userData.lockStartTime,\n        lockEndTime: userData === null || userData === void 0 ? void 0 : userData.lockEndTime,\n        burnStartTime: userData === null || userData === void 0 ? void 0 : userData.burnStartTime\n    }), weekDuration = ref1.weekDuration, lockEndDate = ref1.lockEndDate, secondDuration = ref1.secondDuration, remainingTime = ref1.remainingTime, burnStartTime = ref1.burnStartTime;\n    var lockedApy = (0,useVaultApy/* useVaultApy */.o)({\n        duration: secondDuration\n    }).lockedApy;\n    // earningTokenBalance includes overdue fee if any\n    var earningTokenBalance = (0,react.useMemo)(function() {\n        return (0,formatBalance/* getBalanceNumber */.mW)(currentLockedAmountAsBigNumber.minus(userData === null || userData === void 0 ? void 0 : userData.cakeAtLastUserAction));\n    }, [\n        currentLockedAmountAsBigNumber,\n        userData === null || userData === void 0 ? void 0 : userData.cakeAtLastUserAction\n    ]);\n    var tooltipContent = t(\"Calculated based on current rates and subject to change based on pool conditions. It is an estimate provided for your convenience only, and by no means represents guaranteed returns.\");\n    var ref2 = (0,useTooltip/* default */.Z)(tooltipContent, {\n        placement: \"bottom-start\"\n    }), targetRef = ref2.targetRef, tooltip = ref2.tooltip, tooltipVisible = ref2.tooltipVisible;\n    var tooltipContentOfBurn = t(\"After Burning starts at %burnStartTime%. You need to renew your fix-term position, to initiate a new lock or convert your staking position to flexible before it starts. Otherwise all the rewards will be burned within the next 90 days.\", {\n        burnStartTime: burnStartTime\n    });\n    var ref3 = (0,useTooltip/* default */.Z)(tooltipContentOfBurn, {\n        placement: \"bottom\"\n    }), tagTargetRefOfBurn = ref3.targetRef, tagTooltipOfBurn = ref3.tooltip, tagTooltipVisibleOfBurn = ref3.tooltipVisible;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Card/* LightGreyCard */.m5, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                justifyContent: \"space-between\",\n                mb: \"16px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: \"textSubtle\",\n                                textTransform: \"uppercase\",\n                                bold: true,\n                                fontSize: \"12px\",\n                                children: t(\"CAKE locked\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(BalanceWithLoading/* default */.Z, {\n                                color: \"text\",\n                                bold: true,\n                                fontSize: \"16px\",\n                                value: currentLockedAmount,\n                                decimals: 5\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(BalanceWithLoading/* default */.Z, {\n                                value: usdValueStaked,\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                decimals: 2,\n                                prefix: \"~\",\n                                unit: \" USD\"\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: \"textSubtle\",\n                                textTransform: \"uppercase\",\n                                bold: true,\n                                fontSize: \"12px\",\n                                children: t(\"Unlocks In\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                color: position >= cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd ? \"#D67E0A\" : \"text\",\n                                bold: true,\n                                fontSize: \"16px\",\n                                children: [\n                                    position >= cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd ? t(\"Unlocked\") : remainingTime,\n                                    tagTooltipVisibleOfBurn && tagTooltipOfBurn,\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"span\", {\n                                        ref: tagTargetRefOfBurn,\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Help/* default */.Z, {\n                                            ml: \"4px\",\n                                            width: \"20px\",\n                                            height: \"20px\",\n                                            color: \"textSubtle\"\n                                        })\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: position >= cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd ? \"#D67E0A\" : \"text\",\n                                fontSize: \"12px\",\n                                children: t(\"On %date%\", {\n                                    date: lockEndDate\n                                })\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                mb: \"16px\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Common_LockedActions, {\n                    userShares: userData === null || userData === void 0 ? void 0 : userData.userShares,\n                    locked: userData === null || userData === void 0 ? void 0 : userData.locked,\n                    lockEndTime: userData === null || userData === void 0 ? void 0 : userData.lockEndTime,\n                    lockStartTime: userData === null || userData === void 0 ? void 0 : userData.lockStartTime,\n                    stakingToken: stakingToken,\n                    stakingTokenBalance: stakingTokenBalance,\n                    lockedAmount: currentLockedAmountAsBigNumber\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Divider/* default */.Z, {}),\n            ![\n                cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd,\n                cakePool/* VaultPosition.AfterBurning */.PS.AfterBurning\n            ].includes(position) && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    tooltipVisible && tooltip,\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            ref: targetRef,\n                            color: \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: t(\"APY\")\n                        })\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(BalanceWithLoading/* default */.Z, {\n                        color: \"text\",\n                        bold: true,\n                        fontSize: \"16px\",\n                        value: parseFloat(lockedApy),\n                        decimals: 2,\n                        unit: \"%\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(LockDurationRow/* default */.Z, {\n                weekDuration: weekDuration\n            }),\n            ![\n                cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd,\n                cakePool/* VaultPosition.AfterBurning */.PS.AfterBurning\n            ].includes(position) && /*#__PURE__*/ (0,jsx_runtime.jsx)(YieldBoostRow/* default */.Z, {\n                secondDuration: secondDuration\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: t(\"Recent CAKE profit\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(BalanceWithLoading/* default */.Z, {\n                        color: \"text\",\n                        bold: true,\n                        fontSize: \"16px\",\n                        value: earningTokenBalance,\n                        decimals: 5\n                    })\n                ]\n            }),\n            position === cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: t(\"After Burning In\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"failure\",\n                        bold: true,\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(BurningCountDown/* default */.Z, {\n                            lockEndTime: userData === null || userData === void 0 ? void 0 : userData.lockEndTime\n                        })\n                    })\n                ]\n            }),\n            position === cakePool/* VaultPosition.AfterBurning */.PS.AfterBurning && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: t(\"After burning\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"failure\",\n                        bold: true,\n                        children: (0,isUndefinedOrNull/* default */.Z)(userData === null || userData === void 0 ? void 0 : userData.currentOverdueFee) ? \"-\" : t(\"%amount% Burned\", {\n                            amount: (0,formatBalance/* getFullDisplayBalance */.NJ)(userData === null || userData === void 0 ? void 0 : userData.currentOverdueFee, 18, 5)\n                        })\n                    })\n                ]\n            }),\n            showICake && /*#__PURE__*/ (0,jsx_runtime.jsx)(Common_IfoCakeRow, {})\n        ]\n    });\n};\n/* harmony default export */ var LockedPool_LockedStakingApy = (/*#__PURE__*/(0,react.memo)(LockedStakingApy));\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/index.tsx\n\n\n\n\nfunction CakeVaultCard_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  min-height: \",\n        \";\\n\"\n    ]);\n    CakeVaultCard_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar StyledCardBody = (0,styled_components_browser_esm/* default */.ZP)(CardBody/* default */.Z).withConfig({\n    componentId: \"sc-cf8ac297-0\"\n})(CakeVaultCard_templateObject(), function(param) {\n    var isLoading = param.isLoading;\n    return isLoading ? \"0\" : \"254px\";\n});\nvar CakeVaultDetail = function(param) {\n    var _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading, account = param.account, pool = param.pool, vaultPool = param.vaultPool, accountHasSharesStaked = param.accountHasSharesStaked, showICake = param.showICake, performanceFeeAsDecimal = param.performanceFeeAsDecimal, defaultFooterExpanded = param.defaultFooterExpanded;\n    var ref;\n    var t = (0,src/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledCardBody, {\n                isLoading: isLoading,\n                children: [\n                    account && pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultPositionTag/* VaultPositionTagWithLabel */.X, {\n                        userData: vaultPool.userData\n                    }),\n                    account && pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && vaultPool.userData.locked ? /*#__PURE__*/ (0,jsx_runtime.jsx)(LockedPool_LockedStakingApy, {\n                        userData: vaultPool.userData,\n                        stakingToken: pool === null || pool === void 0 ? void 0 : pool.stakingToken,\n                        stakingTokenBalance: pool === null || pool === void 0 ? void 0 : (ref = pool.userData) === null || ref === void 0 ? void 0 : ref.stakingTokenBalance,\n                        showICake: showICake\n                    }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(StakingApy, {\n                                pool: pool\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(FlexGap/* default */.Z, {\n                                mt: \"16px\",\n                                gap: \"24px\",\n                                flexDirection: accountHasSharesStaked ? \"column-reverse\" : \"column\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                        children: [\n                                            account && /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                                                mb: \"8px\",\n                                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(UnstakingFeeCountdownRow/* default */.Z, {\n                                                    vaultKey: pool.vaultKey\n                                                })\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(RecentCakeProfitRow, {\n                                                pool: pool\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                                        flexDirection: \"column\",\n                                        children: account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultCardActions, {\n                                            pool: pool,\n                                            accountHasSharesStaked: accountHasSharesStaked,\n                                            isLoading: isLoading,\n                                            performanceFee: performanceFeeAsDecimal\n                                        }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                                            children: [\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                    mb: \"10px\",\n                                                    textTransform: \"uppercase\",\n                                                    fontSize: \"12px\",\n                                                    color: \"textSubtle\",\n                                                    bold: true,\n                                                    children: t(\"Start earning\")\n                                                }),\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {})\n                                            ]\n                                        })\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardFooter/* default */.Z, {\n                defaultExpanded: defaultFooterExpanded,\n                pool: pool,\n                account: account\n            })\n        ]\n    });\n};\nvar CakeVaultCard = function(_param) {\n    var pool = _param.pool, showStakedOnly = _param.showStakedOnly, defaultFooterExpanded = _param.defaultFooterExpanded, _showICake = _param.showICake, showICake = _showICake === void 0 ? false : _showICake, _showSkeleton = _param.showSkeleton, showSkeleton = _showSkeleton === void 0 ? true : _showSkeleton, props = (0,_object_without_properties/* default */.Z)(_param, [\n        \"pool\",\n        \"showStakedOnly\",\n        \"defaultFooterExpanded\",\n        \"showICake\",\n        \"showSkeleton\"\n    ]);\n    var ref = (0,wagmi_esm/* useAccount */.mA)(), account = ref.address;\n    var vaultPool = (0,hooks/* useVaultPoolByKey */.eB)(pool.vaultKey);\n    var totalStaked = pool.totalStaked;\n    var _userData = vaultPool.userData, userShares = _userData.userShares, isVaultUserDataLoading = _userData.isLoading, performanceFeeAsDecimal = vaultPool.fees.performanceFeeAsDecimal;\n    var accountHasSharesStaked = userShares && userShares.gt(0);\n    var isLoading = !pool.userData || isVaultUserDataLoading;\n    if (showStakedOnly && !accountHasSharesStaked) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledCard/* StyledCard */.r, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({\n        isActive: true\n    }, props), {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCardHeader/* PoolCardHeader */.J, {\n                isStaking: accountHasSharesStaked,\n                children: !showSkeleton || totalStaked && totalStaked.gte(0) ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCardHeader/* PoolCardHeaderTitle */.e, {\n                            title: pools/* vaultPoolConfig */.Y4[pool.vaultKey].name,\n                            subTitle: pools/* vaultPoolConfig */.Y4[pool.vaultKey].description\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(TokenPairImage/* default */.Z, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, pools/* vaultPoolConfig */.Y4[pool.vaultKey].tokenImage), {\n                            width: 64,\n                            height: 64\n                        }))\n                    ]\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                    width: \"100%\",\n                    justifyContent: \"space-between\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                            flexDirection: \"column\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                                    width: 100,\n                                    height: 26,\n                                    mb: \"4px\"\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                                    width: 65,\n                                    height: 20\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                            width: 58,\n                            height: 58,\n                            variant: \"circle\"\n                        })\n                    ]\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CakeVaultDetail, {\n                isLoading: isLoading,\n                account: account,\n                pool: pool,\n                vaultPool: vaultPool,\n                accountHasSharesStaked: accountHasSharesStaked,\n                showICake: showICake,\n                performanceFeeAsDecimal: performanceFeeAsDecimal,\n                defaultFooterExpanded: defaultFooterExpanded\n            })\n        ]\n    }));\n};\n/* harmony default export */ var components_CakeVaultCard = (CakeVaultCard);\n\n\n/***/ }),\n\n/***/ 45249:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92228);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2784);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3411);\n/* harmony import */ var _pancakeswap_localization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(65957);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8046);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(76903);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(69689);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(67252);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(78933);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(6099);\n/* harmony import */ var _PoolStatsInfo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82112);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  align-items: center;\\n  justify-content: space-between;\\n  button {\\n    padding: 0;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  svg {\\n    height: 14px;\\n    width: 14px;\\n  }\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\nvar _Tags = _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* .Farm.Tags */ .l.Tags, CompoundingPoolTag = _Tags.CompoundingPoolTag, ManualPoolTag = _Tags.ManualPoolTag;\nvar ExpandableButtonWrapper = (0,styled_components__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .ZP)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z).withConfig({\n    componentId: \"sc-f78aeef5-0\"\n})(_templateObject());\nvar ExpandedWrapper = (0,styled_components__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .ZP)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z).withConfig({\n    componentId: \"sc-f78aeef5-1\"\n})(_templateObject1());\nvar Footer = function(param) {\n    var pool = param.pool, account = param.account, defaultExpanded = param.defaultExpanded, children = param.children;\n    var vaultKey = pool.vaultKey;\n    var t = (0,_pancakeswap_localization__WEBPACK_IMPORTED_MODULE_3__/* .useTranslation */ .$G)().t;\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(defaultExpanded || false), isExpanded = ref[0], setIsExpanded = ref[1];\n    var manualTooltipText = t(\"You must harvest and compound your earnings from this pool manually.\");\n    var autoTooltipText = t(\"Rewards are distributed and included into your staking balance automatically. There’s no need to manually compound your rewards.\");\n    var ref1 = (0,_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z)(vaultKey ? autoTooltipText : manualTooltipText, {\n        placement: \"bottom\"\n    }), targetRef = ref1.targetRef, tooltip = ref1.tooltip, tooltipVisible = ref1.tooltipVisible;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_9__/* [\"default\"] */ .Z, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(ExpandableButtonWrapper, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z, {\n                        alignItems: \"center\",\n                        children: [\n                            vaultKey ? /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CompoundingPoolTag, {}) : /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ManualPoolTag, {}),\n                            tooltipVisible && tooltip,\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z, {\n                                ref: targetRef,\n                                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z, {\n                                    ml: \"4px\",\n                                    width: \"20px\",\n                                    height: \"20px\",\n                                    color: \"textSubtle\"\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__/* .ExpandableLabel */ .L, {\n                        expanded: isExpanded,\n                        onClick: function() {\n                            return setIsExpanded(!isExpanded);\n                        },\n                        children: isExpanded ? t(\"Hide\") : t(\"Details\")\n                    })\n                ]\n            }),\n            isExpanded && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ExpandedWrapper, {\n                flexDirection: \"column\",\n                children: children || /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_PoolStatsInfo__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z, {\n                    pool: pool,\n                    account: account\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Footer);\n\n\n/***/ }),\n\n/***/ 76554:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"J\": function() { return /* binding */ PoolCardHeader; },\n/* harmony export */   \"e\": function() { return /* binding */ PoolCardHeaderTitle; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92228);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52322);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3411);\n/* harmony import */ var _util_getThemeValue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12780);\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3397);\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(76903);\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(48497);\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(89495);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  background: \",\n        \";\\n  border-radius: \",\n        \";\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\nvar Wrapper = (0,styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .ZP)(_components__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z).withConfig({\n    componentId: \"sc-2895631f-0\"\n})(_templateObject(), function(param) {\n    var isFinished = param.isFinished, background = param.background, theme = param.theme;\n    return isFinished ? theme.colors.backgroundDisabled : (0,_util_getThemeValue__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(theme, \"colors.\".concat(background));\n}, function(param) {\n    var theme = param.theme;\n    return \"\".concat(theme.radii.card, \" \").concat(theme.radii.card, \" 0 0\");\n});\nvar PoolCardHeader = function(param) {\n    var _isFinished = param.isFinished, isFinished = _isFinished === void 0 ? false : _isFinished, _isStaking = param.isStaking, isStaking = _isStaking === void 0 ? false : _isStaking, children = param.children;\n    var background = isStaking ? \"gradientBubblegum\" : \"gradientCardHeader\";\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Wrapper, {\n        isFinished: isFinished,\n        background: background,\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z, {\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: children\n        })\n    });\n};\nvar PoolCardHeaderTitle = function(param) {\n    var isFinished = param.isFinished, title = param.title, subTitle = param.subTitle;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z, {\n        flexDirection: \"column\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z, {\n                color: isFinished ? \"textDisabled\" : \"body\",\n                scale: \"lg\",\n                children: title\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z, {\n                fontSize: \"14px\",\n                color: isFinished ? \"textDisabled\" : \"textSubtle\",\n                children: subTitle\n            })\n        ]\n    });\n};\n\n\n/***/ }),\n\n/***/ 89718:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"r\": function() { return /* binding */ StyledCard; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92228);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3411);\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8659);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  min-width: 280px;\\n  max-width: 100%;\\n  margin: 0 0 24px 0;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-self: baseline;\\n  position: relative;\\n  color: \",\n        \";\\n\\n  \",\n        \" {\\n    max-width: 350px;\\n    margin: 0 12px 46px;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\nvar StyledCard = (0,styled_components__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .ZP)(_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z).withConfig({\n    componentId: \"sc-784bdb5d-0\"\n})(_templateObject(), function(param) {\n    var isFinished = param.isFinished, theme = param.theme;\n    return theme.colors[isFinished ? \"textDisabled\" : \"secondary\"];\n}, function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","d","CakeVaultDetail","components_CakeVaultCard","_object_spread","_object_spread_props","_object_without_properties","_tagged_template_literal","jsx_runtime","CardBody","FlexGap","Box","Flex","Text","StyledCard","PoolCardHeader","TokenPairImage","Skeleton","wagmi_esm","ConnectWalletButton","pools","src","hooks","types","styled_components_browser_esm","CardFooter","VaultPositionTag","UnstakingFeeCountdownRow","farms_hooks","helpers","useTooltip","TooltipText","Balance","AutoEarningsBreakdown","RecentCakeProfitBalance","param","cakeToDisplay","pool","account","ref","Z","jsx","placement","targetRef","tooltip","tooltipVisible","jsxs","Fragment","children","small","fontSize","value","RecentCakeProfitCountdownRow","t","$G","mA","address","ref1","eB","vaultKey","pricePerFullShare","userData","cakePriceBusd","Iu","ref2","UN","cakeAtLastUserAction","userShares","toNumber","om","CakeVault","currentPerformanceFee","plus","currentOverdueFee","hasAutoEarnings","autoCakeToDisplay","gt","alignItems","justifyContent","concat","_sliced_to_array","useModal","Button","Calculate","Card","useVaultApy","react","VaultRoiCalculatorModal","_templateObject","data","AprLabelContainer","ZP","withConfig","componentId","StakingApy","memo","o","flexibleApy","lockedApy","onPresentFlexibleApyModal","E","onPresentLockedApyModal","initialView","m5","color","textTransform","bold","parseFloat","decimals","unit","onClick","e","stopPropagation","variant","width","height","padding","marginLeft","gap","flexWrap","style","whiteSpace","bignumber","bignumber_default","n","bigNumber","AutoRenew","useApprove","VaultApprovalAction","_isLoading","isLoading","setLastUpdated","Le","handleApprove","pendingTx","endIcon","spin","disabled","NotEnoughTokensModal","VaultStakeButtonGroup","VaultStakeModal","LockedStakeModal","IconButton","Minus","Add","formatBalance","ConvertToLock","HasSharesActions","stakingTokenBalance","performanceFee","_balance","_userData","balance","cakeAsBigNumber","cakeAsNumberBalance","stakingToken","stakedDollarValue","mW","multipliedBy","onPresentTokenRequired","tokenSymbol","symbol","onPresentStake","stakingMax","onPresentUnstake","ref3","isRemovingStake","sousId","mb","flexDirection","as","prefix","mt","mr","currentStakedAmount","VaultStakeActions","accountHasSharesStaked","userDataLoaded","openPresentLockedStakeModal","currentBalance","w","onFlexibleClick","onLockedClick","VaultCardActions_templateObject","InlineText","CakeVaultCardActions","HW","dI","isVaultApproved","display","cakePool","BalanceWithLoading","Help","Divider","useBUSDPrice","isUndefinedOrNull","BurningCountDown","AddCakeButton","ExtendDurationButton","AfterLockedActions","LockedActions","locked","lockEndTime","lockStartTime","lockedAmount","position","useMemo","cP","lockedAmountAsNumber","PS","Locked","currentLockedAmount","ml","YieldBoostRow","LockDurationRow","Link","IfoCakeRow_templateObject","InlineLink","IfoCakeRow","credit","cq","ceiling","dd","weeksDisplay","XW","weeks","external","href","useUserDataInVaultPresenter","LockedStakingApy","showICake","currentLockedAmountAsBigNumber","usdValueStaked","Tx","burnStartTime","weekDuration","lockEndDate","secondDuration","remainingTime","duration","earningTokenBalance","minus","tooltipContent","tooltipContentOfBurn","tagTargetRefOfBurn","tagTooltipOfBurn","tagTooltipVisibleOfBurn","LockedEnd","date","AfterBurning","includes","amount","NJ","LockedPool_LockedStakingApy","CakeVaultCard_templateObject","StyledCardBody","vaultPool","performanceFeeAsDecimal","defaultFooterExpanded","X","defaultExpanded","_param","showStakedOnly","_showICake","_showSkeleton","showSkeleton","props","totalStaked","isVaultUserDataLoading","fees","r","isActive","J","isStaking","gte","title","Y4","name","subTitle","description","tokenImage","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_6__","_pancakeswap_localization__WEBPACK_IMPORTED_MODULE_3__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_9__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__","_PoolStatsInfo__WEBPACK_IMPORTED_MODULE_4__","_templateObject1","_Tags","l","Tags","CompoundingPoolTag","ManualPoolTag","ExpandableButtonWrapper","ExpandedWrapper","Footer","useState","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","L","expanded","PoolCardHeaderTitle","styled_components__WEBPACK_IMPORTED_MODULE_2__","_util_getThemeValue__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_3__","_components__WEBPACK_IMPORTED_MODULE_5__","_components__WEBPACK_IMPORTED_MODULE_6__","_components__WEBPACK_IMPORTED_MODULE_7__","Wrapper","isFinished","background","theme","colors","backgroundDisabled","radii","card","_isFinished","_isStaking","scale","styled_components__WEBPACK_IMPORTED_MODULE_1__","_components__WEBPACK_IMPORTED_MODULE_2__","mediaQueries","sm"],"sourceRoot":""}