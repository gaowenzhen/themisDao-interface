{"version":3,"file":"static/chunks/6071-2a04dc1909d2d7f6.js","mappings":"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","sources":["webpack://_N_E/./src/components/CommitButton.tsx","webpack://_N_E/./src/components/CurrencyInputPanel/ZapCheckbox.tsx","webpack://_N_E/./src/hooks/useCurrentBlockTimestamp.ts","webpack://_N_E/./src/hooks/useTransactionDeadline.ts","webpack://_N_E/./src/views/Farms/hooks/getNonBscVaultFee.ts","webpack://_N_E/./src/utils/calls/farms.ts","webpack://_N_E/./src/utils/calls/estimateGas.ts","webpack://_N_E/./src/utils/calls/pools.ts","webpack://_N_E/./src/utils/calls/index.ts","webpack://_N_E/./src/utils/getLpSymbol.ts","webpack://_N_E/./src/utils/transactionErrorToUserReadableMessage.ts","webpack://_N_E/./src/views/AddLiquidity/components/ZapErrorMessage.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { Button, ButtonProps } from '@pancakeswap/uikit'\nimport { useSwitchNetworkLoading } from 'hooks/useSwitchNetworkLoading'\nimport { useSetAtom } from 'jotai'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport { hideWrongNetworkModalAtom } from './NetworkModal'\nimport Trans from './Trans'\n\nconst wrongNetworkProps: ButtonProps = {\n  variant: 'danger',\n  disabled: false,\n  children: <Trans>Wrong Network</Trans>,\n}\n\nexport const CommitButton = (props: ButtonProps) => {\n  const { isWrongNetwork } = useActiveChainId()\n  const [switchNetworkLoading] = useSwitchNetworkLoading()\n  const setHideWrongNetwork = useSetAtom(hideWrongNetworkModalAtom)\n\n  return (\n    <Button\n      {...props}\n      onClick={(e) => {\n        if (isWrongNetwork) {\n          setHideWrongNetwork(false)\n        } else {\n          props.onClick?.(e)\n        }\n      }}\n      {...(switchNetworkLoading && { disabled: true })}\n      {...(isWrongNetwork && wrongNetworkProps)}\n    />\n  )\n}\n","import { Checkbox } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst ZapCheckBoxWrapper = styled.label`\n  display: grid;\n  place-content: center;\n  background: ${({ theme }) => theme.colors.background};\n  border-radius: 8px 0px 0px 0px;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-right: none;\n  width: 40px;\n`\n\nexport const ZapCheckbox = (props) => {\n  return (\n    <ZapCheckBoxWrapper>\n      <Checkbox scale=\"sm\" {...props} />\n    </ZapCheckBoxWrapper>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getNonBscVaultContract, getCrossFarmingSenderContract } from 'utils/contractHelpers'\n\nexport enum MessageTypes {\n  Deposit = 0,\n  Withdraw = 1,\n  EmergencyWithdraw = 2,\n  Claim = 3,\n}\n\nenum Chains {\n  EVM = 0,\n  BSC = 1,\n}\n\ninterface CalculateTotalFeeProps {\n  pid: number\n  amount: string\n  chainId: number\n  userAddress: string\n  messageType: MessageTypes\n  gasPrice: number\n  oraclePrice: string\n}\n\nconst COMPENSATION_PRECISION = 1e5\nconst ORACLE_PRECISION = 1e18\nconst BNB_CHANGE = 5000000000000000\nconst BUFFER = 1.3\nconst WITHDRAW_BUFFER = 1.4\n\nexport const getNonBscVaultContractFee = async ({\n  pid,\n  amount,\n  chainId,\n  userAddress,\n  messageType,\n  oraclePrice,\n  gasPrice,\n}: CalculateTotalFeeProps) => {\n  try {\n    const nonBscVaultContract = getNonBscVaultContract(null, chainId)\n    const crossFarmingAddress = getCrossFarmingSenderContract(null, chainId)\n    const exchangeRate = new BigNumber(ORACLE_PRECISION).div(oraclePrice).times(ORACLE_PRECISION) // invert into BNB/ETH price\n\n    const getNonce = await crossFarmingAddress.nonces(userAddress, pid)\n    const nonce = new BigNumber(getNonce.toString()).toJSON()\n    const [encodeMessage, hasFirstTime, estimateGaslimit] = await Promise.all([\n      nonBscVaultContract.encodeMessage(userAddress, pid, amount, messageType, nonce),\n      crossFarmingAddress.is1st(userAddress),\n      crossFarmingAddress.estimateGaslimit(Chains.BSC, userAddress, messageType),\n    ])\n    const calcFee = await nonBscVaultContract.calcFee(encodeMessage)\n\n    const msgBusFee = new BigNumber(calcFee.toString())\n    const destTxFee = new BigNumber(gasPrice)\n      .times(estimateGaslimit.toString())\n      .times(exchangeRate)\n      .times(COMPENSATION_PRECISION)\n      .div(new BigNumber(ORACLE_PRECISION).times(COMPENSATION_PRECISION))\n    const totalFee = new BigNumber(msgBusFee).plus(destTxFee)\n\n    if (!hasFirstTime) {\n      const depositFee = new BigNumber(BNB_CHANGE).times(exchangeRate).div(ORACLE_PRECISION)\n      return totalFee.plus(depositFee).times(BUFFER).toFixed(0)\n    }\n\n    if (messageType >= MessageTypes.Withdraw) {\n      const estimateEvmGaslimit = await crossFarmingAddress.estimateGaslimit(Chains.EVM, userAddress, messageType)\n      const fee = msgBusFee.times(exchangeRate).div(ORACLE_PRECISION)\n      const total = new BigNumber(gasPrice).times(estimateEvmGaslimit.toString()).plus(fee)\n      return totalFee.plus(total).times(WITHDRAW_BUFFER).toFixed(0)\n    }\n\n    return totalFee.times(BUFFER).toFixed(0)\n  } catch (error) {\n    console.error('Failed to fetch non BscVault fee', error)\n    return BIG_ZERO.toJSON()\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { getNonBscVaultContractFee, MessageTypes } from 'views/Farms/hooks/getNonBscVaultFee'\n\nexport const stakeFarm = async (masterChefContract: Contract, pid, amount, gasPrice, gasLimit?: number) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  return masterChefContract.deposit(pid, value, {\n    gasLimit: gasLimit || DEFAULT_GAS_LIMIT,\n    gasPrice,\n  })\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount, gasPrice, gasLimit?: number) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  return masterChefContract.withdraw(pid, value, {\n    gasLimit: gasLimit || DEFAULT_GAS_LIMIT,\n    gasPrice,\n  })\n}\n\nexport const harvestFarm = async (masterChefContract, pid, gasPrice, gasLimit?: number) => {\n  return masterChefContract.deposit(pid, '0', {\n    gasLimit: gasLimit || DEFAULT_GAS_LIMIT,\n    gasPrice,\n  })\n}\n\nexport const nonBscStakeFarm = async (contract, pid, amount, gasPrice, account, oraclePrice, chainId) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const totalFee = await getNonBscVaultContractFee({\n    pid,\n    chainId,\n    gasPrice,\n    oraclePrice,\n    amount: value,\n    userAddress: account,\n    messageType: MessageTypes.Deposit,\n  })\n  console.info(totalFee, 'stake totalFee')\n  return contract.deposit(pid, value, { value: totalFee })\n}\n\nexport const nonBscUnstakeFarm = async (contract, pid, amount, gasPrice, account, oraclePrice, chainId) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const totalFee = await getNonBscVaultContractFee({\n    pid,\n    chainId,\n    gasPrice,\n    oraclePrice,\n    amount: value,\n    userAddress: account,\n    messageType: MessageTypes.Withdraw,\n  })\n  console.info(totalFee, 'unstake totalFee')\n  return contract.withdraw(pid, value, { value: totalFee })\n}\n","import { Contract, PayableOverrides } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { calculateGasMargin } from 'utils'\nimport { ContractMethodName, MaybeContract, ContractMethodParams } from 'utils/types'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async <C extends Contract = Contract, N extends ContractMethodName<C> = any>(\n  contract: MaybeContract<C>,\n  methodName: N,\n  methodArgs: ContractMethodParams<C, N>,\n  overrides: PayableOverrides = {},\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs, overrides)\n  // By convention, BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = calculateGasMargin(rawGasEstimation, gasMarginPer10000)\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async <C extends Contract = Contract, N extends ContractMethodName<C> = any>(\n  contract: MaybeContract<C>,\n  methodName: N,\n  methodArgs: ContractMethodParams<C, N>,\n  overrides: PayableOverrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<TransactionResponse> => {\n  const gasEstimation = await estimateGas(contract, methodName, methodArgs, overrides, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { bscRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = poolsConfig\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await bscRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress, 56),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress, 56),\n    name: 'bonusEndBlock',\n  }))\n  const [startBlocks, endBlocks] = await Promise.all([\n    multicall(sousChefV2, startBlockCalls),\n    multicall(sousChefV2, endBlockCalls),\n  ])\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","export * from './estimateGas'\nexport * from './farms'\nexport * from './pools'\n","import { WNATIVE, NATIVE } from '@pancakeswap/sdk'\n\nexport const getLPSymbol = (token0Symbol: string, token1Symbol: string, chainId: number) => {\n  if (token0Symbol === WNATIVE[chainId].symbol) {\n    return `${NATIVE[chainId].symbol}-${token1Symbol} LP`\n  }\n  if (token1Symbol === WNATIVE[chainId].symbol) {\n    return `${token0Symbol}-${NATIVE[chainId].symbol} LP`\n  }\n  return `${token0Symbol}-${token1Symbol} LP`\n}\n","import { TranslateFunction } from '@pancakeswap/localization'\n\n/**\n * This is hacking out the revert reason from the ethers provider thrown error however it can.\n * This object seems to be undocumented by ethers.\n * @param error an error from the ethers provider\n * @param t Translation function\n */\nexport function transactionErrorToUserReadableMessage(error: any, t: TranslateFunction) {\n  let reason: string | undefined\n  while (error) {\n    reason = error.reason ?? error.data?.message ?? error.message ?? reason\n    // eslint-disable-next-line no-param-reassign\n    error = error.error ?? error.data?.originalError\n  }\n\n  if (reason?.indexOf('execution reverted: ') === 0) reason = reason.substring('execution reverted: '.length)\n\n  switch (reason) {\n    case 'PancakeRouter: EXPIRED':\n      return t(\n        'The transaction could not be sent because the deadline has passed. Please check that your transaction deadline is not too low.',\n      )\n    case 'PancakeRouter: INSUFFICIENT_OUTPUT_AMOUNT':\n    case 'PancakeRouter: EXCESSIVE_INPUT_AMOUNT':\n    case 'PancakeRouter: INSUFFICIENT_A_AMOUNT':\n    case 'PancakeRouter: INSUFFICIENT_B_AMOUNT':\n      return t(\n        'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.',\n      )\n    case 'TransferHelper: TRANSFER_FROM_FAILED':\n      return t('The input token cannot be transferred. There may be an issue with the input token.')\n    case 'Pancake: TRANSFER_FAILED':\n      return t('The output token cannot be transferred. There may be an issue with the output token.')\n    default:\n      if (reason?.indexOf('undefined is not an object') !== -1) {\n        console.error(error, reason)\n        return t(\n          'An error occurred when trying to execute this operation. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading.',\n        )\n      }\n      return t('Unknown error%reason%. Try increasing your slippage tolerance.', {\n        reason: reason ? `: \"${reason}\"` : '',\n      })\n  }\n}\n","import { memo } from 'react'\nimport { Message, MessageText, Button, Box, Flex, useToast } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\ninterface ZapErrorMessagesProps {\n  isSingleToken: boolean\n  zapMode: boolean\n  toggleZapMode: (zapMode: boolean) => void\n  onModalDismiss: () => void\n}\n\nexport const ZapErrorMessages: React.FC<React.PropsWithChildren<ZapErrorMessagesProps>> = memo(\n  ({ isSingleToken, zapMode, toggleZapMode, onModalDismiss }) => {\n    const { t } = useTranslation()\n    const { toastInfo } = useToast()\n\n    const handleCloseButton = () => {\n      onModalDismiss()\n\n      if (zapMode) {\n        toggleZapMode(!zapMode)\n        toastInfo(t('Info'), t('Temporarily disabled Zap'))\n      }\n    }\n\n    return (\n      <Box margin=\"auto\" width={['100%', '100%', '380px']}>\n        <Message variant=\"warning\" mb=\"16px\">\n          <Flex flexDirection=\"column\">\n            <MessageText bold>{t('Currently using Zap for liquidity provisions.')}</MessageText>\n            <MessageText small>\n              {isSingleToken\n                ? t('Zap does NOT support tokens with fees on transfers. If you experience any issues, click')\n                : t(\n                    `Zap does NOT support tokens with fees on transfers. Please choose ’Don't convert’ and retry. If you experience any further issues, click`,\n                  )}\n              <Button p=\"0 4px\" scale=\"sm\" variant=\"text\" height=\"auto\" onClick={handleCloseButton}>\n                {t('here')}\n              </Button>\n              {t('to disable Zap temporarily.')}\n            </MessageText>\n          </Flex>\n        </Message>\n      </Box>\n    )\n  },\n)\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[6071],{\n\n/***/ 49384:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"A\": function() { return /* binding */ CommitButton; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(70865);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(96670);\n/* harmony import */ var _swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87394);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52322);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(48608);\n/* harmony import */ var hooks_useSwitchNetworkLoading__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(41774);\n/* harmony import */ var jotai__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72978);\n/* harmony import */ var hooks_useActiveChainId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76166);\n/* harmony import */ var _NetworkModal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(25145);\n/* harmony import */ var _Trans__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60471);\n\n\n\n\n\n\n\n\n\n\nvar wrongNetworkProps = {\n    variant: \"danger\",\n    disabled: false,\n    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Trans__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z, {\n        children: \"Wrong Network\"\n    })\n};\nvar CommitButton = function(props) {\n    var isWrongNetwork = (0,hooks_useActiveChainId__WEBPACK_IMPORTED_MODULE_2__/* .useActiveChainId */ .g)().isWrongNetwork;\n    var ref = (0,_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z)((0,hooks_useSwitchNetworkLoading__WEBPACK_IMPORTED_MODULE_1__/* .useSwitchNetworkLoading */ .c)(), 1), switchNetworkLoading = ref[0];\n    var setHideWrongNetwork = (0,jotai__WEBPACK_IMPORTED_MODULE_6__/* .useSetAtom */ .b9)(_NetworkModal__WEBPACK_IMPORTED_MODULE_3__/* .hideWrongNetworkModalAtom */ .v);\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z, (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_9__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z)({}, props), {\n        onClick: function(e) {\n            if (isWrongNetwork) {\n                setHideWrongNetwork(false);\n            } else {\n                var ref;\n                (ref = props.onClick) === null || ref === void 0 ? void 0 : ref.call(props, e);\n            }\n        }\n    }), switchNetworkLoading && {\n        disabled: true\n    }, isWrongNetwork && wrongNetworkProps));\n};\n\n\n/***/ }),\n\n/***/ 82708:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"y\": function() { return /* binding */ ZapCheckbox; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(70865);\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92228);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52322);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7887);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3411);\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  display: grid;\\n  place-content: center;\\n  background: \",\n        \";\\n  border-radius: 8px 0px 0px 0px;\\n  border: 1px solid \",\n        \";\\n  border-right: none;\\n  width: 40px;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\nvar ZapCheckBoxWrapper = styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].label.withConfig */ .ZP.label.withConfig({\n    componentId: \"sc-4a3af06d-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.background;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n});\nvar ZapCheckbox = function(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ZapCheckBoxWrapper, {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z, (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)({\n            scale: \"sm\"\n        }, props))\n    });\n};\n\n\n/***/ }),\n\n/***/ 2904:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ useCurrentBlockTimestamp; }\n/* harmony export */ });\n/* harmony import */ var _state_multicall_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87070);\n/* harmony import */ var _useContract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76269);\n\n\n// gets the current timestamp from the blockchain\nfunction useCurrentBlockTimestamp() {\n    var ref, ref1;\n    var multicall = (0,_useContract__WEBPACK_IMPORTED_MODULE_1__/* .useMulticallContract */ .gq)();\n    return (ref = (0,_state_multicall_hooks__WEBPACK_IMPORTED_MODULE_0__/* .useSingleCallResult */ .Wk)(multicall, \"getCurrentBlockTimestamp\")) === null || ref === void 0 ? void 0 : (ref1 = ref.result) === null || ref1 === void 0 ? void 0 : ref1[0];\n}\n\n\n/***/ }),\n\n/***/ 61558:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ useTransactionDeadline; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2784);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(43997);\n/* harmony import */ var _useCurrentBlockTimestamp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2904);\n\n\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nfunction useTransactionDeadline() {\n    var ttl = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__/* .useSelector */ .v9)(function(state) {\n        return state.user.userDeadline;\n    });\n    var blockTimestamp = (0,_useCurrentBlockTimestamp__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)();\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        if (blockTimestamp && ttl) return blockTimestamp.add(ttl);\n        return undefined;\n    }, [\n        blockTimestamp,\n        ttl\n    ]);\n}\n\n\n/***/ }),\n\n/***/ 54221:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"sA\": function() { return /* binding */ harvestFarm; },\n  \"qq\": function() { return /* binding */ nonBscStakeFarm; },\n  \"zv\": function() { return /* binding */ nonBscUnstakeFarm; },\n  \"AQ\": function() { return /* binding */ stakeFarm; },\n  \"dU\": function() { return /* binding */ unstakeFarm; }\n});\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(98788);\n// EXTERNAL MODULE: ../../node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(5163);\n// EXTERNAL MODULE: ../../node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__(6391);\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n// EXTERNAL MODULE: ./src/config/index.ts\nvar config = __webpack_require__(7599);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(87394);\n// EXTERNAL MODULE: ../../packages/utils/bigNumber.ts\nvar bigNumber = __webpack_require__(81834);\n// EXTERNAL MODULE: ./src/utils/contractHelpers.ts + 28 modules\nvar contractHelpers = __webpack_require__(80405);\n;// CONCATENATED MODULE: ./src/views/Farms/hooks/getNonBscVaultFee.ts\n\n\n\n\n\n\nvar MessageTypes;\n(function(MessageTypes) {\n    MessageTypes[MessageTypes[\"Deposit\"] = 0] = \"Deposit\";\n    MessageTypes[MessageTypes[\"Withdraw\"] = 1] = \"Withdraw\";\n    MessageTypes[MessageTypes[\"EmergencyWithdraw\"] = 2] = \"EmergencyWithdraw\";\n    MessageTypes[MessageTypes[\"Claim\"] = 3] = \"Claim\";\n})(MessageTypes || (MessageTypes = {}));\nvar Chains;\n(function(Chains) {\n    Chains[Chains[\"EVM\"] = 0] = \"EVM\";\n    Chains[Chains[\"BSC\"] = 1] = \"BSC\";\n})(Chains || (Chains = {}));\nvar COMPENSATION_PRECISION = 1e5;\nvar ORACLE_PRECISION = 1e18;\nvar BNB_CHANGE = 5000000000000000;\nvar BUFFER = 1.3;\nvar WITHDRAW_BUFFER = 1.4;\nvar getNonBscVaultContractFee = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(param) {\n        var pid, amount, chainId, userAddress, messageType, oraclePrice, gasPrice, nonBscVaultContract, crossFarmingAddress, exchangeRate, getNonce, nonce, ref, encodeMessage, hasFirstTime, estimateGaslimit, calcFee, msgBusFee, destTxFee, totalFee, depositFee, estimateEvmGaslimit, fee, total, error;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    pid = param.pid, amount = param.amount, chainId = param.chainId, userAddress = param.userAddress, messageType = param.messageType, oraclePrice = param.oraclePrice, gasPrice = param.gasPrice;\n                    _state.label = 1;\n                case 1:\n                    _state.trys.push([\n                        1,\n                        7,\n                        ,\n                        8\n                    ]);\n                    nonBscVaultContract = (0,contractHelpers/* getNonBscVaultContract */.aM)(null, chainId);\n                    crossFarmingAddress = (0,contractHelpers/* getCrossFarmingSenderContract */.bd)(null, chainId);\n                    exchangeRate = new (bignumber_default())(ORACLE_PRECISION).div(oraclePrice).times(ORACLE_PRECISION) // invert into BNB/ETH price\n                    ;\n                    return [\n                        4,\n                        crossFarmingAddress.nonces(userAddress, pid)\n                    ];\n                case 2:\n                    getNonce = _state.sent();\n                    nonce = new (bignumber_default())(getNonce.toString()).toJSON();\n                    return [\n                        4,\n                        Promise.all([\n                            nonBscVaultContract.encodeMessage(userAddress, pid, amount, messageType, nonce),\n                            crossFarmingAddress.is1st(userAddress),\n                            crossFarmingAddress.estimateGaslimit(Chains.BSC, userAddress, messageType)\n                        ])\n                    ];\n                case 3:\n                    ref = _sliced_to_array/* default.apply */.Z.apply(void 0, [\n                        _state.sent(),\n                        3\n                    ]), encodeMessage = ref[0], hasFirstTime = ref[1], estimateGaslimit = ref[2];\n                    return [\n                        4,\n                        nonBscVaultContract.calcFee(encodeMessage)\n                    ];\n                case 4:\n                    calcFee = _state.sent();\n                    msgBusFee = new (bignumber_default())(calcFee.toString());\n                    destTxFee = new (bignumber_default())(gasPrice).times(estimateGaslimit.toString()).times(exchangeRate).times(COMPENSATION_PRECISION).div(new (bignumber_default())(ORACLE_PRECISION).times(COMPENSATION_PRECISION));\n                    totalFee = new (bignumber_default())(msgBusFee).plus(destTxFee);\n                    if (!hasFirstTime) {\n                        depositFee = new (bignumber_default())(BNB_CHANGE).times(exchangeRate).div(ORACLE_PRECISION);\n                        return [\n                            2,\n                            totalFee.plus(depositFee).times(BUFFER).toFixed(0)\n                        ];\n                    }\n                    if (!(messageType >= MessageTypes.Withdraw)) return [\n                        3,\n                        6\n                    ];\n                    return [\n                        4,\n                        crossFarmingAddress.estimateGaslimit(Chains.EVM, userAddress, messageType)\n                    ];\n                case 5:\n                    estimateEvmGaslimit = _state.sent();\n                    fee = msgBusFee.times(exchangeRate).div(ORACLE_PRECISION);\n                    total = new (bignumber_default())(gasPrice).times(estimateEvmGaslimit.toString()).plus(fee);\n                    return [\n                        2,\n                        totalFee.plus(total).times(WITHDRAW_BUFFER).toFixed(0)\n                    ];\n                case 6:\n                    return [\n                        2,\n                        totalFee.times(BUFFER).toFixed(0)\n                    ];\n                case 7:\n                    error = _state.sent();\n                    console.error(\"Failed to fetch non BscVault fee\", error);\n                    return [\n                        2,\n                        bigNumber/* BIG_ZERO.toJSON */.HW.toJSON()\n                    ];\n                case 8:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return function getNonBscVaultContractFee(_) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n;// CONCATENATED MODULE: ./src/utils/calls/farms.ts\n\n\n\n\n\nvar stakeFarm = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(masterChefContract, pid, amount, gasPrice, gasLimit) {\n        var value;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            value = new (bignumber_default())(amount).times(config/* DEFAULT_TOKEN_DECIMAL */.o3).toString();\n            return [\n                2,\n                masterChefContract.deposit(pid, value, {\n                    gasLimit: gasLimit || config/* DEFAULT_GAS_LIMIT */.QL,\n                    gasPrice: gasPrice\n                })\n            ];\n        });\n    });\n    return function stakeFarm(masterChefContract, pid, amount, gasPrice, gasLimit) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar unstakeFarm = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(masterChefContract, pid, amount, gasPrice, gasLimit) {\n        var value;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            value = new (bignumber_default())(amount).times(config/* DEFAULT_TOKEN_DECIMAL */.o3).toString();\n            return [\n                2,\n                masterChefContract.withdraw(pid, value, {\n                    gasLimit: gasLimit || config/* DEFAULT_GAS_LIMIT */.QL,\n                    gasPrice: gasPrice\n                })\n            ];\n        });\n    });\n    return function unstakeFarm(masterChefContract, pid, amount, gasPrice, gasLimit) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar harvestFarm = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(masterChefContract, pid, gasPrice, gasLimit) {\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            return [\n                2,\n                masterChefContract.deposit(pid, \"0\", {\n                    gasLimit: gasLimit || config/* DEFAULT_GAS_LIMIT */.QL,\n                    gasPrice: gasPrice\n                })\n            ];\n        });\n    });\n    return function harvestFarm(masterChefContract, pid, gasPrice, gasLimit) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar nonBscStakeFarm = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(contract, pid, amount, gasPrice, account, oraclePrice, chainId) {\n        var value, totalFee;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    value = new (bignumber_default())(amount).times(config/* DEFAULT_TOKEN_DECIMAL */.o3).toString();\n                    return [\n                        4,\n                        getNonBscVaultContractFee({\n                            pid: pid,\n                            chainId: chainId,\n                            gasPrice: gasPrice,\n                            oraclePrice: oraclePrice,\n                            amount: value,\n                            userAddress: account,\n                            messageType: MessageTypes.Deposit\n                        })\n                    ];\n                case 1:\n                    totalFee = _state.sent();\n                    console.info(totalFee, \"stake totalFee\");\n                    return [\n                        2,\n                        contract.deposit(pid, value, {\n                            value: totalFee\n                        })\n                    ];\n            }\n        });\n    });\n    return function nonBscStakeFarm(contract, pid, amount, gasPrice, account, oraclePrice, chainId) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar nonBscUnstakeFarm = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(contract, pid, amount, gasPrice, account, oraclePrice, chainId) {\n        var value, totalFee;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    value = new (bignumber_default())(amount).times(config/* DEFAULT_TOKEN_DECIMAL */.o3).toString();\n                    return [\n                        4,\n                        getNonBscVaultContractFee({\n                            pid: pid,\n                            chainId: chainId,\n                            gasPrice: gasPrice,\n                            oraclePrice: oraclePrice,\n                            amount: value,\n                            userAddress: account,\n                            messageType: MessageTypes.Withdraw\n                        })\n                    ];\n                case 1:\n                    totalFee = _state.sent();\n                    console.info(totalFee, \"unstake totalFee\");\n                    return [\n                        2,\n                        contract.withdraw(pid, value, {\n                            value: totalFee\n                        })\n                    ];\n            }\n        });\n    });\n    return function nonBscUnstakeFarm(contract, pid, amount, gasPrice, account, oraclePrice, chainId) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n\n/***/ }),\n\n/***/ 72179:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Zj\": function() { return /* reexport */ callWithEstimateGas; },\n  \"yp\": function() { return /* reexport */ getActivePools; },\n  \"sA\": function() { return /* reexport */ farms/* harvestFarm */.sA; },\n  \"qq\": function() { return /* reexport */ farms/* nonBscStakeFarm */.qq; },\n  \"zv\": function() { return /* reexport */ farms/* nonBscUnstakeFarm */.zv; },\n  \"AQ\": function() { return /* reexport */ farms/* stakeFarm */.AQ; },\n  \"dU\": function() { return /* reexport */ farms/* unstakeFarm */.dU; }\n});\n\n// UNUSED EXPORTS: estimateGas\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(98788);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(70865);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_to_consumable_array.mjs + 2 modules\nvar _to_consumable_array = __webpack_require__(50930);\n// EXTERNAL MODULE: ../../node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(5163);\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(5305);\n;// CONCATENATED MODULE: ./src/utils/calls/estimateGas.ts\n\n\n\n\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */ var estimateGas = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(contract, methodName, methodArgs) {\n        var overrides, gasMarginPer10000, _estimateGas, rawGasEstimation, gasEstimation;\n        var _arguments = arguments;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    overrides = _arguments.length > 3 && _arguments[3] !== void 0 ? _arguments[3] : {}, gasMarginPer10000 = _arguments.length > 4 ? _arguments[4] : void 0;\n                    if (!contract[methodName]) {\n                        throw new Error(\"Method \".concat(methodName, \" doesn't exist on \").concat(contract.address));\n                    }\n                    return [\n                        4,\n                        (_estimateGas = contract.estimateGas)[methodName].apply(_estimateGas, (0,_to_consumable_array/* default */.Z)(methodArgs).concat([\n                            overrides\n                        ]))\n                    ];\n                case 1:\n                    rawGasEstimation = _state.sent();\n                    gasEstimation = (0,utils/* calculateGasMargin */.yC)(rawGasEstimation, gasMarginPer10000);\n                    return [\n                        2,\n                        gasEstimation\n                    ];\n            }\n        });\n    });\n    return function estimateGas(contract, methodName, methodArgs) {\n        return _ref.apply(this, arguments);\n    };\n}();\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */ var callWithEstimateGas = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(contract, methodName, methodArgs) {\n        var overrides, gasMarginPer10000, _contract, gasEstimation, tx;\n        var _arguments = arguments;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    overrides = _arguments.length > 3 && _arguments[3] !== void 0 ? _arguments[3] : {}, gasMarginPer10000 = _arguments.length > 4 && _arguments[4] !== void 0 ? _arguments[4] : 1000;\n                    return [\n                        4,\n                        estimateGas(contract, methodName, methodArgs, overrides, gasMarginPer10000)\n                    ];\n                case 1:\n                    gasEstimation = _state.sent();\n                    return [\n                        4,\n                        (_contract = contract)[methodName].apply(_contract, (0,_to_consumable_array/* default */.Z)(methodArgs).concat([\n                            (0,_object_spread/* default */.Z)({\n                                gasLimit: gasEstimation\n                            }, overrides)\n                        ]))\n                    ];\n                case 2:\n                    tx = _state.sent();\n                    return [\n                        2,\n                        tx\n                    ];\n            }\n        });\n    });\n    return function callWithEstimateGas(contract, methodName, methodArgs) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n// EXTERNAL MODULE: ./src/utils/calls/farms.ts + 1 modules\nvar farms = __webpack_require__(54221);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(87394);\n// EXTERNAL MODULE: ../../node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__(6391);\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n// EXTERNAL MODULE: ./src/config/constants/pools.tsx\nvar pools = __webpack_require__(73486);\n// EXTERNAL MODULE: ./src/config/abi/sousChefV2.json\nvar sousChefV2 = __webpack_require__(9022);\n// EXTERNAL MODULE: ./src/utils/multicall.ts\nvar multicall = __webpack_require__(25152);\n// EXTERNAL MODULE: ./src/utils/providers.ts\nvar providers = __webpack_require__(11536);\n// EXTERNAL MODULE: ./src/utils/addressHelpers.ts\nvar addressHelpers = __webpack_require__(70627);\n;// CONCATENATED MODULE: ./src/utils/calls/pools.ts\n/* eslint-disable import/prefer-default-export */ \n\n\n\n\n\n\n\n\n\n/**\n * Returns the total number of pools that were active at a given block\n */ var getActivePools = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(block) {\n        var eligiblePools, blockNumber, _tmp, startBlockCalls, endBlockCalls, ref, startBlocks, endBlocks;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    eligiblePools = pools/* default.filter */.ZP.filter(function(pool) {\n                        return pool.sousId !== 0;\n                    }).filter(function(pool) {\n                        return pool.isFinished === false || pool.isFinished === undefined;\n                    });\n                    _tmp = block;\n                    if (_tmp) return [\n                        3,\n                        2\n                    ];\n                    return [\n                        4,\n                        providers/* bscRpcProvider.getBlockNumber */.v.getBlockNumber()\n                    ];\n                case 1:\n                    _tmp = _state.sent();\n                    _state.label = 2;\n                case 2:\n                    blockNumber = _tmp;\n                    startBlockCalls = eligiblePools.map(function(param) {\n                        var contractAddress = param.contractAddress;\n                        return {\n                            address: (0,addressHelpers/* getAddress */.Kn)(contractAddress, 56),\n                            name: \"startBlock\"\n                        };\n                    });\n                    endBlockCalls = eligiblePools.map(function(param) {\n                        var contractAddress = param.contractAddress;\n                        return {\n                            address: (0,addressHelpers/* getAddress */.Kn)(contractAddress, 56),\n                            name: \"bonusEndBlock\"\n                        };\n                    });\n                    return [\n                        4,\n                        Promise.all([\n                            (0,multicall/* default */.Z)(sousChefV2, startBlockCalls),\n                            (0,multicall/* default */.Z)(sousChefV2, endBlockCalls)\n                        ])\n                    ];\n                case 3:\n                    ref = _sliced_to_array/* default.apply */.Z.apply(void 0, [\n                        _state.sent(),\n                        2\n                    ]), startBlocks = ref[0], endBlocks = ref[1];\n                    return [\n                        2,\n                        eligiblePools.reduce(function(accum, poolCheck, index) {\n                            var startBlock = startBlocks[index] ? new (bignumber_default())(startBlocks[index]) : null;\n                            var endBlock = endBlocks[index] ? new (bignumber_default())(endBlocks[index]) : null;\n                            if (!startBlock || !endBlock) {\n                                return accum;\n                            }\n                            if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n                                return accum;\n                            }\n                            return (0,_to_consumable_array/* default */.Z)(accum).concat([\n                                poolCheck\n                            ]);\n                        }, [])\n                    ];\n            }\n        });\n    });\n    return function getActivePools(block) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n;// CONCATENATED MODULE: ./src/utils/calls/index.ts\n\n\n\n\n\n/***/ }),\n\n/***/ 50288:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"z\": function() { return /* binding */ getLPSymbol; }\n/* harmony export */ });\n/* harmony import */ var _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90902);\n\nvar getLPSymbol = function(token0Symbol, token1Symbol, chainId) {\n    if (token0Symbol === _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .WNATIVE */ .FX[chainId].symbol) {\n        return \"\".concat(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .NATIVE */ .B5[chainId].symbol, \"-\").concat(token1Symbol, \" LP\");\n    }\n    if (token1Symbol === _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .WNATIVE */ .FX[chainId].symbol) {\n        return \"\".concat(token0Symbol, \"-\").concat(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .NATIVE */ .B5[chainId].symbol, \" LP\");\n    }\n    return \"\".concat(token0Symbol, \"-\").concat(token1Symbol, \" LP\");\n};\n\n\n/***/ }),\n\n/***/ 38662:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"e\": function() { return /* binding */ transactionErrorToUserReadableMessage; }\n/* harmony export */ });\n/**\n * This is hacking out the revert reason from the ethers provider thrown error however it can.\n * This object seems to be undocumented by ethers.\n * @param error an error from the ethers provider\n * @param t Translation function\n */ function transactionErrorToUserReadableMessage(error, t) {\n    var reason;\n    while(error){\n        var ref, ref1;\n        var _reason, ref2, ref3;\n        reason = (ref3 = (ref2 = (_reason = error.reason) !== null && _reason !== void 0 ? _reason : (ref = error.data) === null || ref === void 0 ? void 0 : ref.message) !== null && ref2 !== void 0 ? ref2 : error.message) !== null && ref3 !== void 0 ? ref3 : reason;\n        var _error;\n        // eslint-disable-next-line no-param-reassign\n        error = (_error = error.error) !== null && _error !== void 0 ? _error : (ref1 = error.data) === null || ref1 === void 0 ? void 0 : ref1.originalError;\n    }\n    if ((reason === null || reason === void 0 ? void 0 : reason.indexOf(\"execution reverted: \")) === 0) reason = reason.substring(\"execution reverted: \".length);\n    switch(reason){\n        case \"PancakeRouter: EXPIRED\":\n            return t(\"The transaction could not be sent because the deadline has passed. Please check that your transaction deadline is not too low.\");\n        case \"PancakeRouter: INSUFFICIENT_OUTPUT_AMOUNT\":\n        case \"PancakeRouter: EXCESSIVE_INPUT_AMOUNT\":\n        case \"PancakeRouter: INSUFFICIENT_A_AMOUNT\":\n        case \"PancakeRouter: INSUFFICIENT_B_AMOUNT\":\n            return t(\"This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.\");\n        case \"TransferHelper: TRANSFER_FROM_FAILED\":\n            return t(\"The input token cannot be transferred. There may be an issue with the input token.\");\n        case \"Pancake: TRANSFER_FAILED\":\n            return t(\"The output token cannot be transferred. There may be an issue with the output token.\");\n        default:\n            if ((reason === null || reason === void 0 ? void 0 : reason.indexOf(\"undefined is not an object\")) !== -1) {\n                console.error(error, reason);\n                return t(\"An error occurred when trying to execute this operation. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading.\");\n            }\n            return t(\"Unknown error%reason%. Try increasing your slippage tolerance.\", {\n                reason: reason ? ': \"'.concat(reason, '\"') : \"\"\n            });\n    }\n}\n\n\n/***/ }),\n\n/***/ 97794:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"p\": function() { return /* binding */ ZapErrorMessages; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2784);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(22723);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13670);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(76660);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(76903);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(48608);\n/* harmony import */ var _pancakeswap_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(65957);\n\n\n\n\nvar ZapErrorMessages = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function(param) {\n    var isSingleToken = param.isSingleToken, zapMode = param.zapMode, toggleZapMode = param.toggleZapMode, onModalDismiss = param.onModalDismiss;\n    var t = (0,_pancakeswap_localization__WEBPACK_IMPORTED_MODULE_2__/* .useTranslation */ .$G)().t;\n    var toastInfo = (0,_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__/* .useToast */ .p)().toastInfo;\n    var handleCloseButton = function() {\n        onModalDismiss();\n        if (zapMode) {\n            toggleZapMode(!zapMode);\n            toastInfo(t(\"Info\"), t(\"Temporarily disabled Zap\"));\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z, {\n        margin: \"auto\",\n        width: [\n            \"100%\",\n            \"100%\",\n            \"380px\"\n        ],\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z, {\n            variant: \"warning\",\n            mb: \"16px\",\n            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z, {\n                flexDirection: \"column\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* .MessageText */ .Y, {\n                        bold: true,\n                        children: t(\"Currently using Zap for liquidity provisions.\")\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* .MessageText */ .Y, {\n                        small: true,\n                        children: [\n                            isSingleToken ? t(\"Zap does NOT support tokens with fees on transfers. If you experience any issues, click\") : t(\"Zap does NOT support tokens with fees on transfers. Please choose ’Don't convert’ and retry. If you experience any further issues, click\"),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z, {\n                                p: \"0 4px\",\n                                scale: \"sm\",\n                                variant: \"text\",\n                                height: \"auto\",\n                                onClick: handleCloseButton,\n                                children: t(\"here\")\n                            }),\n                            t(\"to disable Zap temporarily.\")\n                        ]\n                    })\n                ]\n            })\n        })\n    });\n});\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","d","CommitButton","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_9__","_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_5__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__","hooks_useSwitchNetworkLoading__WEBPACK_IMPORTED_MODULE_1__","jotai__WEBPACK_IMPORTED_MODULE_6__","hooks_useActiveChainId__WEBPACK_IMPORTED_MODULE_2__","_NetworkModal__WEBPACK_IMPORTED_MODULE_3__","_Trans__WEBPACK_IMPORTED_MODULE_4__","wrongNetworkProps","variant","disabled","children","jsx","Z","props","isWrongNetwork","g","switchNetworkLoading","ref","c","setHideWrongNetwork","b9","v","onClick","e","call","ZapCheckbox","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_templateObject","data","ZapCheckBoxWrapper","ZP","label","withConfig","componentId","param","theme","colors","background","cardBorder","scale","useCurrentBlockTimestamp","_state_multicall_hooks__WEBPACK_IMPORTED_MODULE_0__","_useContract__WEBPACK_IMPORTED_MODULE_1__","ref1","multicall","gq","Wk","result","useTransactionDeadline","react__WEBPACK_IMPORTED_MODULE_0__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_useCurrentBlockTimestamp__WEBPACK_IMPORTED_MODULE_2__","ttl","v9","state","user","userDeadline","blockTimestamp","useMemo","add","harvestFarm","nonBscStakeFarm","nonBscUnstakeFarm","stakeFarm","unstakeFarm","MessageTypes","Chains","_async_to_generator","tslib_es6","bignumber","bignumber_default","n","config","_sliced_to_array","bigNumber","contractHelpers","_ref","getNonBscVaultContractFee","pid","amount","chainId","userAddress","messageType","oraclePrice","gasPrice","nonBscVaultContract","crossFarmingAddress","exchangeRate","getNonce","nonce","encodeMessage","hasFirstTime","estimateGaslimit","calcFee","msgBusFee","destTxFee","totalFee","depositFee","estimateEvmGaslimit","fee","total","error","__generator","_state","trys","aM","bd","div","times","nonces","sent","toString","toJSON","Promise","all","is1st","BSC","apply","plus","toFixed","Withdraw","EVM","console","HW","_","arguments","masterChefContract","gasLimit","value","o3","deposit","QL","withdraw","contract","account","Deposit","info","callWithEstimateGas","getActivePools","farms","sA","qq","zv","AQ","dU","_object_spread","_to_consumable_array","utils","estimateGas","methodName","methodArgs","overrides","gasMarginPer10000","_estimateGas","rawGasEstimation","gasEstimation","_arguments","length","concat","address","yC","_contract","tx","pools","sousChefV2","providers","addressHelpers","block","eligiblePools","blockNumber","_tmp","startBlockCalls","endBlockCalls","startBlocks","endBlocks","filter","pool","sousId","isFinished","undefined","getBlockNumber","map","contractAddress","Kn","name","reduce","accum","poolCheck","index","startBlock","endBlock","gte","lte","getLPSymbol","_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__","token0Symbol","token1Symbol","FX","symbol","B5","transactionErrorToUserReadableMessage","t","reason","_reason","ref2","ref3","_error","message","originalError","indexOf","substring","ZapErrorMessages","react__WEBPACK_IMPORTED_MODULE_1__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__","_pancakeswap_localization__WEBPACK_IMPORTED_MODULE_2__","memo","isSingleToken","zapMode","toggleZapMode","onModalDismiss","$G","toastInfo","p","handleCloseButton","margin","width","mb","jsxs","flexDirection","Y","bold","small","height"],"sourceRoot":""}