{"version":3,"file":"static/chunks/8475.49cc433d81b181e1.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/lodash/_baseFlatten.js","webpack://_N_E/../../node_modules/lodash/_isFlattenable.js","webpack://_N_E/../../node_modules/lodash/flatMap.js","webpack://_N_E/../../node_modules/lodash/map.js","webpack://_N_E/./src/hooks/useSubgraphHealth.ts","webpack://_N_E/./src/components/SubgraphHealthIndicator/index.tsx","webpack://_N_E/./src/hooks/useRefreshEffect.ts","webpack://_N_E/../../node_modules/reselect/es/defaultMemoize.js","webpack://_N_E/../../node_modules/reselect/es/index.js","webpack://_N_E/<anon>"],"sourcesContent":["var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","import { useState } from 'react'\nimport { request, gql } from 'graphql-request'\nimport { bscRpcProvider } from 'utils/providers'\nimport { GRAPH_HEALTH } from 'config/constants/endpoints'\nimport { useSlowRefreshEffect } from './useRefreshEffect'\n\nexport enum SubgraphStatus {\n  OK,\n  WARNING,\n  NOT_OK,\n  UNKNOWN,\n}\n\nexport type SubgraphHealthState = {\n  status: SubgraphStatus\n  currentBlock: number\n  chainHeadBlock: number\n  latestBlock: number\n  blockDifference: number\n}\n\nconst NOT_OK_BLOCK_DIFFERENCE = 200 // ~15 minutes delay\nconst WARNING_BLOCK_DIFFERENCE = 50 // ~2.5 minute delay\n\nconst useSubgraphHealth = (subgraphName: string) => {\n  const [sgHealth, setSgHealth] = useState<SubgraphHealthState>({\n    status: SubgraphStatus.UNKNOWN,\n    currentBlock: 0,\n    chainHeadBlock: 0,\n    latestBlock: 0,\n    blockDifference: 0,\n  })\n\n  useSlowRefreshEffect(\n    (currentBlockNumber) => {\n      const getSubgraphHealth = async () => {\n        try {\n          const [{ indexingStatusForCurrentVersion }, currentBlock] = await Promise.all([\n            request(\n              GRAPH_HEALTH,\n              gql`\n            query getNftMarketSubgraphHealth {\n              indexingStatusForCurrentVersion(subgraphName: \"${subgraphName}\") {\n                health\n                chains {\n                  chainHeadBlock {\n                    number\n                  }\n                  latestBlock {\n                    number\n                  }\n                }\n              }\n            }\n          `,\n            ),\n            currentBlockNumber ? Promise.resolve(currentBlockNumber) : bscRpcProvider.getBlockNumber(),\n          ])\n\n          const isHealthy = indexingStatusForCurrentVersion.health === 'healthy'\n          const chainHeadBlock = parseInt(indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number)\n          const latestBlock = parseInt(indexingStatusForCurrentVersion.chains[0].latestBlock.number)\n          const blockDifference = currentBlock - latestBlock\n          // Sometimes subgraph might report old block as chainHeadBlock, so its important to compare\n          // it with block retrieved from simpleRpcProvider.getBlockNumber()\n          const chainHeadBlockDifference = currentBlock - chainHeadBlock\n          if (\n            !isHealthy ||\n            blockDifference > NOT_OK_BLOCK_DIFFERENCE ||\n            chainHeadBlockDifference > NOT_OK_BLOCK_DIFFERENCE\n          ) {\n            setSgHealth({ status: SubgraphStatus.NOT_OK, currentBlock, chainHeadBlock, latestBlock, blockDifference })\n          } else if (\n            blockDifference > WARNING_BLOCK_DIFFERENCE ||\n            chainHeadBlockDifference > WARNING_BLOCK_DIFFERENCE\n          ) {\n            setSgHealth({ status: SubgraphStatus.WARNING, currentBlock, chainHeadBlock, latestBlock, blockDifference })\n          } else {\n            setSgHealth({ status: SubgraphStatus.OK, currentBlock, chainHeadBlock, latestBlock, blockDifference })\n          }\n        } catch (error) {\n          console.error(`Failed to perform health check for ${subgraphName} subgraph`, error)\n        }\n      }\n      getSubgraphHealth()\n    },\n    [subgraphName],\n  )\n\n  return sgHealth\n}\n\nexport default useSubgraphHealth\n","import { BSC_BLOCK_TIME } from 'config'\nimport { useTranslation, TranslateFunction } from '@pancakeswap/localization'\nimport styled from 'styled-components'\nimport { Card, Flex, Box, InfoIcon, Text, useTooltip } from '@pancakeswap/uikit'\nimport { useSubgraphHealthIndicatorManager } from 'state/user/hooks'\nimport useSubgraphHealth, { SubgraphStatus } from 'hooks/useSubgraphHealth'\n\nconst StyledCard = styled(Card)`\n  border-radius: 8px;\n  > div {\n    border-radius: 8px;\n  }\n  user-select: none;\n`\n\nconst IndicatorWrapper = styled(Flex)`\n  gap: 7px;\n`\n\nconst Dot = styled(Box)<{ $color: string }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${({ $color, theme }) => theme.colors[$color]};\n`\n\ninterface CustomDescriptions {\n  delayed: string\n  slow: string\n  healthy: string\n}\n\nconst indicator = (t: TranslateFunction, customDescriptions?: CustomDescriptions) =>\n  ({\n    delayed: {\n      label: t('Delayed'),\n      color: 'failure',\n      description:\n        customDescriptions?.delayed ??\n        t(\n          'Subgraph is currently experiencing delays due to BSC issues. Performance may suffer until subgraph is restored.',\n        ),\n    },\n    slow: {\n      label: t('Slight delay'),\n      color: 'warning',\n      description:\n        customDescriptions?.slow ??\n        t(\n          'Subgraph is currently experiencing delays due to BSC issues. Performance may suffer until subgraph is restored.',\n        ),\n    },\n    healthy: {\n      label: t('Fast'),\n      color: 'success',\n      description: customDescriptions?.healthy ?? t('No issues with the subgraph.'),\n    },\n  } as const)\n\ntype Indicator = keyof ReturnType<typeof indicator>\n\nconst getIndicator = (sgStatus: SubgraphStatus): Indicator => {\n  if (sgStatus === SubgraphStatus.NOT_OK) {\n    return 'delayed'\n  }\n\n  if (sgStatus === SubgraphStatus.WARNING) {\n    return 'slow'\n  }\n\n  return 'healthy'\n}\n\nexport interface BlockResponse {\n  blocks: {\n    number: string\n  }[]\n}\n\nconst SubgraphHealthIndicator: React.FC<\n  React.PropsWithChildren<{\n    subgraphName: string\n    inline?: boolean\n    customDescriptions?: CustomDescriptions\n    obeyGlobalSetting?: boolean\n  }>\n> = ({ subgraphName, inline, customDescriptions, obeyGlobalSetting = true }) => {\n  const { t } = useTranslation()\n  const { status, currentBlock, blockDifference, latestBlock } = useSubgraphHealth(subgraphName)\n  const [alwaysShowIndicator] = useSubgraphHealthIndicatorManager()\n  const forceIndicatorDisplay = status === SubgraphStatus.WARNING || status === SubgraphStatus.NOT_OK\n  const showIndicator = (obeyGlobalSetting && alwaysShowIndicator) || forceIndicatorDisplay\n\n  const indicatorProps = indicator(t, customDescriptions)\n\n  const secondRemainingBlockSync = blockDifference * BSC_BLOCK_TIME\n\n  const indicatorValue = getIndicator(status)\n\n  const current = indicatorProps[indicatorValue]\n\n  const { targetRef, tooltipVisible, tooltip } = useTooltip(\n    <TooltipContent\n      currentBlock={currentBlock}\n      secondRemainingBlockSync={secondRemainingBlockSync}\n      blockNumberFromSubgraph={latestBlock}\n      {...current}\n    />,\n    {\n      placement: 'top',\n    },\n  )\n\n  if (!latestBlock || !currentBlock || !showIndicator) {\n    return null\n  }\n\n  if (inline) {\n    return (\n      <IndicatorWrapper alignItems=\"center\" justifyContent=\"flex-end\" ref={targetRef}>\n        <Dot $color={current.color} />\n        <Text>{current.label}</Text>\n        <InfoIcon />\n        {tooltipVisible && tooltip}\n      </IndicatorWrapper>\n    )\n  }\n\n  return (\n    <Box\n      position=\"fixed\"\n      bottom=\"calc(55px + env(safe-area-inset-bottom))\"\n      right=\"5%\"\n      ref={targetRef}\n      data-test=\"subgraph-health-indicator\"\n    >\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <IndicatorWrapper alignItems=\"center\" p=\"10px\">\n          <Dot $color={current.color} />\n          <Text>{current.label}</Text>\n          <InfoIcon />\n        </IndicatorWrapper>\n      </StyledCard>\n    </Box>\n  )\n}\n\nconst TooltipContent = ({\n  color,\n  label,\n  description,\n  currentBlock,\n  secondRemainingBlockSync,\n  blockNumberFromSubgraph,\n}) => {\n  const { t } = useTranslation()\n  return (\n    <Box>\n      <IndicatorWrapper pb=\"10px\">\n        <Dot $color={color} />\n        <Text>{label}</Text>\n      </IndicatorWrapper>\n      <Text pb=\"24px\">{description}</Text>\n      <Text>\n        <strong>{t('Chain Head Block')}:</strong> {currentBlock}\n      </Text>\n      <Text>\n        <strong>{t('Latest Subgraph Block')}:</strong> {blockNumberFromSubgraph}\n      </Text>\n      <Text>\n        <strong>{t('Delay')}:</strong> {currentBlock - blockNumberFromSubgraph} ({secondRemainingBlockSync}s)\n      </Text>\n    </Box>\n  )\n}\n\nexport default SubgraphHealthIndicator\n","import { FAST_INTERVAL, SLOW_INTERVAL } from 'config/constants'\nimport { DependencyList, EffectCallback, useEffect } from 'react'\nimport useSWR from 'swr'\nimport { useActiveChainId } from './useActiveChainId'\n\ntype BlockEffectCallback = (blockNumber: number) => ReturnType<EffectCallback>\n\nconst EMPTY_ARRAY = []\n\nexport function useFastRefreshEffect(effect: BlockEffectCallback, deps?: DependencyList) {\n  const { chainId } = useActiveChainId()\n  const { data = 0 } = useSWR(chainId && [FAST_INTERVAL, 'blockNumber', chainId])\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect.bind(null, data), [data, ...(deps || EMPTY_ARRAY)])\n}\n\nexport function useSlowRefreshEffect(effect: BlockEffectCallback, deps?: DependencyList) {\n  const { chainId } = useActiveChainId()\n  const { data = 0 } = useSWR(chainId && [SLOW_INTERVAL, 'blockNumber', chainId])\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect.bind(null, data), [data, ...(deps || EMPTY_ARRAY)])\n}\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[8475],{\n\n/***/ 62034:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar arrayPush = __webpack_require__(65067),\n    isFlattenable = __webpack_require__(95882);\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n\n\n/***/ }),\n\n/***/ 95882:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(50857),\n    isArguments = __webpack_require__(79631),\n    isArray = __webpack_require__(86152);\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n\n\n/***/ }),\n\n/***/ 35838:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar baseFlatten = __webpack_require__(62034),\n    map = __webpack_require__(16760);\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n\n\n/***/ }),\n\n/***/ 16760:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar arrayMap = __webpack_require__(50343),\n    baseIteratee = __webpack_require__(68286),\n    baseMap = __webpack_require__(93401),\n    isArray = __webpack_require__(86152);\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n\n\n/***/ }),\n\n/***/ 44980:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ components_SubgraphHealthIndicator; }\n});\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(70865);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(87394);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(92228);\n// EXTERNAL MODULE: ../../node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(52322);\n// EXTERNAL MODULE: ./src/config/index.ts\nvar config = __webpack_require__(7599);\n// EXTERNAL MODULE: ../../packages/localization/src/index.tsx + 6 modules\nvar src = __webpack_require__(65957);\n// EXTERNAL MODULE: ../../node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(3411);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Card/Card.tsx + 1 modules\nvar Card = __webpack_require__(8659);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Flex.tsx\nvar Flex = __webpack_require__(76903);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Box/Box.tsx\nvar Box = __webpack_require__(13670);\n// EXTERNAL MODULE: ../../packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 2 modules\nvar useTooltip = __webpack_require__(69689);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(89495);\n// EXTERNAL MODULE: ../../packages/uikit/src/components/Svg/Icons/Info.tsx\nvar Info = __webpack_require__(11781);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar hooks = __webpack_require__(72135);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(98788);\n// EXTERNAL MODULE: ../../node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(5163);\n// EXTERNAL MODULE: ../../node_modules/react/index.js\nvar react = __webpack_require__(2784);\n// EXTERNAL MODULE: ../../node_modules/graphql-request/dist/index.js\nvar dist = __webpack_require__(6647);\n// EXTERNAL MODULE: ./src/utils/providers.ts\nvar providers = __webpack_require__(11536);\n// EXTERNAL MODULE: ./src/config/constants/endpoints.ts\nvar endpoints = __webpack_require__(10494);\n// EXTERNAL MODULE: ./src/hooks/useRefreshEffect.ts\nvar useRefreshEffect = __webpack_require__(68175);\n;// CONCATENATED MODULE: ./src/hooks/useSubgraphHealth.ts\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        '\\n            query getNftMarketSubgraphHealth {\\n              indexingStatusForCurrentVersion(subgraphName: \"',\n        '\") {\\n                health\\n                chains {\\n                  chainHeadBlock {\\n                    number\\n                  }\\n                  latestBlock {\\n                    number\\n                  }\\n                }\\n              }\\n            }\\n          '\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\nvar SubgraphStatus;\n(function(SubgraphStatus) {\n    SubgraphStatus[SubgraphStatus[\"OK\"] = 0] = \"OK\";\n    SubgraphStatus[SubgraphStatus[\"WARNING\"] = 1] = \"WARNING\";\n    SubgraphStatus[SubgraphStatus[\"NOT_OK\"] = 2] = \"NOT_OK\";\n    SubgraphStatus[SubgraphStatus[\"UNKNOWN\"] = 3] = \"UNKNOWN\";\n})(SubgraphStatus || (SubgraphStatus = {}));\nvar NOT_OK_BLOCK_DIFFERENCE = 200 // ~15 minutes delay\n;\nvar WARNING_BLOCK_DIFFERENCE = 50 // ~2.5 minute delay\n;\nvar useSubgraphHealth = function(subgraphName) {\n    var ref = (0,react.useState)({\n        status: SubgraphStatus.UNKNOWN,\n        currentBlock: 0,\n        chainHeadBlock: 0,\n        latestBlock: 0,\n        blockDifference: 0\n    }), sgHealth = ref[0], setSgHealth = ref[1];\n    (0,useRefreshEffect/* useSlowRefreshEffect */.X)(function(currentBlockNumber) {\n        var getSubgraphHealth = function() {\n            var _ref = (0,_async_to_generator/* default */.Z)(function() {\n                var ref, indexingStatusForCurrentVersion, currentBlock, isHealthy, chainHeadBlock, latestBlock, blockDifference, chainHeadBlockDifference, error;\n                return (0,tslib_es6.__generator)(this, function(_state) {\n                    switch(_state.label){\n                        case 0:\n                            _state.trys.push([\n                                0,\n                                2,\n                                ,\n                                3\n                            ]);\n                            return [\n                                4,\n                                Promise.all([\n                                    (0,dist.request)(endpoints/* GRAPH_HEALTH */.AM, (0,dist.gql)(_templateObject(), subgraphName)),\n                                    currentBlockNumber ? Promise.resolve(currentBlockNumber) : providers/* bscRpcProvider.getBlockNumber */.v.getBlockNumber()\n                                ])\n                            ];\n                        case 1:\n                            ref = _sliced_to_array/* default.apply */.Z.apply(void 0, [\n                                _state.sent(),\n                                2\n                            ]), indexingStatusForCurrentVersion = ref[0].indexingStatusForCurrentVersion, currentBlock = ref[1];\n                            isHealthy = indexingStatusForCurrentVersion.health === \"healthy\";\n                            chainHeadBlock = parseInt(indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number);\n                            latestBlock = parseInt(indexingStatusForCurrentVersion.chains[0].latestBlock.number);\n                            blockDifference = currentBlock - latestBlock;\n                            chainHeadBlockDifference = currentBlock - chainHeadBlock;\n                            if (!isHealthy || blockDifference > NOT_OK_BLOCK_DIFFERENCE || chainHeadBlockDifference > NOT_OK_BLOCK_DIFFERENCE) {\n                                setSgHealth({\n                                    status: SubgraphStatus.NOT_OK,\n                                    currentBlock: currentBlock,\n                                    chainHeadBlock: chainHeadBlock,\n                                    latestBlock: latestBlock,\n                                    blockDifference: blockDifference\n                                });\n                            } else if (blockDifference > WARNING_BLOCK_DIFFERENCE || chainHeadBlockDifference > WARNING_BLOCK_DIFFERENCE) {\n                                setSgHealth({\n                                    status: SubgraphStatus.WARNING,\n                                    currentBlock: currentBlock,\n                                    chainHeadBlock: chainHeadBlock,\n                                    latestBlock: latestBlock,\n                                    blockDifference: blockDifference\n                                });\n                            } else {\n                                setSgHealth({\n                                    status: SubgraphStatus.OK,\n                                    currentBlock: currentBlock,\n                                    chainHeadBlock: chainHeadBlock,\n                                    latestBlock: latestBlock,\n                                    blockDifference: blockDifference\n                                });\n                            }\n                            return [\n                                3,\n                                3\n                            ];\n                        case 2:\n                            error = _state.sent();\n                            console.error(\"Failed to perform health check for \".concat(subgraphName, \" subgraph\"), error);\n                            return [\n                                3,\n                                3\n                            ];\n                        case 3:\n                            return [\n                                2\n                            ];\n                    }\n                });\n            });\n            return function getSubgraphHealth() {\n                return _ref.apply(this, arguments);\n            };\n        }();\n        getSubgraphHealth();\n    }, [\n        subgraphName\n    ]);\n    return sgHealth;\n};\n/* harmony default export */ var hooks_useSubgraphHealth = (useSubgraphHealth);\n\n;// CONCATENATED MODULE: ./src/components/SubgraphHealthIndicator/index.tsx\n\n\n\nfunction SubgraphHealthIndicator_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  border-radius: 8px;\\n  > div {\\n    border-radius: 8px;\\n  }\\n  user-select: none;\\n\"\n    ]);\n    SubgraphHealthIndicator_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  gap: 7px;\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n  background: \",\n        \";\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\nvar StyledCard = (0,styled_components_browser_esm/* default */.ZP)(Card/* default */.Z).withConfig({\n    componentId: \"sc-46961c6e-0\"\n})(SubgraphHealthIndicator_templateObject());\nvar IndicatorWrapper = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-46961c6e-1\"\n})(_templateObject1());\nvar Dot = (0,styled_components_browser_esm/* default */.ZP)(Box/* default */.Z).withConfig({\n    componentId: \"sc-46961c6e-2\"\n})(_templateObject2(), function(param) {\n    var $color = param.$color, theme = param.theme;\n    return theme.colors[$color];\n});\nvar ref, ref1, ref2;\nvar indicator = function(t, customDescriptions) {\n    return {\n        delayed: {\n            label: t(\"Delayed\"),\n            color: \"failure\",\n            description: (ref = customDescriptions === null || customDescriptions === void 0 ? void 0 : customDescriptions.delayed) !== null && ref !== void 0 ? ref : t(\"Subgraph is currently experiencing delays due to BSC issues. Performance may suffer until subgraph is restored.\")\n        },\n        slow: {\n            label: t(\"Slight delay\"),\n            color: \"warning\",\n            description: (ref1 = customDescriptions === null || customDescriptions === void 0 ? void 0 : customDescriptions.slow) !== null && ref1 !== void 0 ? ref1 : t(\"Subgraph is currently experiencing delays due to BSC issues. Performance may suffer until subgraph is restored.\")\n        },\n        healthy: {\n            label: t(\"Fast\"),\n            color: \"success\",\n            description: (ref2 = customDescriptions === null || customDescriptions === void 0 ? void 0 : customDescriptions.healthy) !== null && ref2 !== void 0 ? ref2 : t(\"No issues with the subgraph.\")\n        }\n    };\n};\nvar getIndicator = function(sgStatus) {\n    if (sgStatus === SubgraphStatus.NOT_OK) {\n        return \"delayed\";\n    }\n    if (sgStatus === SubgraphStatus.WARNING) {\n        return \"slow\";\n    }\n    return \"healthy\";\n};\nvar SubgraphHealthIndicator = function(param) {\n    var subgraphName = param.subgraphName, inline = param.inline, customDescriptions = param.customDescriptions, _obeyGlobalSetting = param.obeyGlobalSetting, obeyGlobalSetting = _obeyGlobalSetting === void 0 ? true : _obeyGlobalSetting;\n    var t = (0,src/* useTranslation */.$G)().t;\n    var ref = hooks_useSubgraphHealth(subgraphName), status = ref.status, currentBlock = ref.currentBlock, blockDifference = ref.blockDifference, latestBlock = ref.latestBlock;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,hooks/* useSubgraphHealthIndicatorManager */.YF)(), 1), alwaysShowIndicator = ref1[0];\n    var forceIndicatorDisplay = status === SubgraphStatus.WARNING || status === SubgraphStatus.NOT_OK;\n    var showIndicator = obeyGlobalSetting && alwaysShowIndicator || forceIndicatorDisplay;\n    var indicatorProps = indicator(t, customDescriptions);\n    var secondRemainingBlockSync = blockDifference * config/* BSC_BLOCK_TIME */.hJ;\n    var indicatorValue = getIndicator(status);\n    var current = indicatorProps[indicatorValue];\n    var ref2 = (0,useTooltip/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipContent, (0,_object_spread/* default */.Z)({\n        currentBlock: currentBlock,\n        secondRemainingBlockSync: secondRemainingBlockSync,\n        blockNumberFromSubgraph: latestBlock\n    }, current)), {\n        placement: \"top\"\n    }), targetRef = ref2.targetRef, tooltipVisible = ref2.tooltipVisible, tooltip = ref2.tooltip;\n    if (!latestBlock || !currentBlock || !showIndicator) {\n        return null;\n    }\n    if (inline) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsxs)(IndicatorWrapper, {\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            ref: targetRef,\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                    $color: current.color\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    children: current.label\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Info/* default */.Z, {}),\n                tooltipVisible && tooltip\n            ]\n        });\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        position: \"fixed\",\n        bottom: \"calc(55px + env(safe-area-inset-bottom))\",\n        right: \"5%\",\n        ref: targetRef,\n        \"data-test\": \"subgraph-health-indicator\",\n        children: [\n            tooltipVisible && tooltip,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledCard, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(IndicatorWrapper, {\n                    alignItems: \"center\",\n                    p: \"10px\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                            $color: current.color\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: current.label\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Info/* default */.Z, {})\n                    ]\n                })\n            })\n        ]\n    });\n};\nvar TooltipContent = function(param) {\n    var color = param.color, label = param.label, description = param.description, currentBlock = param.currentBlock, secondRemainingBlockSync = param.secondRemainingBlockSync, blockNumberFromSubgraph = param.blockNumberFromSubgraph;\n    var t = (0,src/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(IndicatorWrapper, {\n                pb: \"10px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                        $color: color\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        children: label\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                pb: \"24px\",\n                children: description\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"strong\", {\n                        children: [\n                            t(\"Chain Head Block\"),\n                            \":\"\n                        ]\n                    }),\n                    \" \",\n                    currentBlock\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"strong\", {\n                        children: [\n                            t(\"Latest Subgraph Block\"),\n                            \":\"\n                        ]\n                    }),\n                    \" \",\n                    blockNumberFromSubgraph\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"strong\", {\n                        children: [\n                            t(\"Delay\"),\n                            \":\"\n                        ]\n                    }),\n                    \" \",\n                    currentBlock - blockNumberFromSubgraph,\n                    \" (\",\n                    secondRemainingBlockSync,\n                    \"s)\"\n                ]\n            })\n        ]\n    });\n};\n/* harmony default export */ var components_SubgraphHealthIndicator = (SubgraphHealthIndicator);\n\n\n/***/ }),\n\n/***/ 68175:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"X\": function() { return /* binding */ useSlowRefreshEffect; },\n/* harmony export */   \"a\": function() { return /* binding */ useFastRefreshEffect; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50930);\n/* harmony import */ var config_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74086);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2784);\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49857);\n/* harmony import */ var _useActiveChainId__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76166);\n\n\n\n\n\nvar EMPTY_ARRAY = [];\nfunction useFastRefreshEffect(effect, deps) {\n    var chainId = (0,_useActiveChainId__WEBPACK_IMPORTED_MODULE_3__/* .useActiveChainId */ .g)().chainId;\n    var ref = (0,swr__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .ZP)(chainId && [\n        config_constants__WEBPACK_IMPORTED_MODULE_0__/* .FAST_INTERVAL */ .sR,\n        \"blockNumber\",\n        chainId\n    ]), _data = ref.data, data = _data === void 0 ? 0 : _data;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(effect.bind(null, data), [\n        data\n    ].concat((0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(deps || EMPTY_ARRAY)));\n}\nfunction useSlowRefreshEffect(effect, deps) {\n    var chainId = (0,_useActiveChainId__WEBPACK_IMPORTED_MODULE_3__/* .useActiveChainId */ .g)().chainId;\n    var ref = (0,swr__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .ZP)(chainId && [\n        config_constants__WEBPACK_IMPORTED_MODULE_0__/* .SLOW_INTERVAL */ .KI,\n        \"blockNumber\",\n        chainId\n    ]), _data = ref.data, data = _data === void 0 ? 0 : _data;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(effect.bind(null, data), [\n        data\n    ].concat((0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(deps || EMPTY_ARRAY)));\n}\n\n\n/***/ }),\n\n/***/ 5994:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"P1\": function() { return /* binding */ createSelector; }\n});\n\n// UNUSED EXPORTS: createSelectorCreator, createStructuredSelector, defaultEqualityCheck, defaultMemoize\n\n;// CONCATENATED MODULE: ../../node_modules/reselect/es/defaultMemoize.js\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nvar defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nfunction createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nfunction defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}\n;// CONCATENATED MODULE: ../../node_modules/reselect/es/index.js\n\n\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nvar createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nvar createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};\n\n/***/ })\n\n}]);"],"names":["self","push","module","__unused_webpack_exports","__webpack_require__","arrayPush","isFlattenable","exports","baseFlatten","array","depth","predicate","isStrict","result","index","length","value","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","map","collection","iteratee","arrayMap","baseIteratee","baseMap","func","__unused_webpack_module","__webpack_exports__","r","d","components_SubgraphHealthIndicator","SubgraphStatus","ref","ref1","ref2","_object_spread","_sliced_to_array","_tagged_template_literal","jsx_runtime","config","src","styled_components_browser_esm","Card","Flex","Box","useTooltip","Text","Info","hooks","_async_to_generator","tslib_es6","react","dist","providers","endpoints","useRefreshEffect","_templateObject","data","Z","useSubgraphHealth","subgraphName","useState","status","UNKNOWN","currentBlock","chainHeadBlock","latestBlock","blockDifference","sgHealth","setSgHealth","X","currentBlockNumber","_ref","indexingStatusForCurrentVersion","isHealthy","chainHeadBlockDifference","error","__generator","_state","label","trys","Promise","all","request","AM","gql","resolve","v","getBlockNumber","apply","sent","health","parseInt","chains","number","NOT_OK","WARNING","OK","console","concat","arguments","SubgraphHealthIndicator_templateObject","_templateObject1","_templateObject2","StyledCard","ZP","withConfig","componentId","IndicatorWrapper","Dot","param","$color","theme","colors","TooltipContent","color","description","secondRemainingBlockSync","blockNumberFromSubgraph","t","$G","jsxs","children","pb","jsx","customDescriptions","sgStatus","inline","_obeyGlobalSetting","obeyGlobalSetting","hooks_useSubgraphHealth","alwaysShowIndicator","YF","forceIndicatorDisplay","indicatorProps","delayed","slow","healthy","hJ","current","placement","targetRef","tooltipVisible","tooltip","alignItems","justifyContent","position","bottom","right","p","useSlowRefreshEffect","useFastRefreshEffect","_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_4__","config_constants__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","swr__WEBPACK_IMPORTED_MODULE_2__","_useActiveChainId__WEBPACK_IMPORTED_MODULE_3__","EMPTY_ARRAY","effect","deps","chainId","g","_data","sR","useEffect","bind","KI","createSelector","NOT_FOUND","defaultEqualityCheck","a","b","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_lastResult","_len2","funcs","_key2","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","_directlyPassedOption","finalMemoizeOptions","Array","dependencies","getDependencies","every","dep","name","join","memoizedResultFunc","selector","params","i","Object","assign","lastResult","recomputations","resetRecomputations","equalityCheckOrOptions","equalityCheck","equals","entry","providedOptions","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","cache","get","key","put","getEntries","clear","createLruCache","entries","cacheIndex","findIndex","splice","unshift","memoized","matchingEntry","find","clearCache"],"sourceRoot":""}