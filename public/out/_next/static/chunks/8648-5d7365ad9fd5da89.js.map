{"version":3,"file":"static/chunks/8648-5d7365ad9fd5da89.js","mappings":"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","sources":["webpack://_N_E/./src/contexts/LocalRedux/Provider.tsx","webpack://_N_E/./src/contexts/LocalRedux/useLocalDispatch.ts","webpack://_N_E/./src/state/predictions/config.ts","webpack://_N_E/./src/state/predictions/bnbQueries.ts","webpack://_N_E/./src/state/predictions/cakeQueries.ts","webpack://_N_E/./src/state/predictions/queries.ts","webpack://_N_E/./src/utils/numberOrNull.ts","webpack://_N_E/./src/state/predictions/cakeTransformers.ts","webpack://_N_E/./src/state/predictions/bnbTransformers.ts","webpack://_N_E/./src/state/predictions/helpers.ts","webpack://_N_E/./src/contexts/LocalRedux/useSelector.ts","webpack://_N_E/./src/state/predictions/selectors.ts","webpack://_N_E/./src/state/predictions/hooks.ts","webpack://_N_E/./src/state/predictions/index.ts","webpack://_N_E/./src/views/Predictions/context/ConfigProvider.tsx","webpack://_N_E/./src/contexts/LocalRedux/makeStore.ts","webpack://_N_E/./src/views/Predictions/context/config.ts","webpack://_N_E/./src/views/Predictions/context/PredictionConfigProviders.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/CardBody.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/ArrowDown.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/ChevronDown.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/ChevronUp.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { createContext } from 'react'\nimport { Provider } from 'react-redux'\n\nexport const LocalContext = createContext(null)\n\nexport default ({ children, store }) => {\n  return (\n    <Provider store={store} context={LocalContext}>\n      {children}\n    </Provider>\n  )\n}\n","import { useContext, useCallback } from 'react'\nimport _noop from 'lodash/noop'\nimport { LocalContext } from './Provider'\n\nexport default function useLocalDispatch() {\n  const localContext = useContext(LocalContext)\n\n  const emptyFn = useCallback(_noop, [])\n\n  return localContext?.store?.dispatch || emptyFn\n}\n","import { BSC_BLOCK_TIME } from 'config'\n\nexport const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = BSC_BLOCK_TIME * 3\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 200\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { UserResponse, BetResponse, HistoricalBetResponse, RoundResponse } from './responseType'\n\nexport interface UserResponseBNB extends UserResponse<BetResponseBNB> {\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  averageBNB: string\n  totalBNBClaimed: string\n  netBNB: string\n}\n\nexport interface BetResponseBNB extends BetResponse {\n  claimedBNB: string\n  claimedNetBNB: string\n  user?: UserResponseBNB\n  round?: RoundResponseBNB\n}\n\nexport type HistoricalBetResponseBNB = HistoricalBetResponse<UserResponseBNB>\n\nexport type RoundResponseBNB = RoundResponse<BetResponseBNB>\n\nexport interface TotalWonMarketResponseBNB {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const roundBaseFields = `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const betBaseFields = `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const userBaseFields = `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { UserResponse, BetResponse, HistoricalBetResponse, RoundResponse } from './responseType'\n\nexport interface UserResponseCAKE extends UserResponse<BetResponseCAKE> {\n  totalCAKE: string\n  totalCAKEBull: string\n  totalCAKEBear: string\n  averageCAKE: string\n  totalCAKEClaimed: string\n  netCAKE: string\n}\n\nexport interface BetResponseCAKE extends BetResponse {\n  claimedCAKE: string\n  claimedNetCAKE: string\n  user?: UserResponseCAKE\n  round?: RoundResponseCAKE\n}\n\nexport type HistoricalBetResponseCAKE = HistoricalBetResponse<UserResponseCAKE>\n\nexport type RoundResponseCAKE = RoundResponse<BetResponseCAKE>\n\nexport interface TotalWonMarketResponseCAKE {\n  totalCAKE: string\n  totalCAKETreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const roundBaseFields = `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const betBaseFields = `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedCAKE\n claimedNetCAKE\n createdAt\n updatedAt\n`\n\nexport const userBaseFields = `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalCAKE\n  totalCAKEBull\n  totalCAKEBear\n  totalBetsClaimed\n  totalCAKEClaimed\n  winRate\n  averageCAKE\n  netCAKE\n`\n","import {\n  roundBaseFields as roundBaseFieldsBNB,\n  betBaseFields as betBaseFieldsBNB,\n  userBaseFields as userBaseFieldsBNB,\n} from './bnbQueries'\nimport {\n  roundBaseFields as roundBaseFieldsCAKE,\n  betBaseFields as betBaseFieldsCAKE,\n  userBaseFields as userBaseFieldsCAKE,\n} from './cakeQueries'\n\nexport const getRoundBaseFields = (tokenSymbol: string) =>\n  tokenSymbol === 'CAKE' ? roundBaseFieldsCAKE : roundBaseFieldsBNB\n\nexport const getBetBaseFields = (tokenSymbol: string) => (tokenSymbol === 'CAKE' ? betBaseFieldsCAKE : betBaseFieldsBNB)\n\nexport const getUserBaseFields = (tokenSymbol: string) =>\n  tokenSymbol === 'CAKE' ? userBaseFieldsCAKE : userBaseFieldsBNB\n","const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport default numberOrNull\n","import { Bet, BetPosition, Round, PredictionUser } from 'state/types'\nimport numberOrNull from 'utils/numberOrNull'\n\nimport { RoundResponseCAKE } from './cakeQueries'\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponseCAKE = (betResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedCAKE ? parseFloat(betResponse.claimedCAKE) : 0,\n    claimedNetBNB: betResponse.claimedNetCAKE ? parseFloat(betResponse.claimedNetCAKE) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponseCAKE(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponseCAKE(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponseCAKE = (userResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalCAKE,\n    totalCAKEBull,\n    totalCAKEBear,\n    totalBetsClaimed,\n    totalCAKEClaimed,\n    winRate,\n    averageCAKE,\n    netCAKE,\n  } = userResponse || {}\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalCAKE ? parseFloat(totalCAKE) : 0,\n    totalBNBBull: totalCAKEBull ? parseFloat(totalCAKEBull) : 0,\n    totalBNBBear: totalCAKEBear ? parseFloat(totalCAKEBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalCAKEClaimed ? parseFloat(totalCAKEClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageCAKE ? parseFloat(averageCAKE) : 0,\n    netBNB: netCAKE ? parseFloat(netCAKE) : 0,\n  }\n}\n\nexport const transformRoundResponseCAKE = (roundResponse: RoundResponseCAKE): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponseCAKE),\n  }\n}\n","import { Bet, BetPosition, Round, PredictionUser } from 'state/types'\nimport numberOrNull from 'utils/numberOrNull'\nimport { RoundResponseBNB } from './bnbQueries'\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponseBNB = (betResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponseBNB(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponseBNB(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponseBNB = (userResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse || {}\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponseBNB = (roundResponse: RoundResponseBNB): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponseBNB),\n  }\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION_BNB, GRAPH_API_PREDICTION_CAKE } from 'config/constants/endpoints'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  RoundData,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { Zero } from '@ethersproject/constants'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport { getRoundBaseFields, getBetBaseFields, getUserBaseFields } from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\nimport { transformBetResponseCAKE, transformUserResponseCAKE } from './cakeTransformers'\nimport { transformBetResponseBNB, transformUserResponseBNB } from './bnbTransformers'\nimport { BetResponse, UserResponse } from './responseType'\nimport { BetResponseBNB } from './bnbQueries'\nimport { BetResponseCAKE } from './cakeQueries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  HOUSE = 'house',\n  LIVE = 'live',\n}\n\nexport const transformBetResponse = (tokenSymbol) =>\n  tokenSymbol === 'CAKE' ? transformBetResponseCAKE : transformBetResponseBNB\n\nexport const transformUserResponse = (tokenSymbol) =>\n  tokenSymbol === 'CAKE' ? transformUserResponseCAKE : transformUserResponseBNB\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n\n  if (bet.round.position === BetPosition.HOUSE) {\n    return Result.HOUSE\n  }\n\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nconst getTotalWonMarket = (market, tokenSymbol) => {\n  const total = market[`total${tokenSymbol}`] ? parseFloat(market[`total${tokenSymbol}`]) : 0\n  const totalTreasury = market[`total${tokenSymbol}Treasury`] ? parseFloat(market[`total${tokenSymbol}Treasury`]) : 0\n\n  return Math.max(total - totalTreasury, 0)\n}\n\nexport const getTotalWon = async (): Promise<{ totalWonBNB: number; totalWonCAKE: number }> => {\n  const [{ market: BNBMarket, market: CAKEMarket }] = await Promise.all([\n    request(\n      GRAPH_API_PREDICTION_BNB,\n      gql`\n        query getTotalWonData {\n          market(id: 1) {\n            totalBNB\n            totalBNBTreasury\n          }\n        }\n      `,\n    ),\n    request(\n      GRAPH_API_PREDICTION_CAKE,\n      gql`\n        query getTotalWonData {\n          market(id: 1) {\n            totalCAKE\n            totalCAKETreasury\n          }\n        }\n      `,\n    ),\n  ])\n\n  const totalWonBNB = getTotalWonMarket(BNBMarket, 'BNB')\n  const totalWonCAKE = getTotalWonMarket(CAKEMarket, 'CAKE')\n\n  return { totalWonBNB, totalWonCAKE }\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: WhereClause = {},\n  first = 1000,\n  skip = 0,\n  api: string,\n  tokenSymbol: string,\n): Promise<Array<BetResponseBNB | BetResponseCAKE>> => {\n  const response = await request(\n    api,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields(tokenSymbol)}\n          round {\n            ${getRoundBaseFields(tokenSymbol)}\n          }\n          user {\n            ${getUserBaseFields(tokenSymbol)}\n          }\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getLedgerData = async (account: string, epochs: number[], address: string) => {\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>({ abi: predictionsAbi, calls: ledgerCalls })\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getHasRoundFailed = (oracleCalled: boolean, closeTimestamp: number, buffer: number) => {\n  if (!oracleCalled) {\n    const closeTimestampMs = (closeTimestamp + buffer) * 1000\n    if (Number.isFinite(closeTimestampMs)) {\n      return Date.now() > closeTimestampMs\n    }\n  }\n\n  return false\n}\n\nexport const getPredictionUsers = async (\n  options: GetPredictionUsersOptions = {},\n  api: string,\n  tokenSymbol: string,\n): Promise<UserResponse<BetResponse>[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    api,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields(tokenSymbol)}\n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (\n  account: string,\n  api: string,\n  tokenSymbol: string,\n): Promise<UserResponse<BetResponse>> => {\n  const response = await request(\n    api,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields(tokenSymbol)}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n  address: string,\n): Promise<PredictionsState['claimableStatuses']> => {\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>({\n    abi: predictionsAbi,\n    calls: claimableCalls,\n  })\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<PredictionsState, 'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount'>\nexport const getPredictionData = async (address: string): Promise<MarketData> => {\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused]] = await multicallv2({\n    abi: predictionsAbi,\n    calls: staticCalls,\n  })\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[], address: string): Promise<PredictionsRoundsResponse[]> => {\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>({ abi: predictionsAbi, calls })\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: Zero.toJSON(),\n    bullAmount: Zero.toJSON(),\n    bearAmount: Zero.toJSON(),\n    rewardBaseCalAmount: Zero.toJSON(),\n    rewardAmount: Zero.toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into BigNumber\n * BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string, address: string) => {\n  try {\n    const contract = getPredictionsContract(address)\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return Zero\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n  address,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract(address)\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index] as PredictionsLedgerResponse),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","import { createSelectorHook } from 'react-redux'\nimport { LocalContext } from './Provider'\n\nconst useSelector = createSelectorHook(LocalContext)\n\nexport default useSelector\n","import { BigNumber } from '@ethersproject/bignumber'\nimport orderBy from 'lodash/orderBy'\nimport { createSelector } from '@reduxjs/toolkit'\nimport { PredictionsState, ReduxNodeRound, NodeRound, ReduxNodeLedger, NodeLedger } from '../types'\nimport { parseBigNumberObj } from './helpers'\n\nconst selectCurrentEpoch = (state: PredictionsState) => state.currentEpoch\nconst selectRounds = (state: PredictionsState) => state.rounds\nconst selectLedgers = (state: PredictionsState) => state.ledgers\nconst selectClaimableStatuses = (state: PredictionsState) => state.claimableStatuses\nconst selectMinBetAmount = (state: PredictionsState) => state.minBetAmount\nconst selectIntervalSeconds = (state: PredictionsState) => state.intervalSeconds\n\nexport const makeGetBetByEpochSelector = (account: string, epoch: number) =>\n  createSelector([selectLedgers], (bets) => {\n    if (!bets[account]) {\n      return null\n    }\n\n    if (!bets[account][epoch]) {\n      return null\n    }\n\n    return parseBigNumberObj<ReduxNodeLedger, NodeLedger>(bets[account][epoch])\n  })\n\nexport const makeGetIsClaimableSelector = (epoch: number) =>\n  createSelector([selectClaimableStatuses], (claimableStatuses) => {\n    return claimableStatuses[epoch] || false\n  })\n\nexport const getRoundsByCloseOracleIdSelector = createSelector([selectRounds], (rounds) => {\n  return Object.keys(rounds).reduce((accum, epoch) => {\n    const parsed = parseBigNumberObj<ReduxNodeRound, NodeRound>(rounds[epoch])\n    return {\n      ...accum,\n      [parsed.closeOracleId]: parsed,\n    }\n  }, {}) as { [key: string]: NodeRound }\n})\n\nexport const getBigNumberRounds = createSelector([selectRounds], (rounds) => {\n  return Object.keys(rounds).reduce((accum, epoch) => {\n    return {\n      ...accum,\n      [epoch]: parseBigNumberObj<ReduxNodeRound, NodeRound>(rounds[epoch]),\n    }\n  }, {}) as { [key: string]: NodeRound }\n})\n\nexport const getSortedRoundsSelector = createSelector([getBigNumberRounds], (rounds) => {\n  return orderBy(Object.values(rounds), ['epoch'], ['asc'])\n})\n\nexport const getSortedRoundsCurrentEpochSelector = createSelector(\n  [selectCurrentEpoch, getSortedRoundsSelector],\n  (currentEpoch, sortedRounds) => {\n    return {\n      currentEpoch,\n      rounds: sortedRounds,\n    }\n  },\n)\n\nexport const getMinBetAmountSelector = createSelector([selectMinBetAmount], BigNumber.from)\n\nexport const getCurrentRoundCloseTimestampSelector = createSelector(\n  [selectCurrentEpoch, getBigNumberRounds, selectIntervalSeconds],\n  (currentEpoch, rounds, intervalSeconds) => {\n    if (!currentEpoch) {\n      return undefined\n    }\n\n    const currentRound = rounds[currentEpoch - 1]\n\n    if (!currentRound) {\n      return undefined\n    }\n\n    if (!currentRound.closeTimestamp) {\n      return currentRound.lockTimestamp + intervalSeconds\n    }\n    return currentRound.closeTimestamp\n  },\n)\n","import { useEffect, useMemo } from 'react'\nimport { isAddress } from 'utils'\nimport useLocalDispatch from 'contexts/LocalRedux/useLocalDispatch'\nimport useSelector from 'contexts/LocalRedux/useSelector'\nimport { FetchStatus } from 'config/constants/types'\n\nimport { PredictionsState, PredictionUser } from '../types'\nimport { fetchAddressResult } from '.'\nimport {\n  getRoundsByCloseOracleIdSelector,\n  getSortedRoundsSelector,\n  makeGetBetByEpochSelector,\n  makeGetIsClaimableSelector,\n  getMinBetAmountSelector,\n  getSortedRoundsCurrentEpochSelector,\n  getCurrentRoundCloseTimestampSelector,\n} from './selectors'\n\nexport const useGetRoundsByCloseOracleId = () => {\n  return useSelector(getRoundsByCloseOracleIdSelector)\n}\n\nexport const useGetSortedRounds = () => {\n  return useSelector(getSortedRoundsSelector)\n}\n\nexport const useGetSortedRoundsCurrentEpoch = () => {\n  return useSelector(getSortedRoundsCurrentEpochSelector)\n}\n\nexport const useGetBetByEpoch = (account: string, epoch: number) => {\n  const getBetByEpochSelector = useMemo(() => makeGetBetByEpochSelector(account, epoch), [account, epoch])\n  return useSelector(getBetByEpochSelector)\n}\n\nexport const useGetIsClaimable = (epoch) => {\n  const getIsClaimableSelector = useMemo(() => makeGetIsClaimableSelector(epoch), [epoch])\n  return useSelector(getIsClaimableSelector)\n}\n\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: PredictionsState) => state.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: PredictionsState) => state.isChartPaneOpen)\n}\n\nexport const useChartView = () => {\n  return useSelector((state: PredictionsState) => state.chartView)\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: PredictionsState) => state.currentEpoch)\n}\n\nexport const useGetIntervalSeconds = () => {\n  return useSelector((state: PredictionsState) => state.intervalSeconds)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: PredictionsState) => state.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: PredictionsState) => state.historyFilter)\n}\n\nexport const useGetHasHistoryLoaded = () => {\n  return useSelector((state: PredictionsState) => state.hasHistoryLoaded)\n}\n\nexport const useGetCurrentHistoryPage = () => {\n  return useSelector((state: PredictionsState) => state.currentHistoryPage)\n}\n\nexport const useGetMinBetAmount = () => {\n  return useSelector(getMinBetAmountSelector)\n}\n\nexport const useGetBufferSeconds = () => {\n  return useSelector((state: PredictionsState) => state.bufferSeconds)\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: PredictionsState) => state.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: PredictionsState) => state.history)\n}\n\n/**\n * The current round's lock timestamp will not be set immediately so we return an estimate until then\n */\nexport const useGetCurrentRoundCloseTimestamp = () => {\n  return useSelector(getCurrentRoundCloseTimestampSelector)\n}\n\n// Leaderboard\nexport const useGetLeaderboardLoadingState = (): FetchStatus => {\n  return useSelector((state: PredictionsState) => state.leaderboard.loadingState)\n}\n\nexport const useGetLeaderboardResults = () => {\n  return useSelector((state: PredictionsState) => state.leaderboard.results)\n}\n\nexport const useGetLeaderboardFilters = () => {\n  return useSelector((state: PredictionsState) => state.leaderboard.filters)\n}\n\nexport const useGetLeaderboardSkip = () => {\n  return useSelector((state: PredictionsState) => state.leaderboard.skip)\n}\n\nexport const useGetLeaderboardHasMoreResults = () => {\n  return useSelector((state: PredictionsState) => state.leaderboard.hasMoreResults)\n}\n\nexport const useGetAddressResult = (account: string) => {\n  return useSelector((state: PredictionsState) => state.leaderboard.addressResults[account])\n}\n\nexport const useGetOrFetchLeaderboardAddressResult = (account: string): PredictionUser => {\n  const addressResult = useGetAddressResult(account)\n  const dispatch = useLocalDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    // If address result is null it means we already tried fetching the results and none came back\n    if (!addressResult && addressResult !== null && address) {\n      dispatch(fetchAddressResult(account))\n    }\n  }, [dispatch, account, addressResult])\n\n  return addressResult\n}\n\nexport const useGetSelectedAddress = (): string => {\n  return useSelector((state: PredictionsState) => state.leaderboard.selectedAddress)\n}\n\n// Because Modal Component is rendered outside the Prediction Page contexts\n// We have to pass local state as props instead of retrieving directly in component\nexport const useStatModalProps = (account?: string) => {\n  const selectedAddress = useGetSelectedAddress()\n  const address = account || selectedAddress\n  const result = useGetOrFetchLeaderboardAddressResult(address)\n  const leaderboardLoadingState = useGetLeaderboardLoadingState()\n\n  return {\n    address,\n    result,\n    leaderboardLoadingState,\n  }\n}\n\nexport const useCollectWinningModalProps = () => {\n  const isLoadingHistory = useGetIsFetchingHistory()\n  const history = useGetHistory()\n\n  return {\n    isLoadingHistory,\n    history,\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { formatUnits } from '@ethersproject/units'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport pickBy from 'lodash/pickBy'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  PredictionUser,\n  LeaderboardFilter,\n  PredictionsChartView,\n  PredictionConfig,\n} from 'state/types'\nimport { FetchStatus } from 'config/constants/types'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n  getHasRoundFailed,\n} from './helpers'\nimport { resetUserState } from '../global/actions'\n\nexport const initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  chartView: PredictionsChartView.Chainlink,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    selectedAddress: null,\n    loadingState: FetchStatus.Idle,\n    filters: {\n      address: null,\n      orderBy: 'totalBets',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'rounds' | 'ledgers' | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string, { extra: PredictionConfig }>(\n  'predictions/initialize',\n  async (account = null, { extra }) => {\n    // Static values\n    const marketData = await getPredictionData(extra.address)\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs, extra.address)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    const [ledgerResponses, claimableStatuses] = await Promise.all([\n      getLedgerData(account, epochs, extra.address), // Bet data\n      getClaimStatuses(account, epochs, extra.address), // Claim statuses\n    ])\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchPredictionData = createAsyncThunk<PredictionInitialization, string, { extra: PredictionConfig }>(\n  'predictions/fetchPredictionData',\n  async (account = null, { extra }) => {\n    const { status, currentEpoch, intervalSeconds, minBetAmount } = await getPredictionData(extra.address)\n    const liveCurrentAndRecent = [currentEpoch, currentEpoch - 1, currentEpoch - 2]\n\n    const roundsResponse = await getRoundsData(liveCurrentAndRecent, extra.address)\n    const roundData = roundsResponse.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const publicData = {\n      status,\n      currentEpoch,\n      intervalSeconds,\n      minBetAmount,\n      rounds: roundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return publicData\n    }\n\n    const epochs =\n      currentEpoch > PAST_ROUND_COUNT ? range(currentEpoch, currentEpoch - PAST_ROUND_COUNT) : [currentEpoch]\n\n    const [ledgerResponses, claimableStatuses] = await Promise.all([\n      getLedgerData(account, epochs, extra.address), // Bet data\n      getClaimStatuses(account, epochs, extra.address), // Claim statuses\n    ])\n\n    return merge({}, publicData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchLedgerData = createAsyncThunk<\n  LedgerData,\n  { account: string; epochs: number[] },\n  { extra: PredictionConfig }\n>('predictions/fetchLedgerData', async ({ account, epochs }, { extra }) => {\n  const ledgers = await getLedgerData(account, epochs, extra.address)\n  return makeLedgerData(account, ledgers, epochs)\n})\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number },\n  { state: PredictionsState; extra: PredictionConfig }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }, { getState, extra }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account, extra.address)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size, extra.address)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const [roundData, claimableStatuses] = await Promise.all([\n    getRoundsData(epochs, extra.address),\n    getClaimStatuses(account, epochs, extra.address),\n  ])\n\n  // No need getState().predictions in local redux state\n  const { bufferSeconds } = getState()\n\n  // Turn the data from the node into a Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const ledger = userRounds[round.epoch.toNumber()]\n    const ledgerAmount = BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: getHasRoundFailed(\n            round.oracleCalled,\n            round.closeTimestamp.eq(0) ? null : round.closeTimestamp.toNumber(),\n            bufferSeconds,\n          ),\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<\n  { results: PredictionUser[] },\n  { filters: LeaderboardFilter },\n  { extra: PredictionConfig }\n>('predictions/filterLeaderboard', async ({ filters }, { extra }) => {\n  const usersResponse = await getPredictionUsers(\n    {\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    },\n    extra.api,\n    extra.token.symbol,\n  )\n\n  const transformer = transformUserResponse(extra.token.symbol)\n\n  return { results: usersResponse.map(transformer) }\n})\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string; extra: PredictionConfig }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue, extra }) => {\n  const userResponse = await getPredictionUser(account, extra.api, extra.token.symbol)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(extra.token.symbol)(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: PredictionsState; extra: PredictionConfig }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState, extra }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers(\n    {\n      skip,\n      orderBy: state.leaderboard.filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.leaderboard.filters.orderBy}_gt`]: 0 },\n    },\n    extra.api,\n    extra.token.symbol,\n  )\n\n  const transformer = transformUserResponse(extra.token.symbol)\n\n  return { results: usersResponse.map(transformer), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setChartView: (state, action: PayloadAction<PredictionsChartView>) => {\n      state.chartView = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n    setSelectedAddress: (state, action: PayloadAction<string>) => {\n      state.leaderboard.selectedAddress = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(resetUserState, (state) => {\n      state.claimableStatuses = {}\n      state.ledgers = {}\n      state.isFetchingHistory = false\n      state.history = []\n      state.hasHistoryLoaded = false\n      state.totalHistory = 0\n      state.currentHistoryPage = 1\n    })\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from Fetched. This allows initialization.\n      if (state.leaderboard.loadingState === FetchStatus.Fetched) {\n        state.leaderboard.loadingState = FetchStatus.Fetching\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = FetchStatus.Fetched\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = FetchStatus.Fetching\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = FetchStatus.Fetched\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = FetchStatus.Fetched // TODO: should handle error\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = FetchStatus.Fetching\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = FetchStatus.Fetched\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchPredictionData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount, rounds, claimableStatuses, ledgers } = action.payload\n\n      const allRoundData = merge({}, state.rounds, rounds)\n      let newRounds = pickBy(allRoundData, (value, key) => {\n        return Number(key) > state.currentEpoch - PAST_ROUND_COUNT\n      })\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        newRounds = { ...newRounds, [futureRound.epoch]: futureRound }\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n      state.claimableStatuses = merge({}, state.claimableStatuses, claimableStatuses)\n      state.ledgers = merge({}, state.ledgers, ledgers)\n      state.rounds = newRounds\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, rounds, claimableStatuses, ledgers } = action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setChartView,\n  setHistoryFilter,\n  setHistoryPaneState,\n  markAsCollected,\n  setLeaderboardFilter,\n  setSelectedAddress,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { createContext, useContext } from 'react'\nimport { PredictionConfig } from 'state/types'\n\nexport const ConfigContext = createContext<PredictionConfig>(null)\n\nexport function useConfig() {\n  return useContext(ConfigContext)\n}\n\nexport default function ConfigProvider({ children, config }) {\n  return <ConfigContext.Provider value={config}>{children}</ConfigContext.Provider>\n}\n","import { configureStore } from '@reduxjs/toolkit'\n\nexport default function makeStore(reducer, preloadedState = undefined, extraArgument) {\n  return configureStore({\n    reducer,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        thunk: {\n          extraArgument,\n        },\n      }),\n    preloadedState,\n  })\n}\n","import addresses from 'config/constants/contracts'\n\nimport { GRAPH_API_PREDICTION_CAKE, GRAPH_API_PREDICTION_BNB } from 'config/constants/endpoints'\nimport { getAddress } from 'utils/addressHelpers'\nimport { bscTokens } from '@pancakeswap/tokens'\nimport { BigNumber } from '@ethersproject/bignumber'\n\nconst DEFAULT_MIN_PRICE_USD_DISPLAYED = BigNumber.from(10000)\n\nexport default {\n  BNB: {\n    address: getAddress(addresses.predictionsBNB),\n    api: GRAPH_API_PREDICTION_BNB,\n    chainlinkOracleAddress: getAddress(addresses.chainlinkOracleBNB),\n    minPriceUsdDisplayed: DEFAULT_MIN_PRICE_USD_DISPLAYED,\n    displayedDecimals: 4,\n    token: bscTokens.bnb,\n  },\n  CAKE: {\n    address: getAddress(addresses.predictionsCAKE),\n    api: GRAPH_API_PREDICTION_CAKE,\n    chainlinkOracleAddress: getAddress(addresses.chainlinkOracleCAKE),\n    minPriceUsdDisplayed: DEFAULT_MIN_PRICE_USD_DISPLAYED,\n    displayedDecimals: 4,\n    token: bscTokens.cake,\n  },\n}\n","import { useState, useMemo, useEffect } from 'react'\nimport LocalReduxProvider from 'contexts/LocalRedux/Provider'\nimport makeStore from 'contexts/LocalRedux/makeStore'\nimport { PredictionSupportedSymbol } from 'state/types'\nimport reducers, { initialState } from 'state/predictions'\nimport { useRouter } from 'next/router'\nimport _toUpper from 'lodash/toUpper'\nimport ConfigProvider from './ConfigProvider'\nimport configs from './config'\n\nconst PREDICTION_TOKEN_KEY = 'prediction-token'\n\nconst PredictionConfigProviders = ({ children }) => {\n  const { query } = useRouter()\n  const { token } = query\n  const [selectedToken, setConfig] = useState(() => {\n    const initToken = localStorage?.getItem(PREDICTION_TOKEN_KEY) as PredictionSupportedSymbol\n\n    if ([PredictionSupportedSymbol.BNB, PredictionSupportedSymbol.CAKE].includes(initToken)) {\n      return initToken\n    }\n\n    return PredictionSupportedSymbol.CAKE\n  })\n\n  useEffect(() => {\n    const upperToken = _toUpper(token as string) as PredictionSupportedSymbol\n\n    if ([PredictionSupportedSymbol.BNB, PredictionSupportedSymbol.CAKE].includes(upperToken)) {\n      setConfig(upperToken)\n      localStorage?.setItem(PREDICTION_TOKEN_KEY, upperToken)\n    }\n  }, [token])\n\n  const config = useMemo(() => {\n    return configs[selectedToken]\n  }, [selectedToken])\n\n  const store = useMemo(() => {\n    return makeStore(reducers, initialState, config)\n  }, [config])\n\n  return (\n    <ConfigProvider config={config}>\n      <LocalReduxProvider store={store}>{children}</LocalReduxProvider>\n    </ConfigProvider>\n  )\n}\n\nexport default PredictionConfigProviders\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardBodyProps = SpaceProps;\n\nconst CardBody = styled.div<CardBodyProps>`\n  ${space}\n`;\n\nCardBody.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardBody;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M11 5V16.17L6.11997 11.29C5.72997 10.9 5.08997 10.9 4.69997 11.29C4.30997 11.68 4.30997 12.31 4.69997 12.7L11.29 19.29C11.68 19.68 12.31 19.68 12.7 19.29L19.29 12.7C19.68 12.31 19.68 11.68 19.29 11.29C18.9 10.9 18.27 10.9 17.88 11.29L13 16.17V5C13 4.45 12.55 4 12 4C11.45 4 11 4.45 11 5Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 9.29006L12 13.1701L15.88 9.29006C16.27 8.90006 16.9 8.90006 17.29 9.29006C17.68 9.68006 17.68 10.3101 17.29 10.7001L12.7 15.2901C12.31 15.6801 11.68 15.6801 11.29 15.2901L6.69997 10.7001C6.30997 10.3101 6.30997 9.68006 6.69997 9.29006C7.08997 8.91006 7.72997 8.90006 8.11997 9.29006Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 14.7101L12 10.8301L15.88 14.7101C16.27 15.1001 16.9 15.1001 17.29 14.7101C17.68 14.3201 17.68 13.6901 17.29 13.3001L12.7 8.7101C12.31 8.3201 11.68 8.3201 11.29 8.7101L6.69997 13.3001C6.30997 13.6901 6.30997 14.3201 6.69997 14.7101C7.08997 15.0901 7.72997 15.1001 8.11997 14.7101Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[8648],{\n\n/***/ 99022:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"A\": function() { return /* binding */ LocalContext; },\n/* harmony export */   \"Z\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2784);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(43997);\n\n\n\nvar LocalContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(param) {\n    var children = param.children, store = param.store;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_redux__WEBPACK_IMPORTED_MODULE_2__/* .Provider */ .zt, {\n        store: store,\n        context: LocalContext,\n        children: children\n    });\n};\n\n\n/***/ }),\n\n/***/ 27094:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ useLocalDispatch; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2784);\n/* harmony import */ var lodash_noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34291);\n/* harmony import */ var lodash_noop__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_noop__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(99022);\n\n\n\nfunction useLocalDispatch() {\n    var ref;\n    var localContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_Provider__WEBPACK_IMPORTED_MODULE_2__/* .LocalContext */ .A);\n    var emptyFn = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((lodash_noop__WEBPACK_IMPORTED_MODULE_1___default()), []);\n    return (localContext === null || localContext === void 0 ? void 0 : (ref = localContext.store) === null || ref === void 0 ? void 0 : ref.dispatch) || emptyFn;\n}\n\n\n/***/ }),\n\n/***/ 87799:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ck\": function() { return /* binding */ REWARD_RATE; },\n/* harmony export */   \"ND\": function() { return /* binding */ FUTURE_ROUND_COUNT; },\n/* harmony export */   \"eQ\": function() { return /* binding */ LEADERBOARD_MIN_ROUNDS_PLAYED; },\n/* harmony export */   \"fq\": function() { return /* binding */ ROUND_BUFFER; },\n/* harmony export */   \"v9\": function() { return /* binding */ PAST_ROUND_COUNT; },\n/* harmony export */   \"yg\": function() { return /* binding */ ROUNDS_PER_PAGE; }\n/* harmony export */ });\n/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7599);\n\nvar REWARD_RATE = 0.97;\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nvar ROUND_BUFFER = config__WEBPACK_IMPORTED_MODULE_0__/* .BSC_BLOCK_TIME */ .hJ * 3;\nvar PAST_ROUND_COUNT = 5;\nvar FUTURE_ROUND_COUNT = 2;\nvar ROUNDS_PER_PAGE = 200;\nvar LEADERBOARD_MIN_ROUNDS_PLAYED = 10;\n\n\n/***/ }),\n\n/***/ 51014:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"ub\": function() { return /* binding */ LEADERBOARD_RESULTS_PER_PAGE; },\n  \"x4\": function() { return /* binding */ Result; },\n  \"oO\": function() { return /* binding */ fetchUserRounds; },\n  \"t$\": function() { return /* binding */ fetchUsersRoundsLength; },\n  \"Fr\": function() { return /* binding */ getBetHistory; },\n  \"jG\": function() { return /* binding */ getClaimStatuses; },\n  \"fq\": function() { return /* binding */ getFilteredBets; },\n  \"HJ\": function() { return /* binding */ getHasRoundFailed; },\n  \"Tq\": function() { return /* binding */ getLedgerData; },\n  \"n\": function() { return /* binding */ getPredictionData; },\n  \"s9\": function() { return /* binding */ getPredictionUser; },\n  \"D\": function() { return /* binding */ getPredictionUsers; },\n  \"yz\": function() { return /* binding */ getRoundResult; },\n  \"$8\": function() { return /* binding */ getRoundsData; },\n  \"CM\": function() { return /* binding */ makeFutureRoundResponse; },\n  \"a8\": function() { return /* binding */ makeLedgerData; },\n  \"D5\": function() { return /* binding */ makeRoundData; },\n  \"zN\": function() { return /* binding */ parseBigNumberObj; },\n  \"WB\": function() { return /* binding */ serializePredictionsRoundsResponse; },\n  \"ld\": function() { return /* binding */ transformBetResponse; },\n  \"r3\": function() { return /* binding */ transformUserResponse; }\n});\n\n// UNUSED EXPORTS: getTotalWon, serializePredictionsLedgerResponse\n\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(98788);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_define_property.mjs\nvar _define_property = __webpack_require__(47842);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(70865);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(96670);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(87394);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(92228);\n// EXTERNAL MODULE: ../../node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(5163);\n// EXTERNAL MODULE: ../../node_modules/graphql-request/dist/index.js\nvar dist = __webpack_require__(6647);\n// EXTERNAL MODULE: ./src/config/constants/endpoints.ts\nvar endpoints = __webpack_require__(10494);\n// EXTERNAL MODULE: ../../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\nvar bignumber = __webpack_require__(10528);\n// EXTERNAL MODULE: ./src/state/types.ts\nvar types = __webpack_require__(93638);\n// EXTERNAL MODULE: ./src/utils/multicall.ts\nvar multicall = __webpack_require__(25152);\n// EXTERNAL MODULE: ./src/utils/contractHelpers.ts + 28 modules\nvar contractHelpers = __webpack_require__(80405);\n// EXTERNAL MODULE: ./src/config/abi/predictions.json\nvar predictions = __webpack_require__(45883);\n// EXTERNAL MODULE: ../../node_modules/@ethersproject/constants/lib.esm/bignumbers.js\nvar bignumbers = __webpack_require__(90711);\n;// CONCATENATED MODULE: ./src/state/predictions/bnbQueries.ts\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */ var roundBaseFields = \"\\n  id\\n  epoch\\n  position\\n  failed\\n  startAt\\n  startBlock\\n  startHash\\n  lockAt\\n  lockBlock\\n  lockHash\\n  lockPrice\\n  lockRoundId\\n  closeAt\\n  closeBlock\\n  closeHash\\n  closePrice\\n  closeRoundId\\n  totalBets\\n  totalAmount\\n  bullBets\\n  bullAmount\\n  bearBets\\n  bearAmount\\n\";\nvar betBaseFields = \"\\n id\\n hash  \\n amount\\n position\\n claimed\\n claimedAt\\n claimedHash\\n claimedBlock\\n claimedBNB\\n claimedNetBNB\\n createdAt\\n updatedAt\\n\";\nvar userBaseFields = \"\\n  id\\n  createdAt\\n  updatedAt\\n  block\\n  totalBets\\n  totalBetsBull\\n  totalBetsBear\\n  totalBNB\\n  totalBNBBull\\n  totalBNBBear\\n  totalBetsClaimed\\n  totalBNBClaimed\\n  winRate\\n  averageBNB\\n  netBNB\\n\";\n\n;// CONCATENATED MODULE: ./src/state/predictions/cakeQueries.ts\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */ var cakeQueries_roundBaseFields = \"\\n  id\\n  epoch\\n  position\\n  failed\\n  startAt\\n  startBlock\\n  startHash\\n  lockAt\\n  lockBlock\\n  lockHash\\n  lockPrice\\n  lockRoundId\\n  closeAt\\n  closeBlock\\n  closeHash\\n  closePrice\\n  closeRoundId\\n  totalBets\\n  totalAmount\\n  bullBets\\n  bullAmount\\n  bearBets\\n  bearAmount\\n\";\nvar cakeQueries_betBaseFields = \"\\n id\\n hash  \\n amount\\n position\\n claimed\\n claimedAt\\n claimedHash\\n claimedBlock\\n claimedCAKE\\n claimedNetCAKE\\n createdAt\\n updatedAt\\n\";\nvar cakeQueries_userBaseFields = \"\\n  id\\n  createdAt\\n  updatedAt\\n  block\\n  totalBets\\n  totalBetsBull\\n  totalBetsBear\\n  totalCAKE\\n  totalCAKEBull\\n  totalCAKEBear\\n  totalBetsClaimed\\n  totalCAKEClaimed\\n  winRate\\n  averageCAKE\\n  netCAKE\\n\";\n\n;// CONCATENATED MODULE: ./src/state/predictions/queries.ts\n\n\nvar getRoundBaseFields = function(tokenSymbol) {\n    return tokenSymbol === \"CAKE\" ? cakeQueries_roundBaseFields : roundBaseFields;\n};\nvar getBetBaseFields = function(tokenSymbol) {\n    return tokenSymbol === \"CAKE\" ? cakeQueries_betBaseFields : betBaseFields;\n};\nvar getUserBaseFields = function(tokenSymbol) {\n    return tokenSymbol === \"CAKE\" ? cakeQueries_userBaseFields : userBaseFields;\n};\n\n// EXTERNAL MODULE: ./src/state/predictions/config.ts\nvar config = __webpack_require__(87799);\n;// CONCATENATED MODULE: ./src/utils/numberOrNull.ts\nvar numberOrNull = function(value) {\n    if (value === null) {\n        return null;\n    }\n    var valueNum = Number(value);\n    return Number.isNaN(valueNum) ? null : valueNum;\n};\n/* harmony default export */ var utils_numberOrNull = (numberOrNull);\n\n;// CONCATENATED MODULE: ./src/state/predictions/cakeTransformers.ts\n\n\nvar getRoundPosition = function(positionResponse) {\n    if (positionResponse === \"Bull\") {\n        return types/* BetPosition.BULL */.Tu.BULL;\n    }\n    if (positionResponse === \"Bear\") {\n        return types/* BetPosition.BEAR */.Tu.BEAR;\n    }\n    if (positionResponse === \"House\") {\n        return types/* BetPosition.HOUSE */.Tu.HOUSE;\n    }\n    return null;\n};\nvar transformBetResponseCAKE = function(betResponse) {\n    var bet = {\n        id: betResponse.id,\n        hash: betResponse.hash,\n        block: utils_numberOrNull(betResponse.block),\n        amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n        position: betResponse.position === \"Bull\" ? types/* BetPosition.BULL */.Tu.BULL : types/* BetPosition.BEAR */.Tu.BEAR,\n        claimed: betResponse.claimed,\n        claimedAt: utils_numberOrNull(betResponse.claimedAt),\n        claimedBlock: utils_numberOrNull(betResponse.claimedBlock),\n        claimedHash: betResponse.claimedHash,\n        claimedBNB: betResponse.claimedCAKE ? parseFloat(betResponse.claimedCAKE) : 0,\n        claimedNetBNB: betResponse.claimedNetCAKE ? parseFloat(betResponse.claimedNetCAKE) : 0,\n        createdAt: utils_numberOrNull(betResponse.createdAt),\n        updatedAt: utils_numberOrNull(betResponse.updatedAt)\n    };\n    if (betResponse.user) {\n        bet.user = transformUserResponseCAKE(betResponse.user);\n    }\n    if (betResponse.round) {\n        bet.round = transformRoundResponseCAKE(betResponse.round);\n    }\n    return bet;\n};\nvar transformUserResponseCAKE = function(userResponse) {\n    var ref = userResponse || {}, id = ref.id, createdAt = ref.createdAt, updatedAt = ref.updatedAt, block = ref.block, totalBets = ref.totalBets, totalBetsBull = ref.totalBetsBull, totalBetsBear = ref.totalBetsBear, totalCAKE = ref.totalCAKE, totalCAKEBull = ref.totalCAKEBull, totalCAKEBear = ref.totalCAKEBear, totalBetsClaimed = ref.totalBetsClaimed, totalCAKEClaimed = ref.totalCAKEClaimed, winRate = ref.winRate, averageCAKE = ref.averageCAKE, netCAKE = ref.netCAKE;\n    return {\n        id: id,\n        createdAt: utils_numberOrNull(createdAt),\n        updatedAt: utils_numberOrNull(updatedAt),\n        block: utils_numberOrNull(block),\n        totalBets: utils_numberOrNull(totalBets),\n        totalBetsBull: utils_numberOrNull(totalBetsBull),\n        totalBetsBear: utils_numberOrNull(totalBetsBear),\n        totalBNB: totalCAKE ? parseFloat(totalCAKE) : 0,\n        totalBNBBull: totalCAKEBull ? parseFloat(totalCAKEBull) : 0,\n        totalBNBBear: totalCAKEBear ? parseFloat(totalCAKEBear) : 0,\n        totalBetsClaimed: utils_numberOrNull(totalBetsClaimed),\n        totalBNBClaimed: totalCAKEClaimed ? parseFloat(totalCAKEClaimed) : 0,\n        winRate: winRate ? parseFloat(winRate) : 0,\n        averageBNB: averageCAKE ? parseFloat(averageCAKE) : 0,\n        netBNB: netCAKE ? parseFloat(netCAKE) : 0\n    };\n};\nvar transformRoundResponseCAKE = function(roundResponse) {\n    var id = roundResponse.id, epoch = roundResponse.epoch, failed = roundResponse.failed, position = roundResponse.position, startAt = roundResponse.startAt, startBlock = roundResponse.startBlock, startHash = roundResponse.startHash, lockAt = roundResponse.lockAt, lockBlock = roundResponse.lockBlock, lockHash = roundResponse.lockHash, lockPrice = roundResponse.lockPrice, lockRoundId = roundResponse.lockRoundId, closeAt = roundResponse.closeAt, closeBlock = roundResponse.closeBlock, closeHash = roundResponse.closeHash, closePrice = roundResponse.closePrice, closeRoundId = roundResponse.closeRoundId, totalBets = roundResponse.totalBets, totalAmount = roundResponse.totalAmount, bullBets = roundResponse.bullBets, bullAmount = roundResponse.bullAmount, bearBets = roundResponse.bearBets, bearAmount = roundResponse.bearAmount, _bets = roundResponse.bets, bets = _bets === void 0 ? [] : _bets;\n    return {\n        id: id,\n        failed: failed,\n        startHash: startHash,\n        lockHash: lockHash,\n        lockRoundId: lockRoundId,\n        closeRoundId: closeRoundId,\n        closeHash: closeHash,\n        position: getRoundPosition(position),\n        epoch: utils_numberOrNull(epoch),\n        startAt: utils_numberOrNull(startAt),\n        startBlock: utils_numberOrNull(startBlock),\n        lockAt: utils_numberOrNull(lockAt),\n        lockBlock: utils_numberOrNull(lockBlock),\n        lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n        closeAt: utils_numberOrNull(closeAt),\n        closeBlock: utils_numberOrNull(closeBlock),\n        closePrice: closePrice ? parseFloat(closePrice) : 0,\n        totalBets: utils_numberOrNull(totalBets),\n        totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n        bullBets: utils_numberOrNull(bullBets),\n        bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n        bearBets: utils_numberOrNull(bearBets),\n        bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n        bets: bets.map(transformBetResponseCAKE)\n    };\n};\n\n;// CONCATENATED MODULE: ./src/state/predictions/bnbTransformers.ts\n\n\nvar bnbTransformers_getRoundPosition = function(positionResponse) {\n    if (positionResponse === \"Bull\") {\n        return types/* BetPosition.BULL */.Tu.BULL;\n    }\n    if (positionResponse === \"Bear\") {\n        return types/* BetPosition.BEAR */.Tu.BEAR;\n    }\n    if (positionResponse === \"House\") {\n        return types/* BetPosition.HOUSE */.Tu.HOUSE;\n    }\n    return null;\n};\nvar transformBetResponseBNB = function(betResponse) {\n    var bet = {\n        id: betResponse.id,\n        hash: betResponse.hash,\n        block: utils_numberOrNull(betResponse.block),\n        amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n        position: betResponse.position === \"Bull\" ? types/* BetPosition.BULL */.Tu.BULL : types/* BetPosition.BEAR */.Tu.BEAR,\n        claimed: betResponse.claimed,\n        claimedAt: utils_numberOrNull(betResponse.claimedAt),\n        claimedBlock: utils_numberOrNull(betResponse.claimedBlock),\n        claimedHash: betResponse.claimedHash,\n        claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n        claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n        createdAt: utils_numberOrNull(betResponse.createdAt),\n        updatedAt: utils_numberOrNull(betResponse.updatedAt)\n    };\n    if (betResponse.user) {\n        bet.user = transformUserResponseBNB(betResponse.user);\n    }\n    if (betResponse.round) {\n        bet.round = transformRoundResponseBNB(betResponse.round);\n    }\n    return bet;\n};\nvar transformUserResponseBNB = function(userResponse) {\n    var ref = userResponse || {}, id = ref.id, createdAt = ref.createdAt, updatedAt = ref.updatedAt, block = ref.block, totalBets = ref.totalBets, totalBetsBull = ref.totalBetsBull, totalBetsBear = ref.totalBetsBear, totalBNB = ref.totalBNB, totalBNBBull = ref.totalBNBBull, totalBNBBear = ref.totalBNBBear, totalBetsClaimed = ref.totalBetsClaimed, totalBNBClaimed = ref.totalBNBClaimed, winRate = ref.winRate, averageBNB = ref.averageBNB, netBNB = ref.netBNB;\n    return {\n        id: id,\n        createdAt: utils_numberOrNull(createdAt),\n        updatedAt: utils_numberOrNull(updatedAt),\n        block: utils_numberOrNull(block),\n        totalBets: utils_numberOrNull(totalBets),\n        totalBetsBull: utils_numberOrNull(totalBetsBull),\n        totalBetsBear: utils_numberOrNull(totalBetsBear),\n        totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n        totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n        totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n        totalBetsClaimed: utils_numberOrNull(totalBetsClaimed),\n        totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n        winRate: winRate ? parseFloat(winRate) : 0,\n        averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n        netBNB: netBNB ? parseFloat(netBNB) : 0\n    };\n};\nvar transformRoundResponseBNB = function(roundResponse) {\n    var id = roundResponse.id, epoch = roundResponse.epoch, failed = roundResponse.failed, position = roundResponse.position, startAt = roundResponse.startAt, startBlock = roundResponse.startBlock, startHash = roundResponse.startHash, lockAt = roundResponse.lockAt, lockBlock = roundResponse.lockBlock, lockHash = roundResponse.lockHash, lockPrice = roundResponse.lockPrice, lockRoundId = roundResponse.lockRoundId, closeAt = roundResponse.closeAt, closeBlock = roundResponse.closeBlock, closeHash = roundResponse.closeHash, closePrice = roundResponse.closePrice, closeRoundId = roundResponse.closeRoundId, totalBets = roundResponse.totalBets, totalAmount = roundResponse.totalAmount, bullBets = roundResponse.bullBets, bullAmount = roundResponse.bullAmount, bearBets = roundResponse.bearBets, bearAmount = roundResponse.bearAmount, _bets = roundResponse.bets, bets = _bets === void 0 ? [] : _bets;\n    return {\n        id: id,\n        failed: failed,\n        startHash: startHash,\n        lockHash: lockHash,\n        lockRoundId: lockRoundId,\n        closeRoundId: closeRoundId,\n        closeHash: closeHash,\n        position: bnbTransformers_getRoundPosition(position),\n        epoch: utils_numberOrNull(epoch),\n        startAt: utils_numberOrNull(startAt),\n        startBlock: utils_numberOrNull(startBlock),\n        lockAt: utils_numberOrNull(lockAt),\n        lockBlock: utils_numberOrNull(lockBlock),\n        lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n        closeAt: utils_numberOrNull(closeAt),\n        closeBlock: utils_numberOrNull(closeBlock),\n        closePrice: closePrice ? parseFloat(closePrice) : 0,\n        totalBets: utils_numberOrNull(totalBets),\n        totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n        bullBets: utils_numberOrNull(bullBets),\n        bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n        bearBets: utils_numberOrNull(bearBets),\n        bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n        bets: bets.map(transformBetResponseBNB)\n    };\n};\n\n;// CONCATENATED MODULE: ./src/state/predictions/helpers.ts\n\n\n\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n        query getTotalWonData {\\n          market(id: 1) {\\n            totalBNB\\n            totalBNBTreasury\\n          }\\n        }\\n      \"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n        query getTotalWonData {\\n          market(id: 1) {\\n            totalCAKE\\n            totalCAKETreasury\\n          }\\n        }\\n      \"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\\n          \",\n        \"\\n          round {\\n            \",\n        \"\\n          }\\n          user {\\n            \",\n        \"\\n          }\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\\n          \",\n        \"\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject3 = function _templateObject3() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject4() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n      query getUser($id: ID!) {\\n        user(id: $id) {\\n          \",\n        \"\\n        }\\n      }\\n  \"\n    ]);\n    _templateObject4 = function _templateObject4() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nvar Result;\n(function(Result) {\n    Result[\"WIN\"] = \"win\";\n    Result[\"LOSE\"] = \"lose\";\n    Result[\"CANCELED\"] = \"canceled\";\n    Result[\"HOUSE\"] = \"house\";\n    Result[\"LIVE\"] = \"live\";\n})(Result || (Result = {}));\nvar transformBetResponse = function(tokenSymbol) {\n    return tokenSymbol === \"CAKE\" ? transformBetResponseCAKE : transformBetResponseBNB;\n};\nvar transformUserResponse = function(tokenSymbol) {\n    return tokenSymbol === \"CAKE\" ? transformUserResponseCAKE : transformUserResponseBNB;\n};\nvar getRoundResult = function(bet, currentEpoch) {\n    var round = bet.round;\n    if (round.failed) {\n        return Result.CANCELED;\n    }\n    if (round.epoch >= currentEpoch - 1) {\n        return Result.LIVE;\n    }\n    if (bet.round.position === types/* BetPosition.HOUSE */.Tu.HOUSE) {\n        return Result.HOUSE;\n    }\n    var roundResultPosition = round.closePrice > round.lockPrice ? types/* BetPosition.BULL */.Tu.BULL : types/* BetPosition.BEAR */.Tu.BEAR;\n    return bet.position === roundResultPosition ? Result.WIN : Result.LOSE;\n};\nvar getFilteredBets = function(bets, filter) {\n    switch(filter){\n        case types/* HistoryFilter.COLLECTED */.dZ.COLLECTED:\n            return bets.filter(function(bet) {\n                return bet.claimed === true;\n            });\n        case types/* HistoryFilter.UNCOLLECTED */.dZ.UNCOLLECTED:\n            return bets.filter(function(bet) {\n                return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true);\n            });\n        case types/* HistoryFilter.ALL */.dZ.ALL:\n        default:\n            return bets;\n    }\n};\nvar getTotalWonMarket = function(market, tokenSymbol) {\n    var total = market[\"total\".concat(tokenSymbol)] ? parseFloat(market[\"total\".concat(tokenSymbol)]) : 0;\n    var totalTreasury = market[\"total\".concat(tokenSymbol, \"Treasury\")] ? parseFloat(market[\"total\".concat(tokenSymbol, \"Treasury\")]) : 0;\n    return Math.max(total - totalTreasury, 0);\n};\nvar getTotalWon = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function() {\n        var ref, ref1, BNBMarket, CAKEMarket, totalWonBNB, totalWonCAKE;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    return [\n                        4,\n                        Promise.all([\n                            (0,dist.request)(endpoints/* GRAPH_API_PREDICTION_BNB */.GZ, (0,dist.gql)(_templateObject())),\n                            (0,dist.request)(endpoints/* GRAPH_API_PREDICTION_CAKE */.fO, (0,dist.gql)(_templateObject1()))\n                        ])\n                    ];\n                case 1:\n                    ref = _sliced_to_array/* default.apply */.Z.apply(void 0, [\n                        _state.sent(),\n                        1\n                    ]), ref1 = ref[0], BNBMarket = ref1.market, CAKEMarket = ref1.market;\n                    totalWonBNB = getTotalWonMarket(BNBMarket, \"BNB\");\n                    totalWonCAKE = getTotalWonMarket(CAKEMarket, \"CAKE\");\n                    return [\n                        2,\n                        {\n                            totalWonBNB: totalWonBNB,\n                            totalWonCAKE: totalWonCAKE\n                        }\n                    ];\n            }\n        });\n    });\n    return function getTotalWon() {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getBetHistory = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function() {\n        var where, first, skip, api, tokenSymbol, response;\n        var _arguments = arguments;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    where = _arguments.length > 0 && _arguments[0] !== void 0 ? _arguments[0] : {}, first = _arguments.length > 1 && _arguments[1] !== void 0 ? _arguments[1] : 1000, skip = _arguments.length > 2 && _arguments[2] !== void 0 ? _arguments[2] : 0, api = _arguments.length > 3 ? _arguments[3] : void 0, tokenSymbol = _arguments.length > 4 ? _arguments[4] : void 0;\n                    return [\n                        4,\n                        (0,dist.request)(api, (0,dist.gql)(_templateObject2(), getBetBaseFields(tokenSymbol), getRoundBaseFields(tokenSymbol), getUserBaseFields(tokenSymbol)), {\n                            first: first,\n                            skip: skip,\n                            where: where\n                        })\n                    ];\n                case 1:\n                    response = _state.sent();\n                    return [\n                        2,\n                        response.bets\n                    ];\n            }\n        });\n    });\n    return function getBetHistory() {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getLedgerData = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(account, epochs, address) {\n        var ledgerCalls, response;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    ledgerCalls = epochs.map(function(epoch) {\n                        return {\n                            address: address,\n                            name: \"ledger\",\n                            params: [\n                                epoch,\n                                account\n                            ]\n                        };\n                    });\n                    return [\n                        4,\n                        (0,multicall/* multicallv2 */.v)({\n                            abi: predictions,\n                            calls: ledgerCalls\n                        })\n                    ];\n                case 1:\n                    response = _state.sent();\n                    return [\n                        2,\n                        response\n                    ];\n            }\n        });\n    });\n    return function getLedgerData(account, epochs, address) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar LEADERBOARD_RESULTS_PER_PAGE = 20;\nvar defaultPredictionUserOptions = {\n    skip: 0,\n    first: LEADERBOARD_RESULTS_PER_PAGE,\n    orderBy: \"createdAt\",\n    orderDir: \"desc\"\n};\nvar getHasRoundFailed = function(oracleCalled, closeTimestamp, buffer) {\n    if (!oracleCalled) {\n        var closeTimestampMs = (closeTimestamp + buffer) * 1000;\n        if (Number.isFinite(closeTimestampMs)) {\n            return Date.now() > closeTimestampMs;\n        }\n    }\n    return false;\n};\nvar getPredictionUsers = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function() {\n        var options, api, tokenSymbol, ref, first, skip, where, orderBy, orderDir, response;\n        var _arguments = arguments;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    options = _arguments.length > 0 && _arguments[0] !== void 0 ? _arguments[0] : {}, api = _arguments.length > 1 ? _arguments[1] : void 0, tokenSymbol = _arguments.length > 2 ? _arguments[2] : void 0;\n                    ref = (0,_object_spread/* default */.Z)({}, defaultPredictionUserOptions, options), first = ref.first, skip = ref.skip, where = ref.where, orderBy = ref.orderBy, orderDir = ref.orderDir;\n                    return [\n                        4,\n                        (0,dist.request)(api, (0,dist.gql)(_templateObject3(), getUserBaseFields(tokenSymbol)), {\n                            first: first,\n                            skip: skip,\n                            where: where,\n                            orderBy: orderBy,\n                            orderDir: orderDir\n                        })\n                    ];\n                case 1:\n                    response = _state.sent();\n                    return [\n                        2,\n                        response.users\n                    ];\n            }\n        });\n    });\n    return function getPredictionUsers() {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getPredictionUser = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(account, api, tokenSymbol) {\n        var response;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    return [\n                        4,\n                        (0,dist.request)(api, (0,dist.gql)(_templateObject4(), getUserBaseFields(tokenSymbol)), {\n                            id: account.toLowerCase()\n                        })\n                    ];\n                case 1:\n                    response = _state.sent();\n                    return [\n                        2,\n                        response.user\n                    ];\n            }\n        });\n    });\n    return function getPredictionUser(account, api, tokenSymbol) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getClaimStatuses = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(account, epochs, address) {\n        var claimableCalls, claimableResponses;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    claimableCalls = epochs.map(function(epoch) {\n                        return {\n                            address: address,\n                            name: \"claimable\",\n                            params: [\n                                epoch,\n                                account\n                            ]\n                        };\n                    });\n                    return [\n                        4,\n                        (0,multicall/* multicallv2 */.v)({\n                            abi: predictions,\n                            calls: claimableCalls\n                        })\n                    ];\n                case 1:\n                    claimableResponses = _state.sent();\n                    return [\n                        2,\n                        claimableResponses.reduce(function(accum, claimableResponse, index) {\n                            var epoch = epochs[index];\n                            var _claimableResponse = (0,_sliced_to_array/* default */.Z)(claimableResponse, 1), claimable = _claimableResponse[0];\n                            return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accum), (0,_define_property/* default */.Z)({}, epoch, claimable));\n                        }, {})\n                    ];\n            }\n        });\n    });\n    return function getClaimStatuses(account, epochs, address) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getPredictionData = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(address) {\n        var staticCalls, ref, ref1, currentEpoch, ref2, intervalSeconds, ref3, minBetAmount, ref4, paused;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    staticCalls = [\n                        \"currentEpoch\",\n                        \"intervalSeconds\",\n                        \"minBetAmount\",\n                        \"paused\"\n                    ].map(function(method) {\n                        return {\n                            address: address,\n                            name: method\n                        };\n                    });\n                    return [\n                        4,\n                        (0,multicall/* multicallv2 */.v)({\n                            abi: predictions,\n                            calls: staticCalls\n                        })\n                    ];\n                case 1:\n                    ref = _sliced_to_array/* default.apply */.Z.apply(void 0, [\n                        _state.sent(),\n                        4\n                    ]), ref1 = (0,_sliced_to_array/* default */.Z)(ref[0], 1), currentEpoch = ref1[0], ref2 = (0,_sliced_to_array/* default */.Z)(ref[1], 1), intervalSeconds = ref2[0], ref3 = (0,_sliced_to_array/* default */.Z)(ref[2], 1), minBetAmount = ref3[0], ref4 = (0,_sliced_to_array/* default */.Z)(ref[3], 1), paused = ref4[0];\n                    return [\n                        2,\n                        {\n                            status: paused ? types/* PredictionStatus.PAUSED */.Gw.PAUSED : types/* PredictionStatus.LIVE */.Gw.LIVE,\n                            currentEpoch: currentEpoch.toNumber(),\n                            intervalSeconds: intervalSeconds.toNumber(),\n                            minBetAmount: minBetAmount.toString()\n                        }\n                    ];\n            }\n        });\n    });\n    return function getPredictionData(address) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getRoundsData = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(epochs, address) {\n        var calls, response;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    calls = epochs.map(function(epoch) {\n                        return {\n                            address: address,\n                            name: \"rounds\",\n                            params: [\n                                epoch\n                            ]\n                        };\n                    });\n                    return [\n                        4,\n                        (0,multicall/* multicallv2 */.v)({\n                            abi: predictions,\n                            calls: calls\n                        })\n                    ];\n                case 1:\n                    response = _state.sent();\n                    return [\n                        2,\n                        response\n                    ];\n            }\n        });\n    });\n    return function getRoundsData(epochs, address) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar makeFutureRoundResponse = function(epoch, startTimestamp) {\n    return {\n        epoch: epoch,\n        startTimestamp: startTimestamp,\n        lockTimestamp: null,\n        closeTimestamp: null,\n        lockPrice: null,\n        closePrice: null,\n        totalAmount: bignumbers/* Zero.toJSON */._Y.toJSON(),\n        bullAmount: bignumbers/* Zero.toJSON */._Y.toJSON(),\n        bearAmount: bignumbers/* Zero.toJSON */._Y.toJSON(),\n        rewardBaseCalAmount: bignumbers/* Zero.toJSON */._Y.toJSON(),\n        rewardAmount: bignumbers/* Zero.toJSON */._Y.toJSON(),\n        oracleCalled: false,\n        lockOracleId: null,\n        closeOracleId: null\n    };\n};\nvar makeRoundData = function(rounds) {\n    return rounds.reduce(function(accum, round) {\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accum), (0,_define_property/* default */.Z)({}, round.epoch.toString(), round));\n    }, {});\n};\nvar serializePredictionsLedgerResponse = function(ledgerResponse) {\n    return {\n        position: ledgerResponse.position === 0 ? types/* BetPosition.BULL */.Tu.BULL : types/* BetPosition.BEAR */.Tu.BEAR,\n        amount: ledgerResponse.amount.toJSON(),\n        claimed: ledgerResponse.claimed\n    };\n};\nvar makeLedgerData = function(account, ledgers, epochs) {\n    return ledgers.reduce(function(accum, ledgerResponse, index) {\n        if (!ledgerResponse) {\n            return accum;\n        }\n        // If the amount is zero that means the user did not bet\n        if (ledgerResponse.amount.eq(0)) {\n            return accum;\n        }\n        var epoch = epochs[index].toString();\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accum), (0,_define_property/* default */.Z)({}, account, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accum[account]), (0,_define_property/* default */.Z)({}, epoch, serializePredictionsLedgerResponse(ledgerResponse)))));\n    }, {});\n};\n/**\n * Serializes the return from the \"rounds\" call for redux\n */ var serializePredictionsRoundsResponse = function(response) {\n    var epoch = response.epoch, startTimestamp = response.startTimestamp, lockTimestamp = response.lockTimestamp, closeTimestamp = response.closeTimestamp, lockPrice = response.lockPrice, closePrice = response.closePrice, totalAmount = response.totalAmount, bullAmount = response.bullAmount, bearAmount = response.bearAmount, rewardBaseCalAmount = response.rewardBaseCalAmount, rewardAmount = response.rewardAmount, oracleCalled = response.oracleCalled, lockOracleId = response.lockOracleId, closeOracleId = response.closeOracleId;\n    return {\n        oracleCalled: oracleCalled,\n        epoch: epoch.toNumber(),\n        startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n        lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n        closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n        lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n        closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n        totalAmount: totalAmount.toJSON(),\n        bullAmount: bullAmount.toJSON(),\n        bearAmount: bearAmount.toJSON(),\n        rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n        rewardAmount: rewardAmount.toJSON(),\n        lockOracleId: lockOracleId.toString(),\n        closeOracleId: closeOracleId.toString()\n    };\n};\n/**\n * Parse serialized values back into BigNumber\n * BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */ var parseBigNumberObj = function(data) {\n    return Object.keys(data).reduce(function(accum, key) {\n        var value = data[key];\n        if (value && (value === null || value === void 0 ? void 0 : value.type) === \"BigNumber\") {\n            return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accum), (0,_define_property/* default */.Z)({}, key, bignumber/* BigNumber.from */.O$.from(value)));\n        }\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accum), (0,_define_property/* default */.Z)({}, key, value));\n    }, {});\n};\nvar fetchUsersRoundsLength = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(account, address) {\n        var contract, length, e;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    _state.trys.push([\n                        0,\n                        2,\n                        ,\n                        3\n                    ]);\n                    contract = (0,contractHelpers/* getPredictionsContract */.qi)(address);\n                    return [\n                        4,\n                        contract.getUserRoundsLength(account)\n                    ];\n                case 1:\n                    length = _state.sent();\n                    return [\n                        2,\n                        length\n                    ];\n                case 2:\n                    e = _state.sent();\n                    return [\n                        2,\n                        bignumbers/* Zero */._Y\n                    ];\n                case 3:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return function fetchUsersRoundsLength(account, address) {\n        return _ref.apply(this, arguments);\n    };\n}();\n/**\n * Fetches rounds a user has participated in\n */ var fetchUserRounds = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(function(account) {\n        var cursor, size, address, contract, ref, rounds, ledgers, e;\n        var _arguments = arguments;\n        return (0,tslib_es6.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    cursor = _arguments.length > 1 && _arguments[1] !== void 0 ? _arguments[1] : 0, size = _arguments.length > 2 && _arguments[2] !== void 0 ? _arguments[2] : config/* ROUNDS_PER_PAGE */.yg, address = _arguments.length > 3 ? _arguments[3] : void 0;\n                    contract = (0,contractHelpers/* getPredictionsContract */.qi)(address);\n                    _state.label = 1;\n                case 1:\n                    _state.trys.push([\n                        1,\n                        3,\n                        ,\n                        4\n                    ]);\n                    return [\n                        4,\n                        contract.getUserRounds(account, cursor, size)\n                    ];\n                case 2:\n                    ref = _sliced_to_array/* default.apply */.Z.apply(void 0, [\n                        _state.sent(),\n                        2\n                    ]), rounds = ref[0], ledgers = ref[1];\n                    return [\n                        2,\n                        rounds.reduce(function(accum, round, index) {\n                            return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accum), (0,_define_property/* default */.Z)({}, round.toString(), serializePredictionsLedgerResponse(ledgers[index])));\n                        }, {})\n                    ];\n                case 3:\n                    e = _state.sent();\n                    // When the results run out the contract throws an error.\n                    return [\n                        2,\n                        null\n                    ];\n                case 4:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return function fetchUserRounds(account) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n\n/***/ }),\n\n/***/ 97913:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"WR\": function() { return /* binding */ useChartView; },\n  \"Dh\": function() { return /* binding */ useCollectWinningModalProps; },\n  \"n3\": function() { return /* binding */ useGetBetByEpoch; },\n  \"XM\": function() { return /* binding */ useGetBufferSeconds; },\n  \"dJ\": function() { return /* binding */ useGetCurrentEpoch; },\n  \"Gc\": function() { return /* binding */ useGetCurrentHistoryPage; },\n  \"ds\": function() { return /* binding */ useGetCurrentRoundCloseTimestamp; },\n  \"sz\": function() { return /* binding */ useGetHasHistoryLoaded; },\n  \"pw\": function() { return /* binding */ useGetHistory; },\n  \"J7\": function() { return /* binding */ useGetHistoryFilter; },\n  \"m3\": function() { return /* binding */ useGetIntervalSeconds; },\n  \"Wx\": function() { return /* binding */ useGetIsClaimable; },\n  \"dW\": function() { return /* binding */ useGetIsFetchingHistory; },\n  \"YY\": function() { return /* binding */ useGetLeaderboardFilters; },\n  \"Gy\": function() { return /* binding */ useGetLeaderboardHasMoreResults; },\n  \"AC\": function() { return /* binding */ useGetLeaderboardLoadingState; },\n  \"HF\": function() { return /* binding */ useGetLeaderboardResults; },\n  \"Ok\": function() { return /* binding */ useGetLeaderboardSkip; },\n  \"eI\": function() { return /* binding */ useGetMinBetAmount; },\n  \"nB\": function() { return /* binding */ useGetOrFetchLeaderboardAddressResult; },\n  \"hU\": function() { return /* binding */ useGetPredictionsStatus; },\n  \"Z_\": function() { return /* binding */ useGetRoundsByCloseOracleId; },\n  \"dm\": function() { return /* binding */ useGetSortedRounds; },\n  \"Aq\": function() { return /* binding */ useGetSortedRoundsCurrentEpoch; },\n  \"YF\": function() { return /* binding */ useIsChartPaneOpen; },\n  \"e\": function() { return /* binding */ useIsHistoryPaneOpen; },\n  \"b1\": function() { return /* binding */ useStatModalProps; }\n});\n\n// UNUSED EXPORTS: useGetAddressResult, useGetSelectedAddress\n\n// EXTERNAL MODULE: ../../node_modules/react/index.js\nvar react = __webpack_require__(2784);\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(5305);\n// EXTERNAL MODULE: ./src/contexts/LocalRedux/useLocalDispatch.ts\nvar useLocalDispatch = __webpack_require__(27094);\n// EXTERNAL MODULE: ../../node_modules/react-redux/es/index.js + 13 modules\nvar es = __webpack_require__(43997);\n// EXTERNAL MODULE: ./src/contexts/LocalRedux/Provider.tsx\nvar Provider = __webpack_require__(99022);\n;// CONCATENATED MODULE: ./src/contexts/LocalRedux/useSelector.ts\n\n\nvar useSelector = (0,es/* createSelectorHook */.gR)(Provider/* LocalContext */.A);\n/* harmony default export */ var LocalRedux_useSelector = (useSelector);\n\n// EXTERNAL MODULE: ./src/state/predictions/index.ts\nvar predictions = __webpack_require__(85251);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_define_property.mjs\nvar _define_property = __webpack_require__(47842);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(70865);\n// EXTERNAL MODULE: ../../node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(96670);\n// EXTERNAL MODULE: ../../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\nvar bignumber = __webpack_require__(10528);\n// EXTERNAL MODULE: ../../node_modules/lodash/orderBy.js\nvar orderBy = __webpack_require__(34498);\nvar orderBy_default = /*#__PURE__*/__webpack_require__.n(orderBy);\n// EXTERNAL MODULE: ../../node_modules/reselect/es/index.js + 1 modules\nvar reselect_es = __webpack_require__(5994);\n// EXTERNAL MODULE: ./src/state/predictions/helpers.ts + 6 modules\nvar helpers = __webpack_require__(51014);\n;// CONCATENATED MODULE: ./src/state/predictions/selectors.ts\n\n\n\n\n\n\n\nvar selectCurrentEpoch = function(state) {\n    return state.currentEpoch;\n};\nvar selectRounds = function(state) {\n    return state.rounds;\n};\nvar selectLedgers = function(state) {\n    return state.ledgers;\n};\nvar selectClaimableStatuses = function(state) {\n    return state.claimableStatuses;\n};\nvar selectMinBetAmount = function(state) {\n    return state.minBetAmount;\n};\nvar selectIntervalSeconds = function(state) {\n    return state.intervalSeconds;\n};\nvar makeGetBetByEpochSelector = function(account, epoch) {\n    return (0,reselect_es/* createSelector */.P1)([\n        selectLedgers\n    ], function(bets) {\n        if (!bets[account]) {\n            return null;\n        }\n        if (!bets[account][epoch]) {\n            return null;\n        }\n        return (0,helpers/* parseBigNumberObj */.zN)(bets[account][epoch]);\n    });\n};\nvar makeGetIsClaimableSelector = function(epoch) {\n    return (0,reselect_es/* createSelector */.P1)([\n        selectClaimableStatuses\n    ], function(claimableStatuses) {\n        return claimableStatuses[epoch] || false;\n    });\n};\nvar getRoundsByCloseOracleIdSelector = (0,reselect_es/* createSelector */.P1)([\n    selectRounds\n], function(rounds) {\n    return Object.keys(rounds).reduce(function(accum, epoch) {\n        var parsed = (0,helpers/* parseBigNumberObj */.zN)(rounds[epoch]);\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accum), (0,_define_property/* default */.Z)({}, parsed.closeOracleId, parsed));\n    }, {});\n});\nvar getBigNumberRounds = (0,reselect_es/* createSelector */.P1)([\n    selectRounds\n], function(rounds) {\n    return Object.keys(rounds).reduce(function(accum, epoch) {\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accum), (0,_define_property/* default */.Z)({}, epoch, (0,helpers/* parseBigNumberObj */.zN)(rounds[epoch])));\n    }, {});\n});\nvar getSortedRoundsSelector = (0,reselect_es/* createSelector */.P1)([\n    getBigNumberRounds\n], function(rounds) {\n    return orderBy_default()(Object.values(rounds), [\n        \"epoch\"\n    ], [\n        \"asc\"\n    ]);\n});\nvar getSortedRoundsCurrentEpochSelector = (0,reselect_es/* createSelector */.P1)([\n    selectCurrentEpoch,\n    getSortedRoundsSelector\n], function(currentEpoch, sortedRounds) {\n    return {\n        currentEpoch: currentEpoch,\n        rounds: sortedRounds\n    };\n});\nvar getMinBetAmountSelector = (0,reselect_es/* createSelector */.P1)([\n    selectMinBetAmount\n], bignumber/* BigNumber.from */.O$.from);\nvar getCurrentRoundCloseTimestampSelector = (0,reselect_es/* createSelector */.P1)([\n    selectCurrentEpoch,\n    getBigNumberRounds,\n    selectIntervalSeconds\n], function(currentEpoch, rounds, intervalSeconds) {\n    if (!currentEpoch) {\n        return undefined;\n    }\n    var currentRound = rounds[currentEpoch - 1];\n    if (!currentRound) {\n        return undefined;\n    }\n    if (!currentRound.closeTimestamp) {\n        return currentRound.lockTimestamp + intervalSeconds;\n    }\n    return currentRound.closeTimestamp;\n});\n\n;// CONCATENATED MODULE: ./src/state/predictions/hooks.ts\n\n\n\n\n\n\nvar useGetRoundsByCloseOracleId = function() {\n    return LocalRedux_useSelector(getRoundsByCloseOracleIdSelector);\n};\nvar useGetSortedRounds = function() {\n    return LocalRedux_useSelector(getSortedRoundsSelector);\n};\nvar useGetSortedRoundsCurrentEpoch = function() {\n    return LocalRedux_useSelector(getSortedRoundsCurrentEpochSelector);\n};\nvar useGetBetByEpoch = function(account, epoch) {\n    var getBetByEpochSelector = (0,react.useMemo)(function() {\n        return makeGetBetByEpochSelector(account, epoch);\n    }, [\n        account,\n        epoch\n    ]);\n    return LocalRedux_useSelector(getBetByEpochSelector);\n};\nvar useGetIsClaimable = function(epoch) {\n    var getIsClaimableSelector = (0,react.useMemo)(function() {\n        return makeGetIsClaimableSelector(epoch);\n    }, [\n        epoch\n    ]);\n    return LocalRedux_useSelector(getIsClaimableSelector);\n};\nvar useIsHistoryPaneOpen = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.isHistoryPaneOpen;\n    });\n};\nvar useIsChartPaneOpen = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.isChartPaneOpen;\n    });\n};\nvar useChartView = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.chartView;\n    });\n};\nvar useGetCurrentEpoch = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.currentEpoch;\n    });\n};\nvar useGetIntervalSeconds = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.intervalSeconds;\n    });\n};\nvar useGetPredictionsStatus = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.status;\n    });\n};\nvar useGetHistoryFilter = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.historyFilter;\n    });\n};\nvar useGetHasHistoryLoaded = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.hasHistoryLoaded;\n    });\n};\nvar useGetCurrentHistoryPage = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.currentHistoryPage;\n    });\n};\nvar useGetMinBetAmount = function() {\n    return LocalRedux_useSelector(getMinBetAmountSelector);\n};\nvar useGetBufferSeconds = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.bufferSeconds;\n    });\n};\nvar useGetIsFetchingHistory = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.isFetchingHistory;\n    });\n};\nvar useGetHistory = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.history;\n    });\n};\n/**\n * The current round's lock timestamp will not be set immediately so we return an estimate until then\n */ var useGetCurrentRoundCloseTimestamp = function() {\n    return LocalRedux_useSelector(getCurrentRoundCloseTimestampSelector);\n};\n// Leaderboard\nvar useGetLeaderboardLoadingState = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.leaderboard.loadingState;\n    });\n};\nvar useGetLeaderboardResults = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.leaderboard.results;\n    });\n};\nvar useGetLeaderboardFilters = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.leaderboard.filters;\n    });\n};\nvar useGetLeaderboardSkip = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.leaderboard.skip;\n    });\n};\nvar useGetLeaderboardHasMoreResults = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.leaderboard.hasMoreResults;\n    });\n};\nvar useGetAddressResult = function(account) {\n    return LocalRedux_useSelector(function(state) {\n        return state.leaderboard.addressResults[account];\n    });\n};\nvar useGetOrFetchLeaderboardAddressResult = function(account) {\n    var addressResult = useGetAddressResult(account);\n    var dispatch = (0,useLocalDispatch/* default */.Z)();\n    (0,react.useEffect)(function() {\n        var address = (0,utils/* isAddress */.UJ)(account);\n        // If address result is null it means we already tried fetching the results and none came back\n        if (!addressResult && addressResult !== null && address) {\n            dispatch((0,predictions/* fetchAddressResult */.nI)(account));\n        }\n    }, [\n        dispatch,\n        account,\n        addressResult\n    ]);\n    return addressResult;\n};\nvar useGetSelectedAddress = function() {\n    return LocalRedux_useSelector(function(state) {\n        return state.leaderboard.selectedAddress;\n    });\n};\n// Because Modal Component is rendered outside the Prediction Page contexts\n// We have to pass local state as props instead of retrieving directly in component\nvar useStatModalProps = function(account) {\n    var selectedAddress = useGetSelectedAddress();\n    var address = account || selectedAddress;\n    var result = useGetOrFetchLeaderboardAddressResult(address);\n    var leaderboardLoadingState = useGetLeaderboardLoadingState();\n    return {\n        address: address,\n        result: result,\n        leaderboardLoadingState: leaderboardLoadingState\n    };\n};\nvar useCollectWinningModalProps = function() {\n    var isLoadingHistory = useGetIsFetchingHistory();\n    var history = useGetHistory();\n    return {\n        isLoadingHistory: isLoadingHistory,\n        history: history\n    };\n};\n\n\n/***/ }),\n\n/***/ 85251:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"E3\": function() { return /* binding */ initialState; },\n/* harmony export */   \"G$\": function() { return /* binding */ setLeaderboardFilter; },\n/* harmony export */   \"Mk\": function() { return /* binding */ filterNextPageLeaderboard; },\n/* harmony export */   \"S9\": function() { return /* binding */ fetchPredictionData; },\n/* harmony export */   \"Ub\": function() { return /* binding */ fetchLedgerData; },\n/* harmony export */   \"WB\": function() { return /* binding */ markAsCollected; },\n/* harmony export */   \"Yq\": function() { return /* binding */ setHistoryFilter; },\n/* harmony export */   \"bq\": function() { return /* binding */ setChartView; },\n/* harmony export */   \"dG\": function() { return /* binding */ filterLeaderboard; },\n/* harmony export */   \"l3\": function() { return /* binding */ setSelectedAddress; },\n/* harmony export */   \"nI\": function() { return /* binding */ fetchAddressResult; },\n/* harmony export */   \"nQ\": function() { return /* binding */ setChartPaneState; },\n/* harmony export */   \"uP\": function() { return /* binding */ fetchNodeHistory; },\n/* harmony export */   \"uw\": function() { return /* binding */ initializePredictions; },\n/* harmony export */   \"vR\": function() { return /* binding */ setHistoryPaneState; }\n/* harmony export */ });\n/* unused harmony export predictionsSlice */\n/* harmony import */ var _swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(98788);\n/* harmony import */ var _swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(47842);\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(70865);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(96670);\n/* harmony import */ var _swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(87394);\n/* harmony import */ var _swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(50930);\n/* harmony import */ var _swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(5163);\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(34253);\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(10528);\n/* harmony import */ var _ethersproject_units__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(59656);\n/* harmony import */ var lodash_maxBy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(55324);\n/* harmony import */ var lodash_maxBy__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_maxBy__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98537);\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2689);\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_range__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_pickBy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(42208);\n/* harmony import */ var lodash_pickBy__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_pickBy__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var state_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(93638);\n/* harmony import */ var config_constants_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6429);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87799);\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(51014);\n/* harmony import */ var _global_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(21124);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar initialState = {\n    status: state_types__WEBPACK_IMPORTED_MODULE_4__/* .PredictionStatus.INITIAL */ .Gw.INITIAL,\n    chartView: state_types__WEBPACK_IMPORTED_MODULE_4__/* .PredictionsChartView.Chainlink */ .RU.Chainlink,\n    isLoading: false,\n    isHistoryPaneOpen: false,\n    isChartPaneOpen: false,\n    isFetchingHistory: false,\n    historyFilter: state_types__WEBPACK_IMPORTED_MODULE_4__/* .HistoryFilter.ALL */ .dZ.ALL,\n    currentEpoch: 0,\n    intervalSeconds: 300,\n    minBetAmount: \"10000000000000\",\n    bufferSeconds: 60,\n    rounds: {},\n    history: [],\n    totalHistory: 0,\n    currentHistoryPage: 1,\n    hasHistoryLoaded: false,\n    ledgers: {},\n    claimableStatuses: {},\n    leaderboard: {\n        selectedAddress: null,\n        loadingState: config_constants_types__WEBPACK_IMPORTED_MODULE_5__/* .FetchStatus.Idle */ .iF.Idle,\n        filters: {\n            address: null,\n            orderBy: \"totalBets\",\n            timePeriod: \"all\"\n        },\n        skip: 0,\n        hasMoreResults: true,\n        addressResults: {},\n        results: []\n    }\n};\nvar initializePredictions = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__/* .createAsyncThunk */ .hg)(\"predictions/initialize\", /*#__PURE__*/ (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z)(function() {\n    var account, extra, marketData, epochs, roundsResponse, initialRoundData, initializedData, ref, ledgerResponses, claimableStatuses;\n    var _arguments = arguments;\n    return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_11__.__generator)(this, function(_state) {\n        switch(_state.label){\n            case 0:\n                account = _arguments.length > 0 && _arguments[0] !== void 0 ? _arguments[0] : null, extra = (_arguments.length > 1 ? _arguments[1] : void 0).extra;\n                return [\n                    4,\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getPredictionData */ .n)(extra.address)\n                ];\n            case 1:\n                marketData = _state.sent();\n                epochs = marketData.currentEpoch > _config__WEBPACK_IMPORTED_MODULE_6__/* .PAST_ROUND_COUNT */ .v9 ? lodash_range__WEBPACK_IMPORTED_MODULE_2___default()(marketData.currentEpoch, marketData.currentEpoch - _config__WEBPACK_IMPORTED_MODULE_6__/* .PAST_ROUND_COUNT */ .v9) : [\n                    marketData.currentEpoch\n                ];\n                return [\n                    4,\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getRoundsData */ .$8)(epochs, extra.address)\n                ];\n            case 2:\n                roundsResponse = _state.sent();\n                initialRoundData = roundsResponse.reduce(function(accum, roundResponse) {\n                    var reduxNodeRound = (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .serializePredictionsRoundsResponse */ .WB)(roundResponse);\n                    return (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, accum), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_14__/* [\"default\"] */ .Z)({}, reduxNodeRound.epoch.toString(), reduxNodeRound));\n                }, {});\n                initializedData = (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, marketData), {\n                    rounds: initialRoundData,\n                    ledgers: {},\n                    claimableStatuses: {}\n                });\n                if (!account) {\n                    return [\n                        2,\n                        initializedData\n                    ];\n                }\n                return [\n                    4,\n                    Promise.all([\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getLedgerData */ .Tq)(account, epochs, extra.address),\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getClaimStatuses */ .jG)(account, epochs, extra.address)\n                    ])\n                ];\n            case 3:\n                ref = _swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_15__/* [\"default\"].apply */ .Z.apply(void 0, [\n                    _state.sent(),\n                    2\n                ]), ledgerResponses = ref[0], claimableStatuses = ref[1];\n                return [\n                    2,\n                    lodash_merge__WEBPACK_IMPORTED_MODULE_1___default()({}, initializedData, {\n                        ledgers: (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .makeLedgerData */ .a8)(account, ledgerResponses, epochs),\n                        claimableStatuses: claimableStatuses\n                    })\n                ];\n        }\n    });\n}));\nvar fetchPredictionData = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__/* .createAsyncThunk */ .hg)(\"predictions/fetchPredictionData\", /*#__PURE__*/ (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z)(function() {\n    var account, extra, ref, status, currentEpoch, intervalSeconds, minBetAmount, liveCurrentAndRecent, roundsResponse, roundData, publicData, epochs, ref1, ledgerResponses, claimableStatuses;\n    var _arguments = arguments;\n    return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_11__.__generator)(this, function(_state) {\n        switch(_state.label){\n            case 0:\n                account = _arguments.length > 0 && _arguments[0] !== void 0 ? _arguments[0] : null, extra = (_arguments.length > 1 ? _arguments[1] : void 0).extra;\n                return [\n                    4,\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getPredictionData */ .n)(extra.address)\n                ];\n            case 1:\n                ref = _state.sent(), status = ref.status, currentEpoch = ref.currentEpoch, intervalSeconds = ref.intervalSeconds, minBetAmount = ref.minBetAmount;\n                liveCurrentAndRecent = [\n                    currentEpoch,\n                    currentEpoch - 1,\n                    currentEpoch - 2\n                ];\n                return [\n                    4,\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getRoundsData */ .$8)(liveCurrentAndRecent, extra.address)\n                ];\n            case 2:\n                roundsResponse = _state.sent();\n                roundData = roundsResponse.reduce(function(accum, round) {\n                    if (!round) {\n                        return accum;\n                    }\n                    var reduxNodeRound = (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .serializePredictionsRoundsResponse */ .WB)(round);\n                    return (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, accum), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_14__/* [\"default\"] */ .Z)({}, reduxNodeRound.epoch.toString(), reduxNodeRound));\n                }, {});\n                publicData = {\n                    status: status,\n                    currentEpoch: currentEpoch,\n                    intervalSeconds: intervalSeconds,\n                    minBetAmount: minBetAmount,\n                    rounds: roundData,\n                    ledgers: {},\n                    claimableStatuses: {}\n                };\n                if (!account) {\n                    return [\n                        2,\n                        publicData\n                    ];\n                }\n                epochs = currentEpoch > _config__WEBPACK_IMPORTED_MODULE_6__/* .PAST_ROUND_COUNT */ .v9 ? lodash_range__WEBPACK_IMPORTED_MODULE_2___default()(currentEpoch, currentEpoch - _config__WEBPACK_IMPORTED_MODULE_6__/* .PAST_ROUND_COUNT */ .v9) : [\n                    currentEpoch\n                ];\n                return [\n                    4,\n                    Promise.all([\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getLedgerData */ .Tq)(account, epochs, extra.address),\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getClaimStatuses */ .jG)(account, epochs, extra.address)\n                    ])\n                ];\n            case 3:\n                ref1 = _swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_15__/* [\"default\"].apply */ .Z.apply(void 0, [\n                    _state.sent(),\n                    2\n                ]), ledgerResponses = ref1[0], claimableStatuses = ref1[1];\n                return [\n                    2,\n                    lodash_merge__WEBPACK_IMPORTED_MODULE_1___default()({}, publicData, {\n                        ledgers: (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .makeLedgerData */ .a8)(account, ledgerResponses, epochs),\n                        claimableStatuses: claimableStatuses\n                    })\n                ];\n        }\n    });\n}));\nvar fetchLedgerData = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__/* .createAsyncThunk */ .hg)(\"predictions/fetchLedgerData\", function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z)(function(param, param1) {\n        var account, epochs, extra, ledgers;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_11__.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    account = param.account, epochs = param.epochs, extra = param1.extra;\n                    return [\n                        4,\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getLedgerData */ .Tq)(account, epochs, extra.address)\n                    ];\n                case 1:\n                    ledgers = _state.sent();\n                    return [\n                        2,\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .makeLedgerData */ .a8)(account, ledgers, epochs)\n                    ];\n            }\n        });\n    });\n    return function(_, _1) {\n        return _ref.apply(this, arguments);\n    };\n}());\nvar fetchNodeHistory = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__/* .createAsyncThunk */ .hg)(\"predictions/fetchNodeHistory\", function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z)(function(param, param1) {\n        var account, _page, page, getState, extra, userRoundsLength, emptyResult, maxPages, cursor, size, userRounds, epochs, ref, roundData, claimableStatuses, bufferSeconds, bets;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_11__.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    account = param.account, _page = param.page, page = _page === void 0 ? 1 : _page, getState = param1.getState, extra = param1.extra;\n                    return [\n                        4,\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .fetchUsersRoundsLength */ .t$)(account, extra.address)\n                    ];\n                case 1:\n                    userRoundsLength = _state.sent();\n                    emptyResult = {\n                        bets: [],\n                        claimableStatuses: {},\n                        totalHistory: userRoundsLength.toNumber()\n                    };\n                    maxPages = userRoundsLength.lte(_config__WEBPACK_IMPORTED_MODULE_6__/* .ROUNDS_PER_PAGE */ .yg) ? 1 : Math.ceil(userRoundsLength.toNumber() / _config__WEBPACK_IMPORTED_MODULE_6__/* .ROUNDS_PER_PAGE */ .yg);\n                    if (userRoundsLength.eq(0)) {\n                        return [\n                            2,\n                            emptyResult\n                        ];\n                    }\n                    if (page > maxPages) {\n                        return [\n                            2,\n                            emptyResult\n                        ];\n                    }\n                    cursor = userRoundsLength.sub(_config__WEBPACK_IMPORTED_MODULE_6__/* .ROUNDS_PER_PAGE */ .yg * page);\n                    size = maxPages === page ? userRoundsLength.sub(_config__WEBPACK_IMPORTED_MODULE_6__/* .ROUNDS_PER_PAGE */ .yg * (page - 1)) // Previous page's cursor\n                    .toNumber() : _config__WEBPACK_IMPORTED_MODULE_6__/* .ROUNDS_PER_PAGE */ .yg;\n                    return [\n                        4,\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .fetchUserRounds */ .oO)(account, cursor.lt(0) ? 0 : cursor.toNumber(), size, extra.address)\n                    ];\n                case 2:\n                    userRounds = _state.sent();\n                    if (!userRounds) {\n                        return [\n                            2,\n                            emptyResult\n                        ];\n                    }\n                    epochs = Object.keys(userRounds).map(function(epochStr) {\n                        return Number(epochStr);\n                    });\n                    return [\n                        4,\n                        Promise.all([\n                            (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getRoundsData */ .$8)(epochs, extra.address),\n                            (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getClaimStatuses */ .jG)(account, epochs, extra.address)\n                        ])\n                    ];\n                case 3:\n                    ref = _swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_15__/* [\"default\"].apply */ .Z.apply(void 0, [\n                        _state.sent(),\n                        2\n                    ]), roundData = ref[0], claimableStatuses = ref[1];\n                    bufferSeconds = getState().bufferSeconds;\n                    bets = roundData.reduce(function(accum, round) {\n                        var ledger = userRounds[round.epoch.toNumber()];\n                        var ledgerAmount = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_16__/* .BigNumber.from */ .O$.from(ledger.amount);\n                        var closePrice = round.closePrice ? parseFloat((0,_ethersproject_units__WEBPACK_IMPORTED_MODULE_17__.formatUnits)(round.closePrice, 8)) : null;\n                        var lockPrice = round.lockPrice ? parseFloat((0,_ethersproject_units__WEBPACK_IMPORTED_MODULE_17__.formatUnits)(round.lockPrice, 8)) : null;\n                        var getRoundPosition = function() {\n                            if (!closePrice) {\n                                return null;\n                            }\n                            if (round.closePrice.eq(round.lockPrice)) {\n                                return state_types__WEBPACK_IMPORTED_MODULE_4__/* .BetPosition.HOUSE */ .Tu.HOUSE;\n                            }\n                            return round.closePrice.gt(round.lockPrice) ? state_types__WEBPACK_IMPORTED_MODULE_4__/* .BetPosition.BULL */ .Tu.BULL : state_types__WEBPACK_IMPORTED_MODULE_4__/* .BetPosition.BEAR */ .Tu.BEAR;\n                        };\n                        return (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_18__/* [\"default\"] */ .Z)(accum).concat([\n                            {\n                                id: null,\n                                hash: null,\n                                amount: parseFloat((0,_ethersproject_units__WEBPACK_IMPORTED_MODULE_17__.formatUnits)(ledgerAmount)),\n                                position: ledger.position,\n                                claimed: ledger.claimed,\n                                claimedAt: null,\n                                claimedHash: null,\n                                claimedBNB: 0,\n                                claimedNetBNB: 0,\n                                createdAt: null,\n                                updatedAt: null,\n                                block: 0,\n                                round: {\n                                    id: null,\n                                    epoch: round.epoch.toNumber(),\n                                    failed: (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getHasRoundFailed */ .HJ)(round.oracleCalled, round.closeTimestamp.eq(0) ? null : round.closeTimestamp.toNumber(), bufferSeconds),\n                                    startBlock: null,\n                                    startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n                                    startHash: null,\n                                    lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n                                    lockBlock: null,\n                                    lockPrice: lockPrice,\n                                    lockHash: null,\n                                    lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n                                    closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n                                    closeHash: null,\n                                    closeAt: null,\n                                    closePrice: closePrice,\n                                    closeBlock: null,\n                                    totalBets: 0,\n                                    totalAmount: parseFloat((0,_ethersproject_units__WEBPACK_IMPORTED_MODULE_17__.formatUnits)(round.totalAmount)),\n                                    bullBets: 0,\n                                    bullAmount: parseFloat((0,_ethersproject_units__WEBPACK_IMPORTED_MODULE_17__.formatUnits)(round.bullAmount)),\n                                    bearBets: 0,\n                                    bearAmount: parseFloat((0,_ethersproject_units__WEBPACK_IMPORTED_MODULE_17__.formatUnits)(round.bearAmount)),\n                                    position: getRoundPosition()\n                                }\n                            }, \n                        ]);\n                    }, []);\n                    return [\n                        2,\n                        {\n                            bets: bets,\n                            claimableStatuses: claimableStatuses,\n                            page: page,\n                            totalHistory: userRoundsLength.toNumber()\n                        }\n                    ];\n            }\n        });\n    });\n    return function(_, _1) {\n        return _ref.apply(this, arguments);\n    };\n}());\n// Leaderboard\nvar filterLeaderboard = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__/* .createAsyncThunk */ .hg)(\"predictions/filterLeaderboard\", function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z)(function(param, param1) {\n        var filters, extra, usersResponse, transformer;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_11__.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    filters = param.filters, extra = param1.extra;\n                    return [\n                        4,\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getPredictionUsers */ .D)({\n                            skip: 0,\n                            orderBy: filters.orderBy,\n                            where: (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_14__/* [\"default\"] */ .Z)({\n                                totalBets_gte: _config__WEBPACK_IMPORTED_MODULE_6__/* .LEADERBOARD_MIN_ROUNDS_PLAYED */ .eQ\n                            }, \"\".concat(filters.orderBy, \"_gt\"), 0)\n                        }, extra.api, extra.token.symbol)\n                    ];\n                case 1:\n                    usersResponse = _state.sent();\n                    transformer = (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .transformUserResponse */ .r3)(extra.token.symbol);\n                    return [\n                        2,\n                        {\n                            results: usersResponse.map(transformer)\n                        }\n                    ];\n            }\n        });\n    });\n    return function(_, _1) {\n        return _ref.apply(this, arguments);\n    };\n}());\nvar fetchAddressResult = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__/* .createAsyncThunk */ .hg)(\"predictions/fetchAddressResult\", function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z)(function(account, param) {\n        var rejectWithValue, extra, userResponse;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_11__.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    rejectWithValue = param.rejectWithValue, extra = param.extra;\n                    return [\n                        4,\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getPredictionUser */ .s9)(account, extra.api, extra.token.symbol)\n                    ];\n                case 1:\n                    userResponse = _state.sent();\n                    if (!userResponse) {\n                        return [\n                            2,\n                            rejectWithValue(account)\n                        ];\n                    }\n                    return [\n                        2,\n                        {\n                            account: account,\n                            data: (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .transformUserResponse */ .r3)(extra.token.symbol)(userResponse)\n                        }\n                    ];\n            }\n        });\n    });\n    return function(account, _) {\n        return _ref.apply(this, arguments);\n    };\n}());\nvar filterNextPageLeaderboard = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__/* .createAsyncThunk */ .hg)(\"predictions/filterNextPageLeaderboard\", function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z)(function(skip, param) {\n        var getState, extra, state, usersResponse, transformer;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_11__.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    getState = param.getState, extra = param.extra;\n                    state = getState();\n                    return [\n                        4,\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .getPredictionUsers */ .D)({\n                            skip: skip,\n                            orderBy: state.leaderboard.filters.orderBy,\n                            where: (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_14__/* [\"default\"] */ .Z)({\n                                totalBets_gte: _config__WEBPACK_IMPORTED_MODULE_6__/* .LEADERBOARD_MIN_ROUNDS_PLAYED */ .eQ\n                            }, \"\".concat(state.leaderboard.filters.orderBy, \"_gt\"), 0)\n                        }, extra.api, extra.token.symbol)\n                    ];\n                case 1:\n                    usersResponse = _state.sent();\n                    transformer = (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .transformUserResponse */ .r3)(extra.token.symbol);\n                    return [\n                        2,\n                        {\n                            results: usersResponse.map(transformer),\n                            skip: skip\n                        }\n                    ];\n            }\n        });\n    });\n    return function(skip, _) {\n        return _ref.apply(this, arguments);\n    };\n}());\nvar predictionsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__/* .createSlice */ .oM)({\n    name: \"predictions\",\n    initialState: initialState,\n    reducers: {\n        setLeaderboardFilter: function(state, action) {\n            state.leaderboard.filters = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, state.leaderboard.filters, action.payload);\n            // Anytime we filters change we need to reset back to page 1\n            state.leaderboard.skip = 0;\n            state.leaderboard.hasMoreResults = true;\n        },\n        setHistoryPaneState: function(state, action) {\n            state.isHistoryPaneOpen = action.payload;\n            state.historyFilter = state_types__WEBPACK_IMPORTED_MODULE_4__/* .HistoryFilter.ALL */ .dZ.ALL;\n        },\n        setChartPaneState: function(state, action) {\n            state.isChartPaneOpen = action.payload;\n        },\n        setChartView: function(state, action) {\n            state.chartView = action.payload;\n        },\n        setHistoryFilter: function(state, action) {\n            state.historyFilter = action.payload;\n        },\n        markAsCollected: function(state, action) {\n            state.claimableStatuses = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, state.claimableStatuses, action.payload);\n        },\n        setSelectedAddress: function(state, action) {\n            state.leaderboard.selectedAddress = action.payload;\n        }\n    },\n    extraReducers: function(builder) {\n        builder.addCase(_global_actions__WEBPACK_IMPORTED_MODULE_8__/* .resetUserState */ .tZ, function(state) {\n            state.claimableStatuses = {};\n            state.ledgers = {};\n            state.isFetchingHistory = false;\n            state.history = [];\n            state.hasHistoryLoaded = false;\n            state.totalHistory = 0;\n            state.currentHistoryPage = 1;\n        });\n        // Leaderboard filter\n        builder.addCase(filterLeaderboard.pending, function(state) {\n            // Only mark as loading if we come from Fetched. This allows initialization.\n            if (state.leaderboard.loadingState === config_constants_types__WEBPACK_IMPORTED_MODULE_5__/* .FetchStatus.Fetched */ .iF.Fetched) {\n                state.leaderboard.loadingState = config_constants_types__WEBPACK_IMPORTED_MODULE_5__/* .FetchStatus.Fetching */ .iF.Fetching;\n            }\n        });\n        builder.addCase(filterLeaderboard.fulfilled, function(state, action) {\n            var results = action.payload.results;\n            state.leaderboard.loadingState = config_constants_types__WEBPACK_IMPORTED_MODULE_5__/* .FetchStatus.Fetched */ .iF.Fetched;\n            state.leaderboard.results = results;\n            if (results.length < _helpers__WEBPACK_IMPORTED_MODULE_7__/* .LEADERBOARD_RESULTS_PER_PAGE */ .ub) {\n                state.leaderboard.hasMoreResults = false;\n            }\n            // Populate address results to reduce calls\n            state.leaderboard.addressResults = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, state.leaderboard.addressResults, results.reduce(function(accum, result) {\n                return (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, accum), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_14__/* [\"default\"] */ .Z)({}, result.id, result));\n            }, {}));\n        });\n        // Leaderboard account result\n        builder.addCase(fetchAddressResult.pending, function(state) {\n            state.leaderboard.loadingState = config_constants_types__WEBPACK_IMPORTED_MODULE_5__/* .FetchStatus.Fetching */ .iF.Fetching;\n        });\n        builder.addCase(fetchAddressResult.fulfilled, function(state, action) {\n            var _payload = action.payload, account = _payload.account, data = _payload.data;\n            state.leaderboard.loadingState = config_constants_types__WEBPACK_IMPORTED_MODULE_5__/* .FetchStatus.Fetched */ .iF.Fetched;\n            state.leaderboard.addressResults[account] = data;\n        });\n        builder.addCase(fetchAddressResult.rejected, function(state, action) {\n            state.leaderboard.loadingState = config_constants_types__WEBPACK_IMPORTED_MODULE_5__/* .FetchStatus.Fetched */ .iF.Fetched // TODO: should handle error\n            ;\n            state.leaderboard.addressResults[action.payload] = null;\n        });\n        // Leaderboard next page\n        builder.addCase(filterNextPageLeaderboard.pending, function(state) {\n            state.leaderboard.loadingState = config_constants_types__WEBPACK_IMPORTED_MODULE_5__/* .FetchStatus.Fetching */ .iF.Fetching;\n        });\n        builder.addCase(filterNextPageLeaderboard.fulfilled, function(state, action) {\n            var _payload = action.payload, results = _payload.results, skip = _payload.skip;\n            state.leaderboard.loadingState = config_constants_types__WEBPACK_IMPORTED_MODULE_5__/* .FetchStatus.Fetched */ .iF.Fetched;\n            state.leaderboard.results = (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_18__/* [\"default\"] */ .Z)(state.leaderboard.results).concat((0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_18__/* [\"default\"] */ .Z)(results));\n            state.leaderboard.skip = skip;\n            if (results.length < _helpers__WEBPACK_IMPORTED_MODULE_7__/* .LEADERBOARD_RESULTS_PER_PAGE */ .ub) {\n                state.leaderboard.hasMoreResults = false;\n            }\n        });\n        // Ledger (bet) records\n        builder.addCase(fetchLedgerData.fulfilled, function(state, action) {\n            state.ledgers = lodash_merge__WEBPACK_IMPORTED_MODULE_1___default()({}, state.ledgers, action.payload);\n        });\n        // Get static market data\n        builder.addCase(fetchPredictionData.fulfilled, function(state, action) {\n            var _payload = action.payload, status = _payload.status, currentEpoch = _payload.currentEpoch, intervalSeconds = _payload.intervalSeconds, minBetAmount = _payload.minBetAmount, rounds = _payload.rounds, claimableStatuses = _payload.claimableStatuses, ledgers = _payload.ledgers;\n            var allRoundData = lodash_merge__WEBPACK_IMPORTED_MODULE_1___default()({}, state.rounds, rounds);\n            var newRounds = lodash_pickBy__WEBPACK_IMPORTED_MODULE_3___default()(allRoundData, function(value, key) {\n                return Number(key) > state.currentEpoch - _config__WEBPACK_IMPORTED_MODULE_6__/* .PAST_ROUND_COUNT */ .v9;\n            });\n            // If the round has change add a new future round\n            if (state.currentEpoch !== currentEpoch) {\n                var newestRound = lodash_maxBy__WEBPACK_IMPORTED_MODULE_0___default()(Object.values(state.rounds), \"epoch\");\n                var futureRound = (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .makeFutureRoundResponse */ .CM)(newestRound.epoch + 1, newestRound.startTimestamp + intervalSeconds + _config__WEBPACK_IMPORTED_MODULE_6__/* .ROUND_BUFFER */ .fq);\n                newRounds = (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, newRounds), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_14__/* [\"default\"] */ .Z)({}, futureRound.epoch, futureRound));\n            }\n            state.status = status;\n            state.currentEpoch = currentEpoch;\n            state.intervalSeconds = intervalSeconds;\n            state.minBetAmount = minBetAmount;\n            state.claimableStatuses = lodash_merge__WEBPACK_IMPORTED_MODULE_1___default()({}, state.claimableStatuses, claimableStatuses);\n            state.ledgers = lodash_merge__WEBPACK_IMPORTED_MODULE_1___default()({}, state.ledgers, ledgers);\n            state.rounds = newRounds;\n        });\n        // Initialize predictions\n        builder.addCase(initializePredictions.fulfilled, function(state, action) {\n            var _payload = action.payload, status = _payload.status, currentEpoch = _payload.currentEpoch, intervalSeconds = _payload.intervalSeconds, rounds = _payload.rounds, claimableStatuses = _payload.claimableStatuses, ledgers = _payload.ledgers;\n            var futureRounds = [];\n            var currentRound = rounds[currentEpoch];\n            for(var i = 1; i <= _config__WEBPACK_IMPORTED_MODULE_6__/* .FUTURE_ROUND_COUNT */ .ND; i++){\n                futureRounds.push((0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .makeFutureRoundResponse */ .CM)(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i));\n            }\n            return (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, state), {\n                status: status,\n                currentEpoch: currentEpoch,\n                intervalSeconds: intervalSeconds,\n                claimableStatuses: claimableStatuses,\n                ledgers: ledgers,\n                rounds: lodash_merge__WEBPACK_IMPORTED_MODULE_1___default()({}, rounds, (0,_helpers__WEBPACK_IMPORTED_MODULE_7__/* .makeRoundData */ .D5)(futureRounds))\n            });\n        });\n        // History from the node\n        builder.addCase(fetchNodeHistory.pending, function(state) {\n            state.isFetchingHistory = true;\n        });\n        builder.addCase(fetchNodeHistory.rejected, function(state) {\n            state.isFetchingHistory = false;\n        });\n        builder.addCase(fetchNodeHistory.fulfilled, function(state, action) {\n            var _payload = action.payload, bets = _payload.bets, claimableStatuses = _payload.claimableStatuses, page = _payload.page, totalHistory = _payload.totalHistory;\n            state.isFetchingHistory = false;\n            state.history = page === 1 ? bets : (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_18__/* [\"default\"] */ .Z)(state.history).concat((0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_18__/* [\"default\"] */ .Z)(bets));\n            state.claimableStatuses = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)({}, state.claimableStatuses, claimableStatuses);\n            state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0;\n            state.totalHistory = totalHistory;\n            state.currentHistoryPage = page;\n        });\n    }\n});\nvar _actions = predictionsSlice.actions;\n// Actions\nvar setChartPaneState = _actions.setChartPaneState, setChartView = _actions.setChartView, setHistoryFilter = _actions.setHistoryFilter, setHistoryPaneState = _actions.setHistoryPaneState, markAsCollected = _actions.markAsCollected, setLeaderboardFilter = _actions.setLeaderboardFilter, setSelectedAddress = _actions.setSelectedAddress;\n/* harmony default export */ __webpack_exports__[\"ZP\"] = (predictionsSlice.reducer);\n\n\n/***/ }),\n\n/***/ 17823:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ZP\": function() { return /* binding */ ConfigProvider; },\n/* harmony export */   \"ZR\": function() { return /* binding */ useConfig; }\n/* harmony export */ });\n/* unused harmony export ConfigContext */\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2784);\n\n\nvar ConfigContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nfunction useConfig() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConfigContext);\n}\nfunction ConfigProvider(param) {\n    var children = param.children, config = param.config;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ConfigContext.Provider, {\n        value: config,\n        children: children\n    });\n}\n\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ context_PredictionConfigProviders; }\n});\n\n// EXTERNAL MODULE: ../../node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(52322);\n// EXTERNAL MODULE: ../../node_modules/react/index.js\nvar react = __webpack_require__(2784);\n// EXTERNAL MODULE: ./src/contexts/LocalRedux/Provider.tsx\nvar Provider = __webpack_require__(99022);\n// EXTERNAL MODULE: ../../node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js + 2 modules\nvar redux_toolkit_esm = __webpack_require__(34253);\n;// CONCATENATED MODULE: ./src/contexts/LocalRedux/makeStore.ts\n\nfunction makeStore(reducer) {\n    var preloadedState = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : undefined, extraArgument = arguments.length > 2 ? arguments[2] : void 0;\n    return (0,redux_toolkit_esm/* configureStore */.xC)({\n        reducer: reducer,\n        middleware: function(getDefaultMiddleware) {\n            return getDefaultMiddleware({\n                thunk: {\n                    extraArgument: extraArgument\n                }\n            });\n        },\n        preloadedState: preloadedState\n    });\n}\n\n// EXTERNAL MODULE: ./src/state/types.ts\nvar types = __webpack_require__(93638);\n// EXTERNAL MODULE: ./src/state/predictions/index.ts\nvar predictions = __webpack_require__(85251);\n// EXTERNAL MODULE: ../../node_modules/next/router.js\nvar router = __webpack_require__(5632);\n// EXTERNAL MODULE: ../../node_modules/lodash/toUpper.js\nvar toUpper = __webpack_require__(79085);\nvar toUpper_default = /*#__PURE__*/__webpack_require__.n(toUpper);\n// EXTERNAL MODULE: ./src/views/Predictions/context/ConfigProvider.tsx\nvar ConfigProvider = __webpack_require__(17823);\n// EXTERNAL MODULE: ./src/config/constants/contracts.ts\nvar contracts = __webpack_require__(51642);\n// EXTERNAL MODULE: ./src/config/constants/endpoints.ts\nvar endpoints = __webpack_require__(10494);\n// EXTERNAL MODULE: ./src/utils/addressHelpers.ts\nvar addressHelpers = __webpack_require__(70627);\n// EXTERNAL MODULE: ../../packages/tokens/src/56.ts\nvar _56 = __webpack_require__(6978);\n// EXTERNAL MODULE: ../../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\nvar bignumber = __webpack_require__(10528);\n;// CONCATENATED MODULE: ./src/views/Predictions/context/config.ts\n\n\n\n\n\nvar DEFAULT_MIN_PRICE_USD_DISPLAYED = bignumber/* BigNumber.from */.O$.from(10000);\n/* harmony default export */ var context_config = ({\n    BNB: {\n        address: (0,addressHelpers/* getAddress */.Kn)(contracts/* default.predictionsBNB */.Z.predictionsBNB),\n        api: endpoints/* GRAPH_API_PREDICTION_BNB */.GZ,\n        chainlinkOracleAddress: (0,addressHelpers/* getAddress */.Kn)(contracts/* default.chainlinkOracleBNB */.Z.chainlinkOracleBNB),\n        minPriceUsdDisplayed: DEFAULT_MIN_PRICE_USD_DISPLAYED,\n        displayedDecimals: 4,\n        token: _56/* bscTokens.bnb */.d.bnb\n    },\n    CAKE: {\n        address: (0,addressHelpers/* getAddress */.Kn)(contracts/* default.predictionsCAKE */.Z.predictionsCAKE),\n        api: endpoints/* GRAPH_API_PREDICTION_CAKE */.fO,\n        chainlinkOracleAddress: (0,addressHelpers/* getAddress */.Kn)(contracts/* default.chainlinkOracleCAKE */.Z.chainlinkOracleCAKE),\n        minPriceUsdDisplayed: DEFAULT_MIN_PRICE_USD_DISPLAYED,\n        displayedDecimals: 4,\n        token: _56/* bscTokens.cake */.d.cake\n    }\n});\n\n;// CONCATENATED MODULE: ./src/views/Predictions/context/PredictionConfigProviders.tsx\n\n\n\n\n\n\n\n\n\n\nvar PREDICTION_TOKEN_KEY = \"prediction-token\";\nvar PredictionConfigProviders = function(param) {\n    var children = param.children;\n    var query = (0,router.useRouter)().query;\n    var token = query.token;\n    var ref = (0,react.useState)(function() {\n        var initToken = localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(PREDICTION_TOKEN_KEY);\n        if ([\n            types/* PredictionSupportedSymbol.BNB */.ru.BNB,\n            types/* PredictionSupportedSymbol.CAKE */.ru.CAKE\n        ].includes(initToken)) {\n            return initToken;\n        }\n        return types/* PredictionSupportedSymbol.CAKE */.ru.CAKE;\n    }), selectedToken = ref[0], setConfig = ref[1];\n    (0,react.useEffect)(function() {\n        var upperToken = toUpper_default()(token);\n        if ([\n            types/* PredictionSupportedSymbol.BNB */.ru.BNB,\n            types/* PredictionSupportedSymbol.CAKE */.ru.CAKE\n        ].includes(upperToken)) {\n            setConfig(upperToken);\n            localStorage === null || localStorage === void 0 ? void 0 : localStorage.setItem(PREDICTION_TOKEN_KEY, upperToken);\n        }\n    }, [\n        token\n    ]);\n    var config = (0,react.useMemo)(function() {\n        return context_config[selectedToken];\n    }, [\n        selectedToken\n    ]);\n    var store = (0,react.useMemo)(function() {\n        return makeStore(predictions/* default */.ZP, predictions/* initialState */.E3, config);\n    }, [\n        config\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(ConfigProvider/* default */.ZP, {\n        config: config,\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Provider/* default */.Z, {\n            store: store,\n            children: children\n        })\n    });\n};\n/* harmony default export */ var context_PredictionConfigProviders = (PredictionConfigProviders);\n\n\n/***/ }),\n\n/***/ 95134:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92228);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3411);\n/* harmony import */ var styled_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78545);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\nvar CardBody = styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-df4f0a61-0\"\n})(_templateObject(), styled_system__WEBPACK_IMPORTED_MODULE_1__/* .space */ .Dh);\nCardBody.defaultProps = {\n    p: \"24px\"\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (CardBody);\n\n\n/***/ }),\n\n/***/ 52180:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(70865);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96670);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2784);\n/* harmony import */ var _Svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62923);\n\n\n\n\n\nvar Icon = function(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Svg__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z, (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)({\n        viewBox: \"0 0 24 24\"\n    }, props), {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n            d: \"M11 5V16.17L6.11997 11.29C5.72997 10.9 5.08997 10.9 4.69997 11.29C4.30997 11.68 4.30997 12.31 4.69997 12.7L11.29 19.29C11.68 19.68 12.31 19.68 12.7 19.29L19.29 12.7C19.68 12.31 19.68 11.68 19.29 11.29C18.9 10.9 18.27 10.9 17.88 11.29L13 16.17V5C13 4.45 12.55 4 12 4C11.45 4 11 4.45 11 5Z\"\n        })\n    }));\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Icon);\n\n\n/***/ }),\n\n/***/ 77651:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(70865);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96670);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2784);\n/* harmony import */ var _Svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62923);\n\n\n\n\n\nvar Icon = function(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Svg__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z, (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)({\n        viewBox: \"0 0 24 24\"\n    }, props), {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n            d: \"M8.11997 9.29006L12 13.1701L15.88 9.29006C16.27 8.90006 16.9 8.90006 17.29 9.29006C17.68 9.68006 17.68 10.3101 17.29 10.7001L12.7 15.2901C12.31 15.6801 11.68 15.6801 11.29 15.2901L6.69997 10.7001C6.30997 10.3101 6.30997 9.68006 6.69997 9.29006C7.08997 8.91006 7.72997 8.90006 8.11997 9.29006Z\"\n        })\n    }));\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Icon);\n\n\n/***/ }),\n\n/***/ 81916:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(70865);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96670);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52322);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2784);\n/* harmony import */ var _Svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62923);\n\n\n\n\n\nvar Icon = function(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Svg__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z, (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)({\n        viewBox: \"0 0 24 24\"\n    }, props), {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n            d: \"M8.11997 14.7101L12 10.8301L15.88 14.7101C16.27 15.1001 16.9 15.1001 17.29 14.7101C17.68 14.3201 17.68 13.6901 17.29 13.3001L12.7 8.7101C12.31 8.3201 11.68 8.3201 11.29 8.7101L6.69997 13.3001C6.30997 13.6901 6.30997 14.3201 6.69997 14.7101C7.08997 15.0901 7.72997 15.1001 8.11997 14.7101Z\"\n        })\n    }));\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Icon);\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","d","LocalContext","__WEBPACK_DEFAULT_EXPORT__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","createContext","param","children","store","jsx","zt","context","useLocalDispatch","react__WEBPACK_IMPORTED_MODULE_0__","lodash_noop__WEBPACK_IMPORTED_MODULE_1__","lodash_noop__WEBPACK_IMPORTED_MODULE_1___default","n","_Provider__WEBPACK_IMPORTED_MODULE_2__","ref","localContext","useContext","A","emptyFn","useCallback","dispatch","REWARD_RATE","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","ROUND_BUFFER","PAST_ROUND_COUNT","ROUNDS_PER_PAGE","config__WEBPACK_IMPORTED_MODULE_0__","hJ","LEADERBOARD_RESULTS_PER_PAGE","Result","fetchUserRounds","fetchUsersRoundsLength","getBetHistory","getClaimStatuses","getFilteredBets","getHasRoundFailed","getLedgerData","getPredictionData","getPredictionUser","getPredictionUsers","getRoundResult","getRoundsData","makeFutureRoundResponse","makeLedgerData","makeRoundData","parseBigNumberObj","serializePredictionsRoundsResponse","transformBetResponse","transformUserResponse","_async_to_generator","_define_property","_object_spread","_object_spread_props","_sliced_to_array","_tagged_template_literal","tslib_es6","dist","endpoints","bignumber","types","multicall","contractHelpers","predictions","bignumbers","getUserBaseFields","tokenSymbol","config","numberOrNull","value","valueNum","Number","isNaN","transformBetResponseCAKE","betResponse","bet","id","hash","block","utils_numberOrNull","amount","parseFloat","position","Tu","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedCAKE","claimedNetBNB","claimedNetCAKE","createdAt","updatedAt","user","transformUserResponseCAKE","round","transformRoundResponseCAKE","userResponse","totalBets","totalBetsBull","totalBetsBear","totalCAKE","totalCAKEBull","totalCAKEBear","totalBetsClaimed","totalCAKEClaimed","winRate","averageCAKE","netCAKE","totalBNB","totalBNBBull","totalBNBBear","totalBNBClaimed","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startBlock","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","_bets","bets","HOUSE","map","transformBetResponseBNB","transformUserResponseBNB","transformRoundResponseBNB","_templateObject","data","Z","_templateObject1","_templateObject2","_templateObject3","_templateObject4","_ref","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","filter","dZ","COLLECTED","UNCOLLECTED","ALL","getTotalWonMarket","market","total","concat","totalTreasury","Math","max","ref1","BNBMarket","CAKEMarket","totalWonBNB","totalWonCAKE","__generator","_state","label","Promise","all","request","GZ","gql","fO","apply","sent","where","first","skip","api","response","_arguments","arguments","length","account","epochs","address","ledgerCalls","name","params","v","abi","calls","defaultPredictionUserOptions","orderBy","orderDir","oracleCalled","closeTimestamp","buffer","closeTimestampMs","isFinite","Date","now","options","users","toLowerCase","claimableCalls","claimableResponses","reduce","accum","claimableResponse","index","claimable","_claimableResponse","staticCalls","ref2","intervalSeconds","ref3","minBetAmount","ref4","paused","method","status","Gw","PAUSED","toNumber","toString","startTimestamp","lockTimestamp","_Y","toJSON","rewardBaseCalAmount","rewardAmount","lockOracleId","closeOracleId","rounds","serializePredictionsLedgerResponse","ledgerResponse","ledgers","eq","Object","keys","key","type","O$","from","contract","trys","qi","getUserRoundsLength","cursor","size","yg","getUserRounds","useChartView","useCollectWinningModalProps","useGetBetByEpoch","useGetBufferSeconds","useGetCurrentEpoch","useGetCurrentHistoryPage","useGetCurrentRoundCloseTimestamp","useGetHasHistoryLoaded","useGetHistory","useGetHistoryFilter","useGetIntervalSeconds","useGetIsClaimable","useGetIsFetchingHistory","useGetLeaderboardFilters","useGetLeaderboardHasMoreResults","useGetLeaderboardLoadingState","useGetLeaderboardResults","useGetLeaderboardSkip","useGetMinBetAmount","useGetOrFetchLeaderboardAddressResult","useGetPredictionsStatus","useGetRoundsByCloseOracleId","useGetSortedRounds","useGetSortedRoundsCurrentEpoch","useIsChartPaneOpen","useIsHistoryPaneOpen","useStatModalProps","react","utils","es","Provider","useSelector","gR","orderBy_default","reselect_es","helpers","selectCurrentEpoch","state","selectRounds","selectLedgers","selectClaimableStatuses","claimableStatuses","selectMinBetAmount","selectIntervalSeconds","getRoundsByCloseOracleIdSelector","P1","parsed","zN","getBigNumberRounds","getSortedRoundsSelector","values","getSortedRoundsCurrentEpochSelector","sortedRounds","getMinBetAmountSelector","getCurrentRoundCloseTimestampSelector","currentRound","LocalRedux_useSelector","getBetByEpochSelector","useMemo","getIsClaimableSelector","isHistoryPaneOpen","isChartPaneOpen","chartView","historyFilter","hasHistoryLoaded","currentHistoryPage","bufferSeconds","isFetchingHistory","history","leaderboard","loadingState","results","filters","hasMoreResults","addressResult","addressResults","useEffect","UJ","nI","selectedAddress","result","leaderboardLoadingState","isLoadingHistory","initialState","setLeaderboardFilter","filterNextPageLeaderboard","fetchPredictionData","fetchLedgerData","markAsCollected","setHistoryFilter","setChartView","filterLeaderboard","setSelectedAddress","fetchAddressResult","setChartPaneState","fetchNodeHistory","initializePredictions","setHistoryPaneState","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_10__","_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_14__","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_13__","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_12__","_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_15__","_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_18__","_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_11__","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_9__","_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_16__","_ethersproject_units__WEBPACK_IMPORTED_MODULE_17__","lodash_maxBy__WEBPACK_IMPORTED_MODULE_0__","lodash_maxBy__WEBPACK_IMPORTED_MODULE_0___default","lodash_merge__WEBPACK_IMPORTED_MODULE_1__","lodash_merge__WEBPACK_IMPORTED_MODULE_1___default","lodash_range__WEBPACK_IMPORTED_MODULE_2__","lodash_range__WEBPACK_IMPORTED_MODULE_2___default","lodash_pickBy__WEBPACK_IMPORTED_MODULE_3__","lodash_pickBy__WEBPACK_IMPORTED_MODULE_3___default","state_types__WEBPACK_IMPORTED_MODULE_4__","config_constants_types__WEBPACK_IMPORTED_MODULE_5__","_config__WEBPACK_IMPORTED_MODULE_6__","_helpers__WEBPACK_IMPORTED_MODULE_7__","_global_actions__WEBPACK_IMPORTED_MODULE_8__","INITIAL","RU","Chainlink","isLoading","totalHistory","iF","Idle","timePeriod","hg","extra","marketData","roundsResponse","initialRoundData","initializedData","ledgerResponses","v9","$8","reduxNodeRound","WB","Tq","jG","a8","liveCurrentAndRecent","roundData","publicData","param1","_","_1","_page","page","getState","userRoundsLength","emptyResult","maxPages","userRounds","t$","lte","ceil","sub","oO","lt","epochStr","ledger","ledgerAmount","formatUnits","HJ","gt","usersResponse","transformer","D","totalBets_gte","eQ","token","symbol","r3","rejectWithValue","s9","predictionsSlice","oM","reducers","action","payload","extraReducers","builder","addCase","tZ","pending","Fetched","Fetching","fulfilled","ub","_payload","rejected","allRoundData","newRounds","newestRound","futureRound","CM","fq","futureRounds","i","ND","D5","_actions","actions","reducer","ConfigProvider","useConfig","ConfigContext","context_PredictionConfigProviders","jsx_runtime","redux_toolkit_esm","router","toUpper","toUpper_default","contracts","addressHelpers","_56","DEFAULT_MIN_PRICE_USD_DISPLAYED","context_config","BNB","Kn","predictionsBNB","chainlinkOracleAddress","chainlinkOracleBNB","minPriceUsdDisplayed","displayedDecimals","bnb","CAKE","predictionsCAKE","chainlinkOracleCAKE","cake","PREDICTION_TOKEN_KEY","query","useRouter","useState","initToken","localStorage","getItem","ru","includes","selectedToken","setConfig","upperToken","setItem","makeStore","preloadedState","undefined","extraArgument","xC","middleware","getDefaultMiddleware","thunk","ZP","E3","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_2__","styled_system__WEBPACK_IMPORTED_MODULE_1__","CardBody","div","withConfig","componentId","Dh","defaultProps","p","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__","_Svg__WEBPACK_IMPORTED_MODULE_2__","Icon","props","viewBox"],"sourceRoot":""}